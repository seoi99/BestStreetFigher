{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/input.js","webpack:///./lib/sound.js","webpack:///./lib/bullet.js","webpack:///./lib/sprite.js","webpack:///./lib/hpbar.js","webpack:///./lib/player.js","webpack:///./lib/vsMode.js","webpack:///./lib/background.js","webpack:///./lib/enemy.js","webpack:///./lib/trainMode.js","webpack:///./lib/game.js","webpack:///./lib/music.js","webpack:///./lib/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Input","[object Object]","this","restart","input","LEFT","RIGHT","DOWN","ATTACK","REVIVE","KICK","SHOOT","SPECIAL","attack","disable","counter","keys","document","addEventListener","e","keyCode","sound","createElement","setAttribute","style","display","src","play","then","console","log","pause","bullet","ctx","x","y","dir","w","h","speed","image","Image","hit","collide","drawImage","shoot","Sprite","char","frame","maxFrame","onload","width","height","action","HPBar","len","fixlen","center","color","fillStyle","fillRect","strokeStyle","lineWidth","strokeRect","dmg","player","draw","keyboard","rw","rh","stop","move","fps","stun","block","sprite","temp","desc","sControl","bControl","delay","dead","gravity","gravitySpeed","fpsControl","save","scale","restore","dullMove","update","updateDir","playSound","specialAction","enemyX","moveAction","attackAction","Math","abs","enemy","meleeSound","rangeSound","borderLimit","hitBottom","vsMode","p1","p2","movement","p1hp","p2hp","over","time","bul","stunned","bulControl","fightControl","soundControl","hpControl","playersCollision","font","textAlign","fillText","gameover","gameConstraint","win","removePlayer","Background","maxWidth","maxHeight","enemy_Enemy","alive","transparent","aType","currentAttack","dull","blocked","globalAlpha","maxTime","type","idx","floor","random","toggleStatus","updateAttackSprite","updateX","setup","trainMode","test","kill","enemyHp","p1Hp","enemyStr","respTime","hp","prop","hitChance","totalScore","enemydead","playerToEnemy","enemyToPlayer","range","getRand","pHp","enemyhp","collision","respawn","trainingMode","lib_game","background","gameControl","training","vs","start","text","measureText","layerX","layerY","createClickBox","gamefun","intro","requestAnimationFrame","lib_music","bgm","getElementById","bgsound","icon","paused","className","canvas","getContext","game","musicAction"],"mappings":"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","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\nexport default class Input {\n  constructor() {\n      this.restart = false;\n      this.input = {\n        LEFT: false,\n        RIGHT: false,\n        DOWN: false,\n        ATTACK: false,\n        REVIVE: false,\n        KICK: false,\n        SHOOT: false,\n        SPECIAL: false\n      };\n      this.attack = false;\n      this.disable = false;\n      this.counter = 0;\n  }\n  gameControl() {\n    this.input.REVIVE = false;\n  }\n\n  movement(keys=[65,68,84,89,85]) {\n    if (!this.disable) {\n    document.addEventListener(\"keydown\", e => {\n      const key = e.keyCode;\n        switch (key) {\n        case keys[0]: this.input.LEFT = true; break;\n        case 83:\n        case 40:\n          this.input.DOWN = true; break;\n        case keys[1]: this.input.RIGHT = true; break;\n        case keys[2]:\n          this.attack = true;\n          this.counter++;\n          this.counter > 2 ? this.input.ATTACK = false : this.input.ATTACK = true;\n        break;\n        case keys[3]:\n          this.attack = true;\n          this.counter++;\n          this.counter > 3 ? this.input.KICK = false : this.input.KICK = true;\n          break;\n          case keys[4]:\n          this.input.SPECIAL = true;\n          break;\n        default:\n    }\n  });\n    document.addEventListener(\"keyup\", e => {\n        const key = e.keyCode;\n        switch (key) {\n          case keys[0]: this.input.LEFT = false; break;\n          case 40:\n          case 83:\n            this.input.DOWN = false; break;\n          case keys[1]: this.input.RIGHT = false; break;\n          case keys[2]:\n            this.attack = false;\n            this.input.ATTACK = false;\n            this.counter = 0;\n           break;\n          case keys[3]:\n            this.attack = false;\n            this.input.KICK = false;\n            this.counter = 0;\n          break;\n          case keys[4]:\n            this.input.SPECIAL = false;\n        }\n    })\n    }\n  }\n}\n","class Sound {\n  constructor() {\n    this.sound = document.createElement(\"audio\");\n    this.sound.setAttribute(\"preload\", \"auto\");\n    this.sound.setAttribute(\"controls\", \"none\");\n    this.sound.style.display = \"none\";\n  }\n\n  play(src) {\n    this.sound.src = src;\n    this.sound.play().then(() => console.log());\n  }\n\n  stop() {\n    this.sound.pause();\n  }\n}\n\nexport default Sound;\n","\nimport Sound from './sound.js'\n\nclass Bullet {\n  constructor(ctx, x, y, dir) {\n    this.ctx = ctx;\n    this.w = 40;\n    this.h = 40;\n    this.x =  x + dir * 50\n    this.y = y + 35;\n    this.speed = dir * 10;\n    this.image = new Image();\n    this.image.src = dir > 0 ? `./asset/bullet.png` : `./asset/bullet_left.png`;\n    this.hit = false;\n    this.collide = false;\n    this.sound = new Sound();\n    this.m = true;\n  }\n\n  shoot() {\n    this.ctx.drawImage(this.image, this.x, this.y, this.w, this.h);\n    this.x += this.speed;\n  }\n\n  playSound() {\n    this.sound.play('./asset/sound/hadouken.mp3');\n  }\n\n  draw() {\n    if (!this.collide) {\n      this.shoot()\n\n    }\n\n  }\n\n\n\n\n}\n\nexport default Bullet;\n","\n\nexport default class Sprite {\n  constructor(char) {\n    this.char = char;\n    this.image = new Image();\n    this.image.src = `./asset/${this.char}/idle.png`;\n    this.frame = 0;\n    this.maxFrame = 3;\n    this.image.onload = () => {\n      this.w = this.image.width / (this.maxFrame + 1);\n      this.h = this.image.height;\n    }\n\n  }\n\n  update(action) {\n    if (this.char === \"ken\") {\n      switch (action) {\n        case \"special_kick\":\n          this.maxFrame = 5;\n          this.image.src = `./asset/${this.char}/${action}.png`;\n          break;\n        case \"kick\":\n        case \"moving\":\n          this.maxFrame = 4;\n          this.image.src = `./asset/${this.char}/${action}.png`;\n          break;\n        case \"stun\":\n        case \"dead\":\n          this.maxFrame = 3;\n          this.image.src = `./asset/${this.char}/${action}.png`;\n          break;\n        case \"punch\":\n        case \"win\":\n          this.maxFrame = 2;\n          this.image.src = `./asset/${this.char}/${action}.png`;\n          break;\n        case \"shot\":\n          this.maxFrame = 1;\n          this.image.src = `./asset/${this.char}/${action}.png`;\n          break;\n        case \"block\":\n          this.maxFrame = 0;\n          this.image.src = `./asset/${this.char}/${action}.png`;\n          break;\n        default:\n          this.maxFrame = 3;\n          this.image.src = `./asset/${this.char}/idle.png`;\n          break;\n      }\n    }\n    if (this.char === \"ryu\") {\n      switch (action) {\n        case \"special_kick\":\n          this.maxFrame = 5;\n          this.image.src = `./asset/${this.char}/${action}.png`;\n          break;\n        case \"moving\":\n          this.maxFrame = 4;\n          this.image.src = `./asset/${this.char}/${action}.png`;\n          break;\n        case \"kick\":\n        case \"punch\":\n        case \"shot\":\n        case \"stun\":\n        case \"win\":\n          this.maxFrame = 2;\n          this.image.src = `./asset/${this.char}/${action}.png`;\n          break;\n        case \"block\":\n          this.maxFrame = 0;\n          this.image.src = `./asset/${this.char}/${action}.png`;\n          break;\n        case \"dead\":\n          this.maxFrame = 3;\n          this.image.src = `./asset/${this.char}/${action}.png`;\n          break;\n        default:\n          this.maxFrame = 3;\n          this.image.src = `./asset/${this.char}/idle.png`;\n          break;\n      }\n    }\n  }\n\n}\n","export default class HPBar {\n  constructor(ctx, x,y, len) {\n    this.ctx = ctx;\n    this.x = x;\n    this.y = y;\n    this.len = len;\n    this.fixlen = len;\n    this.center = len/2;\n  }\n\n  draw(color=\"yellow\") {\n    this.ctx.fillStyle = \"red\";\n    this.ctx.fillRect(this.x,this.y, this.fixlen, 30);\n    this.ctx.fillStyle = color;\n    this.ctx.fillRect(this.x,this.y, this.len, 30);\n    this.ctx.strokeStyle = \"white\";\n    this.ctx.lineWidth = 2;\n    this.ctx.strokeRect(this.x, this.y, this.fixlen, 30);\n  }\n\n  enemyhp(x,y,h) {\n    if (this.len >= 0) {\n    this.ctx.fillStyle = \"red\";\n    this.ctx.fillRect(x + this.center, y - 20, this.fixlen, h);\n    this.ctx.fillStyle = \"yellow\";\n    this.ctx.fillRect(x + this.center, y - 20, this.len, h);\n    this.ctx.strokeStyle = \"white\";\n    this.ctx.lineWidth = 2;\n    this.ctx.strokeRect(x + this.center, y - 20, this.len, h);\n    }\n  }\n\n  block(d=0.05) {\n    this.len -= d\n  }\n  hit(dmg=1) {\n    this.len -= dmg;\n  }\n}\n","import Input from './input.js';\nimport Bullet from './bullet.js';\nimport Sprite from './sprite.js';\nimport Sound from './sound.js'\nimport Hp from './hpbar.js'\n\nclass Player {\n  constructor(ctx,x = 300, char, dir) {\n    this.ctx = ctx;\n    this.draw = this.draw.bind(this);\n    this.keyboard = new Input();\n    this.frame = 0;\n    this.rw = 140;\n    this.rh = 160;\n    this.x = x;\n    this.y = 300;\n    this.speed = 0;\n    this.stop = 0;\n    this.move = 5;\n    this.bullet = null;\n    this.fps = 0;\n    this.stun = false;\n    this.block = false;\n    this.sprite = new Sprite(char);\n    this.dir = dir;\n    this.temp = \"\";\n    this.desc = \"\";\n    this.sControl = true;\n    this.bControl = true;\n    this.sound = new Sound();\n    this.delay = 0;\n    this.dead = false;\n    this.gravity = 0.05;\n    this.gravitySpeed = 0;\n  }\n\n  fpsControl(fps) {\n    this.fps++;\n    if (this.desc !== this.temp) {\n      this.desc = this.temp;\n      this.frame = 0;\n    }\n    if (this.fps > fps) {\n      this.fps = 0;\n      if (this.dead) {\n        this.frame >= this.sprite.maxFrame? this.frame = this.sprite.maxFrame : this.frame++;\n      } else {\n        this.frame++;\n        if (this.frame > this.sprite.maxFrame) this.frame = 0\n      }\n    }\n  }\n\n\n\n  draw() {\n\n    this.fpsControl(10);\n    if (this.bullet) {\n      this.bullet.draw()\n    }\n    this.ctx.save();\n    this.ctx.scale(this.dir,1);\n    this.ctx.drawImage(this.sprite.image, this.sprite.w * this.frame, 0, this.sprite.w, this.sprite.h, this.dir * this.x,this.y, this.dir * this.rw, this.rh);\n    this.ctx.restore();\n  }\n\n\n  updateDir(x) {\n    if (this.x < x) {\n      this.dir = 1;\n      if (this.keyboard.input.LEFT && this.dullMove((x))) this.speed = -this.move\n    } else {\n      if (this.keyboard.input.RIGHT && this.dullMove((x))) this.speed = this.move;\n      this.dir = -1;\n    }\n  }\n  moveAction(x) {\n    if (this.keyboard.input.LEFT || this.keyboard.input.RIGHT) {\n      if (this.block) {\n        this.sprite.update(\"block\");\n        this.temp = \"block\";\n        // if (this.sControl) {\n        //   this.sound.play('./asset/sound/block.wav');\n        //   this.sControl = false;\n        // }\n        this.move = 0.5;\n      }\n      else {\n        this.sprite.update(\"moving\");\n        this.temp = \"moving\";\n        this.move = 5;\n      }\n      this.updateDir(x);\n      if (this.keyboard.input.LEFT && !(this.dullMove((x)))) this.speed = -this.move;\n      else if (this.keyboard.input.RIGHT && !(this.dullMove((x)))) this.speed = this.move\n    } else if (this.stun) {\n      this.sprite.update(\"stun\");\n      this.temp = \"stun\";\n      this.move = 0;\n      this.stun = false;\n    }\n  }\n\n\n  specialAction() {\n    if (this.keyboard.input.SPECIAL) {\n      if (this.keyboard.input.ATTACK && !this.keyboard.input.KICK) {\n        this.sprite.update(\"shot\");\n        this.temp = \"shot\"\n        if (!this.bullet) {\n          this.bullet = new Bullet(this.ctx, this.x, this.y, this.dir);\n        }\n        if (this.keyboard.input.SHOOT) {\n          this.bullet.playSound();\n          this.keyboard.input.SHOOT = false;\n        }\n        this.delay++;\n        if (this.delay > 20) {\n          this.keyboard.input.SPECIAL = false;\n          this.keyboard.input.ATTACK = false;\n        }\n\n      } else if (!this.keyboard.input.ATTACK && this.keyboard.input.KICK) {\n        this.sprite.update(\"special_kick\");\n        this.temp = \"special_kick\"\n        this.delay++;\n        this.x += this.dir * 2;\n        if (this.delay > 40) {\n          this.keyboard.input.SPECIAL = false;\n          this.keyboard.input.KICK = false;\n        }\n      } else {\n        this.delay = 0;\n        this.keyboard.input.SHOOT = true;\n      }\n    }\n  }\n\n\n  attackAction() {\n    if (this.keyboard.input.ATTACK && !this.stun) {\n          this.sprite.update(\"punch\");\n          this.temp = \"punch\";\n        } else if (this.keyboard.input.KICK && !this.stun) {\n          this.sprite.update(\"kick\");\n          this.temp = \"kick\";\n        }\n        this.specialAction();\n    }\n\n\n  action(enemyX) {\n    this.sprite.update();\n    this.speed = this.stop;\n    this.moveAction(enemyX);\n    this.attackAction();\n  }\n\n  dullMove(enemyX) {\n    return Math.abs(this.x - enemyX) < 90\n  }\n\n  borderLimit() {\n    if (this.x > 875) {\n      if (this.keyboard.input.LEFT) {\n        this.speed = -this.move\n      } else {\n        this.speed = 0;\n      }\n    }\n    if (this.x < 0) {\n      if (this.keyboard.input.RIGHT) {\n        this.speed = this.move\n      } else {\n        this.speed = 0;\n      }\n    }\n  }\n\n  meleeSound(enemy) {\n    if ((this.keyboard.input.ATTACK || this.keyboard.input.KICK) && !this.keyboard.input.SPECIAL) {\n      if (Math.abs(this.x - enemy.x) < 100) {\n          if (this.sControl) {\n            this.sound.play('./asset/sound/punch_hit.wav');\n            this.sControl = false;\n          }\n      } else {\n        if (this.sControl) {\n          this.sound.play('./asset/sound/punch_miss.wav');\n          this.sControl = false;\n        }\n      }\n    } else {\n      this.sControl = true;\n    }\n  }\n\n  rangeSound(enemy) {\n      if (this.bullet) {\n      if (Math.abs(this.bullet.x - enemy.x) < 50 || this.bullet.x > 1000 || this.bullet.x < 0) {\n        if (this.bControl) {\n          this.bControl = false;\n        }\n        this.bullet.collide = true;\n        this.bullet = null;\n      } else {\n        this.bControl = true;\n      }\n    }\n  }\n\n  soundControl(enemy) {\n    this.meleeSound(enemy);\n    this.rangeSound(enemy);\n  }\n\n  update(enemyX = 0) {\n    this.action(enemyX);\n    this.borderLimit();\n    this.x += this.speed;\n    this.gravitySpeed += this.gravity;\n    this.y += this.gravitySpeed;\n    this.hitBottom();\n  }\n\n  hitBottom() {\n    let rockbottom = 300;\n    if (this.y > rockbottom) {\n      this.y = rockbottom;\n      this.gravitySpeed = 0;\n    }\n  }\n\n  removePlayer() {\n    this.sprite.update(\"dead\");\n    this.dead = true;\n  }\n\n  win() {\n    this.sprite.update(\"win\");\n    this.dead = true;\n  }\n}\n\n\nexport default Player;\n","import Player from './player.js';\nimport HPBar from \"./hpbar\";\n\n\nclass VsMode {\n    constructor(ctx) {\n        this.ctx = ctx;\n        this.p1 = new Player(this.ctx, 300, \"ken\", 1);\n        this.p2 = new Player(this.ctx, 700, \"ryu\", -1);\n        this.p1.keyboard.movement();\n        this.p2.keyboard.movement([37, 39, 74, 75, 76]);\n        this.p1hp = new HPBar(this.ctx, 100, 50, 300);\n        this.p2hp = new HPBar(this.ctx, 600, 50, 300);\n        this.over = false;\n        this.time = 99;\n    }\n\n\n\n    stunned() {\n        if (this.p1.keyboard.attack) {\n            this.p2.stun = true;\n            this.p2.x++;\n        }\n        if (this.p2.keyboard.attack) {\n            this.p1.stun = true;\n            this.p1.x--;\n        }\n    }\n\n    bulControl(bul, enemy) {\n        if (bul) {\n            if (Math.abs(bul.x - enemy.x) < 100) {\n                if (this.p2.keyboard.input.RIGHT) this.p2.block = true;\n                else if (this.p1.keyboard.input.LEFT) this.p1.block = true;\n                else enemy.stun = true;\n            }\n            else {\n                enemy.stun = false;\n            }\n        }\n    }\n    fightControl() {\n        this.p2.block = false;\n        this.p1.block = false;\n        if ((Math.abs(this.p1.x - this.p2.x) < 100 && (this.p1.keyboard.attack || this.p2.keyboard.attack))) {\n\n            if (this.p1.keyboard.attack && this.p2.keyboard.input.RIGHT) {\n                this.p2.block = true;\n                this.p2.x++;\n            }\n            if (this.p2.keyboard.attack && this.p1.keyboard.input.LEFT) {\n                this.p1.block = true;\n                this.p1.x--;\n            }\n                this.stunned();\n        }\n        this.bulControl(this.p1.bullet, this.p2);\n        this.bulControl(this.p2.bullet, this.p1);\n    }\n\n    hpControl() {\n        if (this.p1.stun) {\n            this.p1hp.hit()\n        }\n        if (this.p1.block) {\n            this.p1hp.block()\n        }\n        if (this.p2.stun) {\n            this.p2hp.hit()\n        }\n        if (this.p2.block) {\n            this.p2hp.block()\n        }\n    }\n    playersCollision() {\n        this.fightControl();\n        this.p1.soundControl(this.p2);\n        this.p2.soundControl(this.p1);\n        this.hpControl();\n    }\n\n    draw() {\n        this.p1.draw();\n        this.p2.draw();\n        this.p1hp.draw();\n        this.p2hp.draw();\n    }\n\n    update() {\n        this.p1.update(this.p2.x);\n        this.p2.update(this.p1.x);\n        this.playersCollision();\n    }\n    gameover() {\n        this.ctx.font=\"40px Acme\";\n        this.ctx.fillStyle = \"red\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(`You Win`,500,150);\n    }\n\n    gamefun() {\n        if (this.p1hp.len >= 0 && this.p2hp.len >= 0 && this.time > 0) {\n            this.update();\n        } else {\n            this.gameover();\n        }\n        this.draw()\n        this.gameConstraint();\n    }\n\n    gameConstraint() {\n        if (this.p1hp.len <= 0) {\n            this.p2.win();\n            this.p1.removePlayer();\n            this.over = true;\n        }\n        else if (this.p2hp.len <= 0) {\n            this.p1.win();\n            this.p2.removePlayer();\n            this.over = true;\n        }\n    }\n\n}\n\nexport default VsMode\n","\nexport default class Background {\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.maxWidth = 1000;\n    this.maxHeight = 500;\n    this.image = new Image();\n    this.image.src = 'https://i.pinimg.com/originals/91/64/01/9164016aa77fa969f71800b9ba8c32b4.gif';\n  }\n\n  draw() {\n    this.ctx.drawImage(this.image,0,0,this.maxWidth,this.maxHeight);\n  }\n\n}\n","import Sprite from './sprite.js';\n\nexport default class Enemy {\n  constructor(x, ctx) {\n      this.x = x;\n      this.ctx = ctx;\n      this.rw = 140;\n      this.rh = 160;\n      this.y = 300;\n      this.alive = true;\n      this.frame = 0;\n      this.transparent = 1;\n      this.fps = 0;\n      this.dir = 1;\n      this.attack = false;\n      this.counter = 0;\n      this.sprite = new Sprite('ryu');\n      this.aType = ['punch', 'kick', 'special_kick'];\n      this.currentAttack = \"kick\";\n      this.dull = false;\n      this.blocked = false;\n\n  }\n\n  fpsControl(fps) {\n    this.fps++;\n    if (this.fps > fps) {\n      this.fps = 0;\n      this.frame++;\n      if (this.frame >= this.sprite.maxFrame) this.frame = 0;\n    }\n  }\n\n  setup(x) {\n      this.fpsControl(10);\n      this.ctx.save();\n      this.ctx.globalAlpha = this.transparent;\n      this.ctx.scale(this.dir,1);\n      this.ctx.drawImage(this.sprite.image, this.sprite.w * this.frame, 0, this.sprite.w, this.sprite.h, this.dir * this.x,this.y, this.dir * this.rw, this.rh);\n      this.ctx.restore();\n  }\n\n  dead(x) {\n      this.transparent -= 0.05;\n      this.sprite.update(\"dead\");\n  }\n\n  stun() {\n      this.sprite.update(\"stun\");\n  }\n  shot() {\n      this.sprite.update(\"shot\");\n  }\n\n  toggleStatus(maxTime, type) {\n      if (this.counter > maxTime) {\n          switch (type) {\n              case \"attack\": this.attack = !this.attack; break;\n              case \"move\": this.dull = false; break;\n              case \"block\": this.blocked = false; break;\n          }\n          this.counter = 0;\n      }\n  }\n\n  updateAttackSprite() {\n      const idx = Math.floor(Math.random() * 3);\n      this.currentAttack = this.aType[idx];\n  }\n\n  updateX(x,speed, dir=1) {\n      if (this.x < x) this.x+=speed * dir;\n      else this.x-= speed* dir\n  }\n\n    update(x) {\n\n        if (!this.dull && !this.blocked) {\n            if (this.attack) {\n                if (this.currentAttack === \"special_kick\") {\n                    this.updateX(x, 0.5)\n                }\n                this.sprite.update(`${this.currentAttack}`);\n            } else if (Math.abs(this.x - x) > 90) {\n                this.updateX(x, 1);\n                this.sprite.update(\"moving\");\n            } else {\n                this.sprite.update();\n            }\n        } else {\n            if (this.blocked) {\n                this.sprite.update(\"block\");\n                this.toggleStatus(15,\"block\");\n            } else if (this.dull) {\n                this.sprite.update(\"stun\");\n                this.toggleStatus(30,\"move\");\n            }\n            this.counter++;\n\n            this.updateAttackSprite();\n        }\n    }\n\n  updateDir(x) {\n      if (x > this.x) this.dir = 1;\n      else this.dir = -1;\n  }\n    draw(x) {\n        this.updateDir(x);\n        this.setup(x);\n        if (this.alive) {\n            this.update(x);\n        } else {\n            this.dead(x)\n        }\n    }\n\n\n}\n","import Enemy from \"./enemy\";\nimport Sound from \"./sound\";\nimport Player from './player.js';\nimport HPBar from \"./hpbar\";\n\nclass TrainMode {\n    constructor(ctx) {\n        this.ctx = ctx;\n        this.test = 100;\n        this.enemy = new Enemy(1000, this.ctx);\n        this.kill = 0;\n        this.time = 3000;\n        this.player = new Player(this.ctx,300,\"ken\",1);\n        this.player.keyboard.movement();\n\n        this.image = new Image();\n        this.sound = new Sound();\n        this.enemyHp = new HPBar(this.ctx,this.enemy.x, this.enemy.y, 80);\n        this.p1Hp = new HPBar(this.ctx, 100, 50, 200);\n        console.log(this.player.y);\n        this.playSound = true;\n        this.enemyStr = 1;\n        this.respTime = 30;\n        this.hp = 80;\n        this.prop = Math.random();\n        this.hitChance = 0.5;\n        this.sound = new Sound();\n        this.over = false;\n    }\n\n    gameover() {\n        this.image.src = 'https://static.comicvine.com/uploads/original/11111/111112704/3860536-ron_vs_ken_by_eastmonkey.jpg';\n        this.ctx.drawImage(this.image,0, 0, 1000, 500);\n        this.ctx.font=\"40px Acme\";\n        this.ctx.fillStyle = \"white\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\"Game Over\",500,150);\n        this.totalScore();\n    }\n\n    totalScore() {\n        this.test--;\n        if (this.test === 0) {\n            this.sound.play('./asset/sound/game_finished.wav')\n        }\n        if (this.test <= 20) {\n            this.ctx.fillText(`Total Kill : ${this.kill}`,500,290);\n        }\n    }\n\n    random() {\n        this.prop = Math.random();\n    }\n\n\n    playerToEnemy() {\n        if (this.player.keyboard.input.ATTACK || this.player.keyboard.input.KICK) {\n            this.enemydead(this.player.x, 90);\n        }\n        else if (this.player.bullet) {\n            this.enemydead(this.player.bullet.x,80);\n        } else {\n            this.random();\n        }\n    }\n\n    enemyToPlayer() {\n        if(Math.abs(this.enemy.x - this.player.x) < 100) {\n            if (this.enemy.dull || this.enemy.blocked) {\n                this.enemy.attack = false;\n            }\n            this.enemy.toggleStatus(this.respTime,\"attack\");\n            this.enemy.counter++;\n            if (this.enemy.attack) {\n                if (this.player.keyboard.input.LEFT) {\n                    if (this.player.x < this.enemy.x) {\n                        this.player.block = true;\n                        this.p1Hp.block()\n                    }\n                } else if (this.player.keyboard.input.RIGHT) {\n                    if (this.player.x > this.enemy.x) {\n                        this.player.block = true;\n                        this.p1Hp.block()\n                    }\n                } else {\n                    this.p1Hp.hit(this.enemyStr);\n                    this.player.stun = true;\n                }\n            }\n        } else {\n            this.enemy.attack = false;\n            this.player.block = false;\n            this.player.stun = false;\n        }\n\n    }\n    collision() {\n        this.playerToEnemy();\n        this.enemyToPlayer();\n    }\n\n\n    enemydead(x,range=90) {\n        if (Math.abs(x - this.enemy.x) < range) {\n            if (this.prop > this.hitChance) {\n                this.enemy.dull = true;\n                this.enemyHp.hit();\n            } else {\n                this.enemy.blocked = true;\n                this.enemyHp.block();\n            }\n                if (this.enemyHp.len <= 0) {\n                    this.enemy.alive = false;\n                    this.kill++;\n                }\n            if (this.player.keyboard.input.KICK && this.player.keyboard.input.SPECIAL) {\n                this.enemy.updateX(this.player.x, 1,-1);\n            }\n\n        }\n    }\n\n    getRand(x) {\n        this.enemy.x = Math.random() > 0.5 ? 0 : 1000;\n        return this.enemy.x;\n    }\n\n    respawn() {\n        if (this.enemy.transparent <= 0) {\n            this.sound.play('./asset/sound/die.wav');\n            this.enemy.alive = true;\n            this.enemy.dull = false;\n            this.enemyHp.len = this.hp++;\n            this.enemy.transparent = 1;\n            this.enemy.x = this.getRand(this.enemy.x);\n            this.enemyStr += 0.1;\n            this.respTime--;\n            this.hitChance += 0.02;\n        }\n    }\n    pHp() {\n        this.ctx.fillStyle = \"red\";\n        this.ctx.fillText(\"HP\",70,70);\n        this.p1Hp.draw('orange');\n    }\n\n    trainingMode() {\n        this.player.draw();\n        this.enemy.draw(this.player.x);\n        this.pHp();\n        this.player.soundControl(this.enemy);\n        this.enemyHp.enemyhp(this.enemy.x,this.enemy.y,10);\n        this.player.update(this.enemy.x);\n        this.collision();\n        this.respawn();\n        this.player.keyboard.disable = this.player.stun;\n    }\n\n    draw() {\n        if (this.p1Hp.len <= 0) {\n            this.gameover();\n            this.over = true;\n        } else {\n            this.trainingMode();\n        }\n    }\n}\n\nexport default TrainMode\n","import vsMode from './vsMode.js';\nimport Background from './background.js';\nimport trainMode from './trainMode.js';\nimport Input from './input.js'\nimport VsMode from \"./vsMode\";\n\nclass Game {\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.background = new Background(this.ctx);\n    this.play = this.play.bind(this);\n    this.input = new Input();\n    this.input.gameControl();\n    this.fps = 0;\n    this.image = new Image();\n    this.image.src = 'https://i.pinimg.com/originals/f6/c4/51/f6c4516c11809f1b3550e0c68abfef89.gif';\n    this.test = 70;\n    this.time = 60;\n    this.training = false;\n    this.vs = false;\n    this.vsMode = null;\n    this.trainMode = null;\n  }\n\n  intro() {\n    this.ctx.drawImage(this.image, 0, 0, 1000, 500);\n    this.ctx.font = \"40px Acme\";\n    this.ctx.fillStyle = \"white\";\n    this.ctx.textAlign = \"center\";\n    this.ctx.fillText(`Best Street Fighter`, 500, 200);\n    this.ctx.font = \"20px Acme\";\n    this.start();\n  }\n\n  createClickBox(text,x,y,h, mode) {\n    this.ctx.fillText(text, x,y);\n    let w = this.ctx.measureText(text).width / 2;\n    document.addEventListener(\"click\", e => {\n      if (e.layerX >= x - w && e.layerX <= x + w &&\n          e.layerY >= y - h && e.layerY <= y + h) {\n        if (mode === \"vs\") {\n          this.vs = true;\n          this.input.restart = true;\n          this.vsMode = new VsMode(this.ctx);\n        } else if (mode === \"train\") {\n          this.trainMode = new trainMode(this.ctx);\n          this.input.restart = true;\n\n          this.training = true;\n        } else {\n          this.input.restart = false;\n          this.training = false;\n          this.vs = false;\n        }\n      }\n    })\n  }\n\n  restart() {\n    this.fps++;\n    if (this.fps > 200) {\n      this.createClickBox(\"retry?\", 500, 400, 20, \"retry?\");\n    }\n\n  }\n  start() {\n    this.createClickBox(\"CPU Mode\", 500, 300, 20, \"train\");\n    this.createClickBox(\"VS Mode\", 500, 350, 20, \"vs\");\n  }\n\n\n  clock() {\n    this.ctx.textAlign = \"center\";\n    this.ctx.fillStyle = \"red\";\n    this.ctx.font=\"40px Acme\";\n    this.fps++;\n    if (this.fps > 70) {\n      this.time--;\n      this.fps = 0;\n    }\n    this.ctx.fillText(`${this.time}`,500,60);\n  }\n\n  play() {\n    if (!this.input.restart) {\n      this.intro();\n    } else {\n      this.background.draw();\n      if (this.training) {\n        this.trainMode.draw();\n        if (this.trainMode.over) {\n          this.restart()\n        }\n      }\n      if (this.vs) {\n        this.vsMode.gamefun();\n        if (this.vsMode.over) {\n          this.restart()\n        }\n      }\n    }\n\n    requestAnimationFrame(this.play);\n  }\n\n}\n\nexport default Game;\n","class Music {\n  constructor() {\n    this.bgm = document.getElementById(\"myAudio\");\n    this.bgsound = document.getElementById(\"music-button\");\n    this.icon = document.getElementById(\"icon\");\n\n\n  }\n\n\n\n  musicAction() {\n    this.bgsound.addEventListener(\"click\",() => {\n      if (this.bgm.paused) {\n        this.bgm.play();\n        this.icon.className = \"fas fa-volume-up\"\n      }\n      else {\n        this.bgm.pause();\n        this.icon.className = \"fas fa-volume-off\"\n      }\n    })\n  }\n\n\n}\n\nexport default Music\n","import Game from './game.js';\nimport Music from './music.js'\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvas = document.getElementById(\"MyCanvas\");\n  canvas.width = 1000;\n  canvas.height = 500;\n  const ctx = canvas.getContext(\"2d\");\n  const game = new Game(ctx);\n  const music = new Music();\n  music.musicAction();\n\n  game.play();\n\n});\n"],"sourceRoot":""}