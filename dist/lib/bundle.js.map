{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/input.js","webpack:///./lib/sound.js","webpack:///./lib/bullet.js","webpack:///./lib/sprite.js","webpack:///./lib/hpbar.js","webpack:///./lib/player.js","webpack:///./lib/vsMode.js","webpack:///./lib/background.js","webpack:///./lib/enemy.js","webpack:///./lib/trainMode.js","webpack:///./lib/game.js","webpack:///./lib/music.js","webpack:///./lib/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Input","[object Object]","this","restart","input","LEFT","RIGHT","DOWN","ATTACK","REVIVE","KICK","SHOOT","SPECIAL","attack","counter","keys","document","addEventListener","e","keyCode","sound","createElement","setAttribute","style","display","src","play","then","console","log","pause","bullet","ctx","x","y","dir","w","h","speed","image","Image","hit","collide","drawImage","shoot","Sprite","char","frame","maxFrame","onload","width","height","action","HPBar","len","fixlen","center","fillStyle","fillRect","strokeStyle","lineWidth","strokeRect","player","draw","keyboard","rw","rh","stop","move","fps","stun","block","sprite","temp","desc","sControl","bControl","delay","dead","gravity","gravitySpeed","fpsControl","save","scale","restore","update","dullMove","playSound","specialAction","enemyX","moveAction","attackAction","Math","abs","enemy","borderLimit","hitBottom","vsMode","p1","p2","movement","p1hp","p2hp","over","bul","stunned","bulControl","fightControl","meleeAttack","rangeAttack","hpControl","playersCollision","font","textAlign","fillText","gameover","gameConstraint","win","removePlayer","Background","maxWidth","maxHeight","enemy_Enemy","alive","transparent","globalAlpha","setup","trainMode","test","floor","random","kill","comboSpeed","enemyHp","p1Hp","prob","totalScore","firsthit","prop","enemydead","maxCombo","max","combo","range","slide","comboTime","getRand","time","clock","comboContainer","enemyhp","switchDir","collision","respawn","trainingMode","lib_game","background","gameControl","training","vs","start","text","measureText","layerX","layerY","createClickBox","gamefun","intro","requestAnimationFrame","lib_music","bgm","getElementById","bgsound","icon","paused","className","canvas","getContext","game","musicAction"],"mappings":"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","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\nexport default class Input {\n  constructor() {\n      this.restart = false;\n      this.input = {\n        LEFT: false,\n        RIGHT: false,\n        DOWN: false,\n        ATTACK: false,\n        REVIVE: false,\n        KICK: false,\n        SHOOT: false,\n        SPECIAL: false\n      };\n      this.attack = false;\n      this.counter = 0;\n  }\n  gameControl() {\n    this.input.REVIVE = false;\n  }\n\n  movement(keys=[65,68,84,89,85]) {\n    document.addEventListener(\"keydown\", e => {\n      const key = e.keyCode;\n        switch (key) {\n        case keys[0]: this.input.LEFT = true; break;\n        case 83:\n        case 40:\n          this.input.DOWN = true; break;\n        case keys[1]: this.input.RIGHT = true; break;\n        case keys[2]:\n          this.attack = true;\n          this.counter++;\n          this.counter > 2 ? this.input.ATTACK = false : this.input.ATTACK = true;\n        break;\n        case keys[3]:\n          this.attack = true;\n          this.counter++;\n          this.counter > 3 ? this.input.KICK = false : this.input.KICK = true;\n          break;\n          case keys[4]:\n          this.input.SPECIAL = true;\n          break;\n        default:\n    }\n  });\n    document.addEventListener(\"keyup\", e => {\n        const key = e.keyCode;\n        switch (key) {\n          case keys[0]: this.input.LEFT = false; break;\n          case 40:\n          case 83:\n            this.input.DOWN = false; break;\n          case keys[1]: this.input.RIGHT = false; break;\n          case keys[2]:\n            this.attack = false;\n            this.input.ATTACK = false;\n            this.counter = 0;\n           break;\n          case keys[3]:\n            this.attack = false;\n            this.input.KICK = false;\n            this.counter = 0;\n          break;\n          case keys[4]:\n            this.input.SPECIAL = false;\n        }\n    })\n\n  }\n}\n","class Sound {\n  constructor() {\n    this.sound = document.createElement(\"audio\");\n    this.sound.setAttribute(\"preload\", \"auto\");\n    this.sound.setAttribute(\"controls\", \"none\");\n    this.sound.style.display = \"none\";\n  }\n\n  play(src) {\n    this.sound.src = src;\n    this.sound.play().then(() => console.log());\n  }\n\n  stop() {\n    this.sound.pause();\n  }\n}\n\nexport default Sound;\n","\nimport Sound from './sound.js'\n\nclass Bullet {\n  constructor(ctx, x, y, dir) {\n    this.ctx = ctx;\n    this.w = 40;\n    this.h = 40;\n    this.x =  x + dir * 50\n    this.y = y + 35;\n    this.speed = dir * 10;\n    this.image = new Image();\n    this.image.src = dir > 0 ? `./asset/bullet.png` : `./asset/bullet_left.png`;\n    this.hit = false;\n    this.collide = false;\n    this.sound = new Sound();\n    this.m = true;\n  }\n\n  shoot() {\n    this.ctx.drawImage(this.image, this.x, this.y, this.w, this.h);\n    this.x += this.speed;\n  }\n\n  playSound() {\n    this.sound.play('./asset/sound/hadouken.mp3');\n  }\n\n  draw() {\n    if (!this.collide) {\n      this.shoot()\n\n    }\n\n  }\n\n\n\n\n}\n\nexport default Bullet;\n","\n\nexport default class Sprite {\n  constructor(char) {\n    this.char = char;\n    this.image = new Image();\n    this.image.src = `./asset/${this.char}/idle.png`;\n    this.frame = 0;\n    this.maxFrame = 3;\n    this.image.onload = () => {\n      this.w = this.image.width / (this.maxFrame + 1);\n      this.h = this.image.height;\n    }\n\n  }\n\n  update(action) {\n    if (this.char === \"ken\") {\n      switch (action) {\n        case \"special_kick\":\n          this.maxFrame = 5;\n          this.image.src = `./asset/${this.char}/${action}.png`;\n          break;\n        case \"kick\":\n        case \"moving\":\n          this.maxFrame = 4;\n          this.image.src = `./asset/${this.char}/${action}.png`;\n          break;\n        case \"stun\":\n        case \"dead\":\n          this.maxFrame = 3;\n          this.image.src = `./asset/${this.char}/${action}.png`;\n          break;\n        case \"punch\":\n        case \"win\":\n          this.maxFrame = 2;\n          this.image.src = `./asset/${this.char}/${action}.png`;\n          break;\n        case \"shot\":\n          this.maxFrame = 1;\n          this.image.src = `./asset/${this.char}/${action}.png`;\n          break;\n        case \"block\":\n          this.maxFrame = 0;\n          this.image.src = `./asset/${this.char}/${action}.png`;\n          break;\n        default:\n          this.maxFrame = 3;\n          this.image.src = `./asset/${this.char}/idle.png`;\n          break;\n      }\n    }\n    if (this.char === \"ryu\") {\n      switch (action) {\n        case \"special_kick\":\n          this.maxFrame = 5;\n          this.image.src = `./asset/${this.char}/${action}.png`;\n          break;\n        case \"moving\":\n          this.maxFrame = 4;\n          this.image.src = `./asset/${this.char}/${action}.png`;\n          break;\n        case \"kick\":\n        case \"punch\":\n        case \"shot\":\n        case \"stun\":\n        case \"win\":\n          this.maxFrame = 2;\n          this.image.src = `./asset/${this.char}/${action}.png`;\n          break;\n        case \"block\":\n          this.maxFrame = 0;\n          this.image.src = `./asset/${this.char}/${action}.png`;\n          break;\n        case \"dead\":\n          this.maxFrame = 3;\n          this.image.src = `./asset/${this.char}/${action}.png`;\n          break;\n        default:\n          this.maxFrame = 3;\n          this.image.src = `./asset/${this.char}/idle.png`;\n          break;\n      }\n    }\n  }\n\n}\n","export default class HPBar {\n  constructor(ctx, x,y, len) {\n    this.ctx = ctx;\n    this.x = x;\n    this.y = y;\n    this.len = len;\n    this.fixlen = len;\n    this.center = len/2;\n  }\n\n  draw() {\n    this.ctx.fillStyle = \"red\";\n    this.ctx.fillRect(this.x,50, this.fixlen, 30);\n    this.ctx.fillStyle = \"yellow\";\n    this.ctx.fillRect(this.x,50, this.len, 30);\n    this.ctx.strokeStyle = \"white\";\n    this.ctx.lineWidth = 2;\n    this.ctx.strokeRect(this.x, 50, this.fixlen, 30);\n  }\n\n  enemyhp(x,y,h) {\n    this.ctx.fillStyle = \"red\";\n    this.ctx.fillRect(x + this.center, y - 20, this.fixlen, h);\n    this.ctx.fillStyle = \"yellow\";\n    this.ctx.fillRect(x + this.center, y - 20, this.len, h);\n    this.ctx.strokeStyle = \"white\";\n    this.ctx.lineWidth = 2;\n    this.ctx.strokeRect(x + this.center, y - 20, this.len, h);\n  }\n\n  block() {\n    this.len -= 0.05;\n  }\n  hit() {\n    this.len -= 1;\n  }\n}\n","import Input from './input.js';\nimport Bullet from './bullet.js';\nimport Sprite from './sprite.js';\nimport Sound from './sound.js'\nimport Hp from './hpbar.js'\n\nclass Player {\n  constructor(ctx,x = 300, char, dir) {\n    this.ctx = ctx;\n    this.draw = this.draw.bind(this);\n    this.keyboard = new Input();\n    this.frame = 0;\n    this.rw = 140;\n    this.rh = 160;\n    this.x = x;\n    this.y = 300;\n    this.speed = 0;\n    this.stop = 0;\n    this.move = 5;\n    this.bullet = null;\n    this.fps = 0;\n    this.stun = false;\n    this.block = false;\n    this.sprite = new Sprite(char);\n    this.dir = dir;\n    this.temp = \"\";\n    this.desc = \"\";\n    this.sControl = true;\n    this.bControl = true;\n    this.sound = new Sound();\n    this.delay = 0;\n    this.dead = false;\n    this.gravity = 0.05;\n    this.gravitySpeed = 0;\n  }\n\n  fpsControl(fps) {\n    this.fps++;\n    if (this.desc !== this.temp) {\n      this.desc = this.temp;\n      this.frame = 0;\n    }\n    if (this.fps > fps) {\n      this.fps = 0;\n      if (this.dead) {\n        this.frame >= this.sprite.maxFrame? this.frame = this.sprite.maxFrame : this.frame++;\n      } else {\n        this.frame++;\n        if (this.temp === \"sp2\" && this.frame >= 3) {\n          this.y-= 10;\n        }\n        if (this.frame > this.sprite.maxFrame) this.frame = 0\n      }\n    }\n  }\n\n\n\n  draw() {\n    this.fpsControl(10);\n    if (this.bullet) {\n      this.bullet.draw()\n    }\n    this.ctx.save();\n    this.ctx.scale(this.dir,1);\n    this.ctx.drawImage(this.sprite.image, this.sprite.w * this.frame, 0, this.sprite.w, this.sprite.h, this.dir * this.x,this.y, this.dir * this.rw, this.rh);\n    this.ctx.restore();\n  }\n\n\n  moveAction(x) {\n    if (this.keyboard.input.LEFT || this.keyboard.input.RIGHT) {\n      if (this.block) {\n        this.sprite.update(\"block\");\n        this.temp = \"block\";\n        console.log(this.sprite.image.src);\n        this.sound.play('./asset/sound/block.wav')\n        this.move = 0.1;\n      }\n      else {\n        this.sprite.update(\"moving\");\n        this.temp = \"moving\";\n        this.move = 5;\n      }\n\n      if (this.keyboard.input.LEFT || this.keyboard.input.RIGHT) {\n        if (this.x < x) {\n          this.dir = 1;\n          if (this.dullMove(x)) {\n            if (this.keyboard.input.LEFT) {\n              this.speed = -this.move\n            }\n          }\n        } else {\n          this.dir = -1;\n          if (this.dullMove(x)) {\n            if (this.keyboard.input.RIGHT) {\n              this.speed = this.move\n            }\n          }\n        }\n      }\n      if (this.keyboard.input.LEFT && !(this.dullMove((x)))) this.speed = -this.move\n      else if (this.keyboard.input.RIGHT && !(this.dullMove((x)))) this.speed = this.move\n    } else if (this.stun) {\n      this.sprite.update(\"stun\");\n      this.temp = \"stun\";\n      this.move = 0;\n      this.stun = false;\n    }\n  }\n\n\n\n  specialAction() {\n    if (this.keyboard.input.SPECIAL) {\n        if (this.keyboard.input.ATTACK && !this.keyboard.input.KICK) {\n          if (this.keyboard.input.DOWN) {\n            this.sprite.update(\"sp2\");\n            this.x++;\n            this.temp = \"sp2\"\n          } else {\n            this.sprite.update(\"shot\");\n            this.temp = \"shot\"\n            if (!this.bullet) {\n              this.bullet = new Bullet(this.ctx, this.x, this.y, this.dir);\n            }\n            if (this.keyboard.input.SHOOT) {\n              this.bullet.playSound();\n              this.keyboard.input.SHOOT = false;\n            }\n          }\n\n\n          // this.delay++;\n          // if (this.delay > 20) {\n          //   this.keyboard.input.SPECIAL = false;\n          //   this.keyboard.input.ATTACK = false;\n          // }\n\n        }\n      else if (!this.keyboard.input.ATTACK && this.keyboard.input.KICK) {\n        this.sprite.update(\"special_kick\");\n        this.temp = \"special_kick\"\n        this.delay++;\n        this.x += this.dir * 2;\n        if (this.delay > 40) {\n          this.keyboard.input.SPECIAL = false;\n          this.keyboard.input.KICK = false;\n        }\n      } else {\n        this.delay = 0;\n        this.keyboard.input.SHOOT = true;\n      }\n    }\n  }\n  attackAction() {\n        if (this.keyboard.input.ATTACK) {\n          this.sprite.update(\"punch\");\n          this.temp = \"punch\";\n        } else if (this.keyboard.input.KICK) {\n          this.sprite.update(\"kick\");\n          this.temp = \"kick\";\n        }\n        this.specialAction();\n    }\n\n\n  action(enemyX) {\n    this.sprite.update();\n    this.speed = this.stop;\n    this.moveAction(enemyX);\n    this.attackAction();\n  }\n\n  dullMove(enemyX) {\n    return Math.abs(this.x - enemyX) < 90\n  }\n  borderLimit() {\n    if (this.x > 875) {\n      if (this.keyboard.input.LEFT) {\n        this.speed = -this.move\n      } else {\n        this.speed = 0;\n      }\n    }\n    if (this.x < 0) {\n      if (this.keyboard.input.RIGHT) {\n        this.speed = this.move\n      } else {\n        this.speed = 0;\n      }\n    }\n  }\n\n  meleeAttack(enemy) {\n    if ((this.keyboard.input.ATTACK || this.keyboard.input.KICK) && !this.keyboard.input.SPECIAL) {\n      if (Math.abs(this.x - enemy.x) < 100) {\n          if (this.sControl) {\n            this.sound.play('./asset/sound/punch_hit.wav');\n            this.sControl = false;\n          }\n      } else {\n        if (this.sControl) {\n          this.sound.play('./asset/sound/punch_miss.wav');\n          this.sControl = false;\n        }\n      }\n    } else {\n      this.sControl = true;\n    }\n  }\n\n  rangeAttack(enemy) {\n    if (this.bullet) {\n      if (Math.abs(this.bullet.x - enemy.x) < 50 || this.bullet.x > 1000 || this.bullet.x < 0) {\n        if (this.bControl) {\n          this.bControl = false;\n        }\n        this.bullet.collide = true;\n        this.bullet = null;\n      } else {\n        this.bControl = true;\n      }\n    }\n  }\n\n  update(enemyX = 0) {\n    this.action(enemyX);\n    this.borderLimit();\n    this.x += this.speed;\n    this.gravitySpeed += this.gravity;\n    this.y += this.gravitySpeed;\n    this.hitBottom();\n  }\n\n  hitBottom() {\n    let rockbottom = 300;\n    if (this.y > rockbottom) {\n      this.y = rockbottom;\n      this.gravitySpeed = 0;\n    } else {\n    }\n  }\n\n  removePlayer() {\n    this.sprite.update(\"dead\");\n    this.dead = true;\n  }\n\n  switchDir() {\n    if (this.keyboard.input.LEFT) {\n      if (!this.block) {\n        this.dir = -1;\n      }\n    }\n    if (this.keyboard.input.RIGHT) {\n      if (!this.block) {\n        this.dir = 1;\n      }\n    }\n  }\n\n  win() {\n    this.sprite.update(\"win\");\n    this.dead = true;\n  }\n}\n\n\nexport default Player;\n","import Player from './player.js';\nimport HPBar from \"./hpbar\";\n\n\nclass VsMode {\n    constructor(ctx) {\n        this.ctx = ctx;\n        this.p1 = new Player(this.ctx, 300, \"ken\", 1);\n        this.p2 = new Player(this.ctx, 700, \"ryu\", -1);\n        this.p1.keyboard.movement();\n        this.p2.keyboard.movement([37, 39, 74, 75, 76]);\n        this.p1hp = new HPBar(this.ctx, 100, 50, 300);\n        this.p2hp = new HPBar(this.ctx, 600, 50, 300);\n        this.over = false;\n    }\n\n\n\n    stunned() {\n        if (this.p1.keyboard.attack) {\n            this.p2.stun = true;\n            this.p2.x++;\n        }\n        if (this.p2.keyboard.attack) {\n            this.p1.stun = true;\n            this.p1.x--;\n        }\n    }\n\n    bulControl(bul, enemy) {\n        if (bul) {\n            if (Math.abs(bul.x - enemy.x) < 100) {\n                if (this.p2.keyboard.input.RIGHT) this.p2.block = true;\n                else if (this.p1.keyboard.input.LEFT) this.p1.block = true;\n                else enemy.stun = true;\n            }\n            else {\n                enemy.stun = false;\n            }\n        }\n    }\n    fightControl() {\n        this.p2.block = false;\n        this.p1.block = false;\n        if ((Math.abs(this.p1.x - this.p2.x) < 100 && (this.p1.keyboard.attack || this.p2.keyboard.attack))) {\n\n            if (this.p1.keyboard.attack && this.p2.keyboard.input.RIGHT) {\n                this.p2.block = true;\n                this.p2.x++;\n            }\n            if (this.p2.keyboard.attack && this.p1.keyboard.input.LEFT) {\n                this.p1.block = true;\n                this.p1.x--;\n            }\n                this.stunned();\n        }\n        this.bulControl(this.p1.bullet, this.p2);\n        this.bulControl(this.p2.bullet, this.p1);\n    }\n\n    hpControl() {\n        if (this.p1.stun) {\n            this.p1hp.hit()\n        }\n        if (this.p1.block) {\n            this.p1hp.block()\n        }\n        if (this.p2.stun) {\n            this.p2hp.hit()\n        }\n        if (this.p2.block) {\n            this.p2hp.block()\n        }\n    }\n    playersCollision() {\n        this.fightControl();\n        this.p1.meleeAttack(this.p2);\n        this.p2.meleeAttack(this.p1);\n        this.p1.rangeAttack(this.p2);\n        this.p2.rangeAttack(this.p1);\n        this.hpControl();\n    }\n\n    draw() {\n        this.p1.draw();\n        this.p2.draw();\n        this.p1hp.draw();\n        this.p2hp.draw();\n    }\n\n    update() {\n        this.p1.update(this.p2.x);\n        this.p2.update(this.p1.x);\n        this.playersCollision();\n    }\n    gameover() {\n        this.ctx.font=\"40px Acme\";\n        this.ctx.fillStyle = \"red\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(`You Win`,500,150);\n    }\n\n    gamefun() {\n        if (this.p1hp.len >= 0 && this.p2hp.len >= 0) {\n            this.update();\n        } else {\n            this.gameover();\n        }\n        this.draw()\n        this.gameConstraint();\n    }\n\n    gameConstraint() {\n        if (this.p1hp.len <= 0) {\n            this.p2.win();\n            this.p1.removePlayer();\n            this.over = true;\n        }\n        else if (this.p2hp.len <= 0) {\n            this.p1.win();\n            this.p2.removePlayer();\n            this.over = true;\n        }\n    }\n\n}\n\nexport default VsMode","\nexport default class Background {\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.maxWidth = 1000;\n    this.maxHeight = 500;\n    this.image = new Image();\n    this.image.src = 'https://i.pinimg.com/originals/91/64/01/9164016aa77fa969f71800b9ba8c32b4.gif';\n  }\n\n  draw() {\n    this.ctx.drawImage(this.image,0,0,this.maxWidth,this.maxHeight);\n  }\n\n}\n","import Sprite from './sprite.js';\n\nexport default class Enemy {\n  constructor(x, ctx) {\n      this.x = x;\n      this.ctx = ctx;\n      this.rw = 140;\n      this.rh = 160;\n      this.y = 300;\n      this.alive = true;\n      this.frame = 0;\n      this.transparent = 1;\n      this.fps = 0;\n      this.dir = 1;\n      this.attack = false;\n      this.sprite = new Sprite('ryu');\n  }\n\n  fpsControl(fps) {\n    this.fps++;\n    if (this.fps > fps) {\n      this.fps = 0;\n      this.frame++;\n      if (this.frame >= this.sprite.maxFrame) this.frame = 0;\n    }\n  }\n\n  setup(x) {\n      this.fpsControl(10);\n      this.ctx.save();\n      this.ctx.scale(this.dir,1);\n      this.ctx.drawImage(this.sprite.image, this.sprite.w * this.frame, 0, this.sprite.w, this.sprite.h, this.dir * this.x,this.y, this.dir * this.rw, this.rh);\n      this.ctx.restore();\n  }\n\n  dead(x) {\n    this.fpsControl(10);\n    this.ctx.save();\n    this.ctx.globalAlpha = this.transparent;\n    this.transparent -= 0.1;\n    this.ctx.restore();\n  }\n  slide(x) {\n      this.x < x ? this.x-= 1 : this.x += 1;\n  }\n  block() {\n      this.sprite.update(\"block\");\n  }\n  stun() {\n      this.sprite.update(\"stun\");\n  }\n  shot() {\n      this.sprite.update(\"shot\");\n  }\n  update(x) {\n      this.attack = false;\n      if(Math.abs(this.x - x) < 100) {\n              this.attack = true;\n              this.sprite.update(\"punch\");\n          }\n          else if (this.x > x) {\n              this.x--;\n              this.sprite.update(\"moving\");\n          } else if (this.x < x) {\n              this.x++;\n              this.sprite.update(\"moving\");\n          }\n  }\n  draw(x) {\n  if (x > this.x) {\n      this.dir = 1\n  } else {\n      this.dir = -1\n  }\n    if (this.alive) {\n      this.setup(x);\n        this.update(x);\n    } else {\n      this.dead(x)\n    }\n  }\n\n\n}\n","import Enemy from \"./enemy\";\nimport Sound from \"./sound\";\nimport Player from './player.js';\nimport HPBar from \"./hpbar\";\n\nclass TrainMode {\n    constructor(ctx) {\n        this.ctx = ctx;\n        this.test = 100;\n        this.enemy = new Enemy(Math.floor(Math.random() * 5) * 150 + 100, this.ctx);\n        this.kill = 0;\n        this.comboSpeed = 0.7;\n        this.player = new Player(this.ctx,300,\"ken\",1);\n        this.player.keyboard.movement();\n        this.image = new Image();\n        this.sound = new Sound();\n        this.enemyHp = new HPBar(this.ctx,this.enemy.x, this.enemy.y, 80)\n        this.p1Hp = new HPBar(this.ctx,500, 20, 300)\n        this.playSound = true;\n        this.prob = Math.random();\n        this.over = false;\n    }\n\n    gameover() {\n        this.image.src = 'https://static.comicvine.com/uploads/original/11111/111112704/3860536-ron_vs_ken_by_eastmonkey.jpg';\n        this.ctx.drawImage(this.image,0, 0, 1000, 500);\n        this.ctx.font=\"40px Acme\";\n        this.ctx.fillStyle = \"white\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\"Game Over\",500,150);\n        this.totalScore();\n    }\n    totalScore() {\n        this.test--;\n        if (this.test === 0) {\n            this.sound.play('./asset/sound/game_finished.wav')\n        }\n        if (this.test <= 20) {\n            this.ctx.fillText(`Total Kill : ${this.kill}`,500,290);\n        }\n    }\n\n    miss() {\n        this.ctx.font=\"20px Acme\";\n        this.ctx.fillStyle = \"red\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(`Miss!`,this.player.x + 60,this.player.y - 20);\n        this.firsthit = true;\n    }\n\n    random() {\n        this.prop = Math.random();\n    }\n    collision() {\n\n        if (this.player.keyboard.attack) {\n            this.enemydead(this.player.x, 90);\n        }\n        else if (this.player.bullet) {\n            this.enemydead(this.player.bullet.x,5);\n            this.player.rangeAttack(this.enemy);\n        } else {\n            this.random();\n        }\n        this.player.stun = false;\n        this.player.block = false;\n        if (this.enemy.attack) {\n            if (this.player.x < this.enemy.x) {\n                if (this.player.keyboard.input.LEFT) {\n                    this.player.block = true;\n                    this.enemy.sprite.update();\n                    this.p1Hp.block()\n                } else {\n                    this.p1Hp.hit();\n                }\n            } else {\n                if (this.player.keyboard.input.RIGHT) {\n                    this.player.block = true;\n                    this.p1Hp.block()\n                } else {\n                    this.p1Hp.hit();\n                }\n            }\n        this.player.stun = true;\n\n        this.maxCombo = Math.max(this.combo, this.maxCombo)\n        }\n\n    }\n\n\n    enemydead(x,range=100) {\n        if (Math.abs(x - this.enemy.x) < range) {\n            if (this.prop > 0.4) {\n                this.enemy.stun(x);\n                this.enemyHp.hit();\n            } else {\n                this.enemy.block(x);\n                this.enemyHp.block();\n            }\n            this.enemy.slide(x);\n                if (this.enemyHp.len <= 0) {\n                    this.enemy.alive = false;\n                    this.kill++;\n                }\n            this.comboTime = 200;\n        } else {\n\n        }\n    }\n\n    getRand(x) {\n        while (x === this.enemy.x) {\n            this.enemy.x = Math.random() > 0.5 ? 0 : 1000;\n        }\n        return this.enemy.x\n    }\n\n    respawn() {\n        if (this.enemy.transparent <= 0) {\n            this.enemy.alive = true;\n            this.enemyHp.len = 80;\n            this.enemy.transparent = 1;\n            this.enemy.x = this.getRand(this.enemy.x);\n        }\n    }\n\n\n    comboContainer() {\n        this.ctx.fillStyle = \"green\";\n        this.ctx.font=\"12px Acme\";\n        this.ctx.fillText(`Combo GAUGE`,500,60);\n        if (this.comboTime <= 100) {\n            this.ctx.fillStyle = \"yellow\"\n        }\n        if (this.comboTime <= 50) {\n            this.ctx.fillStyle = \"red\"\n        }\n        this.ctx.fillRect(400,70, this.comboTime, 20);\n    }\n\n    clock() {\n        this.ctx.textAlign = \"center\";\n        this.ctx.font=\"40px Acme\";\n        if (this.time <= 5) {\n            this.ctx.fillStyle = \"red\"\n        }\n        this.ctx.fillText(`Timer ${this.time}`,500,30);\n    }\n\n    trainingMode() {\n        this.clock();\n        this.comboContainer();\n        this.player.draw();\n        this.enemy.draw(this.player.x);\n        this.player.meleeAttack(this.enemy);\n        this.enemyHp.enemyhp(this.enemy.x,this.enemy.y,10);\n        this.player.update(this.enemy.x);\n        this.player.switchDir();\n        this.p1Hp.draw();\n        this.collision();\n        this.respawn();\n    }\n\n    draw() {\n        if (this.p1Hp.len <= 0) {\n            this.gameover()\n            this.over = true;\n        } else {\n            this.trainingMode();\n        }\n    }\n}\n\nexport default TrainMode","import vsMode from './vsMode.js';\nimport Background from './background.js';\nimport trainMode from './trainMode.js';\nimport Input from './input.js'\nimport VsMode from \"./vsMode\";\n\nclass Game {\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.background = new Background(this.ctx);\n    this.play = this.play.bind(this);\n    this.input = new Input();\n    this.input.gameControl();\n    this.fps = 0;\n    this.image = new Image();\n    this.image.src = 'https://i.pinimg.com/originals/f6/c4/51/f6c4516c11809f1b3550e0c68abfef89.gif';\n    this.test = 70;\n    this.time = 60;\n    this.training = false;\n    this.vs = false;\n    this.vsMode = null;\n    this.trainMode = null;\n\n  }\n\n  intro() {\n    this.ctx.drawImage(this.image, 0, 0, 1000, 500);\n    this.ctx.font = \"40px Acme\";\n    this.ctx.fillStyle = \"white\";\n    this.ctx.textAlign = \"center\";\n    this.ctx.fillText(`Best Street Fighter`, 500, 200);\n    this.ctx.font = \"20px Acme\";\n    this.start();\n  }\n\n  createClickBox(text,x,y,h, mode) {\n    this.ctx.fillText(text, x,y);\n    let w = this.ctx.measureText(text).width / 2;\n    document.addEventListener(\"click\", e => {\n      if (e.layerX >= x - w && e.layerX <= x + w &&\n          e.layerY >= y - h && e.layerY <= y + h) {\n        if (mode === \"vs\") {\n          this.vs = true;\n          this.input.restart = true;\n          this.vsMode = new VsMode(this.ctx);\n        } else if (mode === \"train\") {\n          this.trainMode = new trainMode(this.ctx);\n          this.input.restart = true;\n\n          this.training = true;\n        } else {\n          this.input.restart = false;\n          this.training = false;\n          this.vs = false;\n        }\n      }\n    })\n  }\n\n  restart() {\n    this.createClickBox(\"ReStart\", 500, 400, 20, \"restart\");;\n\n  }\n  start() {\n    this.createClickBox(\"Train\", 500, 300, 20, \"train\");\n    this.createClickBox(\"VS Mode\", 500, 350, 20, \"vs\");\n  }\n\n  play() {\n    if (!this.input.restart) {\n      this.intro();\n    } else {\n      this.background.draw();\n      if (this.training) {\n        this.trainMode.draw();\n        if (this.trainMode.over) {\n          this.restart()\n        }\n      }\n      if (this.vs) {\n        this.vsMode.gamefun();\n        if (this.vsMode.over) {\n          this.restart()\n        }\n      }\n    }\n\n    requestAnimationFrame(this.play);\n  }\n\n}\n\nexport default Game;\n","class Music {\n  constructor(src) {\n    this.bgm = document.getElementById(\"myAudio\");\n    this.bgsound = document.getElementById(\"music-button\");\n    this.icon = document.getElementById(\"icon\")\n  }\n\n\n  musicAction() {\n    this.bgsound.addEventListener(\"click\",() => {\n      if (this.bgm.paused) {\n        this.bgm.play();\n        this.icon.className = \"fas fa-volume-up\"\n      }\n      else {\n        this.bgm.pause();\n        this.icon.className = \"fas fa-volume-off\"\n      }\n    })\n  }\n\n\n}\n\nexport default Music\n","import Game from './game.js';\nimport Music from './music.js'\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvas = document.getElementById(\"MyCanvas\");\n  canvas.width = 1000;\n  canvas.height = 500;\n  const ctx = canvas.getContext(\"2d\");\n  const game = new Game(ctx);\n  const music = new Music();\n  music.musicAction();\n  game.play()\n});\n"],"sourceRoot":""}