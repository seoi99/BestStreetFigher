{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/input.js","webpack:///./lib/sound.js","webpack:///./lib/bullet.js","webpack:///./lib/CustomSprite.js","webpack:///./lib/sprite.js","webpack:///./lib/player.js","webpack:///./lib/hpbar.js","webpack:///./lib/vsMode.js","webpack:///./lib/background.js","webpack:///./lib/enemy.js","webpack:///./lib/trainMode.js","webpack:///./lib/game.js","webpack:///./lib/music.js","webpack:///./lib/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Input","[object Object]","this","restart","input","LEFT","RIGHT","DOWN","UP","UP_MOVE","ATTACK","REVIVE","KICK","SHOOT","SPECIAL","PAUSE","attack","disable","counter","frame","maxFrame","keyHandler","document","addEventListener","e","keys","state","type","keyCode","keyControl","max","sound","createElement","setAttribute","style","display","src","play","then","console","log","pause","bullet","ctx","x","y","dir","w","h","speed","image","Image","hit","collide","drawImage","shoot","customs","ken","jump","width","height","forward_jump","special_kick","fly_kick","stun","ryu","kick","sprite_Sprite","char","onload","obj","action","posUpdateRegular","posUpdate","player","keyboard","stop","move","fps","block","sprite","desc","sControl","bControl","delay","dead","gravity","gravitySpeed","imagePosX","imagePosY","onGround","jumpPower","dy","world","drag","groundDrag","ground","draw","save","scale","restore","dullMove","specialAttack","playSound","enemyX","spriteUpdate","stateUpdate","update","Math","abs","enemy","meleeSound","updateDir","borderLimit","hitBottom","HPBar","len","fixlen","center","color","fillStyle","fillRect","strokeStyle","lineWidth","strokeRect","dmg","vsMode","p1","p2","movement","p1hp","p2hp","over","time","bul","stunned","bulControl","fightControl","soundControl","hpControl","playersCollision","font","textAlign","fillText","gameover","gameConstraint","win","removePlayer","Background","maxWidth","maxHeight","enemy_Enemy","super","rw","rh","alive","transparent","aType","currentAttack","dull","blocked","chance","random","fpsControl","globalAlpha","maxTime","idx","floor","toggleStatus","updateX","setup","end","trainMode","test","kill","p1Hp","enemyHp","enemyStr","respTime","prop","hitChance","splay","start","round","totalScore","range","enemydead","atype","undefined","moveControl","playerToEnemy","bulltobull","enemyToPlayer","pHp","roundText","collision","roundFinished","lib_game","background","gameControl","training","vs","box","canvas","getElementById","textX","cursor","forEach","layerX","layerY","text","boxObj","measureText","push","createBox","clock","roundStart","gamefun","requestAnimationFrame","lib_music","bgm","bgsound","icon","paused","className","getContext","game","music","intro","mouseEvent","clickEvent","musicAction"],"mappings":"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","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\nexport default class Input {\n  constructor() {\n    this.restart = false;\n    this.input = {\n      LEFT: false,\n      RIGHT: false,\n      DOWN: false,\n      UP: false,\n      UP_MOVE: false,\n      ATTACK: false,\n      REVIVE: false,\n      KICK: false,\n      SHOOT: false,\n      SPECIAL: false,\n      PAUSE: false,\n    };\n    this.attack = false;\n    this.disable = false;\n    this.counter = 0;\n    this.frame = 0;\n    this.maxFrame = 0;\n    this.keyHandler = this.keyHandler.bind(this);\n    document.addEventListener(\"keydown\", this.keyHandler);\n    document.addEventListener(\"keyup\", this.keyHandler);\n  }\n\n  keyHandler(e, keys = [65, 68, 84, 89, 85, 87]) {\n    let state = e.type === \"keydown\";\n    switch (e.keyCode) {\n      case keys[0]:\n        this.input.LEFT = state;\n        break;\n      case keys[1]:\n        this.input.RIGHT = state;\n        break;\n      case keys[2]:\n        this.input.ATTACK = state;\n        break;\n      case keys[3]:\n          this.input.KICK = state;\n        break;\n      case keys[4]:\n          this.input.SPECIAL = state;\n        break;\n      case keys[5]:\n        this.attack = state;\n        this.input.UP = state;\n        break;\n    }\n    if (this.input.ATTACK && this.input.SPECIAL) {\n      this.keyControl(3, \"SPECIAL\")\n    } else if (this.input.KICK && this.input.SPECIAL) {\n      this.keyControl(10, \"SPECIAL\")\n    } else if (this.input.KICK) {\n      this.keyControl(4, \"KICK\")\n    } else if (this.input.ATTACK) {\n      this.keyControl(1, \"ATTACK\")\n    }\n    if (e.type === \"keyup\") {\n      this.counter = 0;\n    }\n  }\n  keyControl(max, key) {\n    this.counter++;\n    if (this.counter > max) {\n      this.input[key] = false;\n    } else {\n    this.input[key] = true;\n    }\n  }\n  gameControl() {\n    this.input.REVIVE = false;\n  }\n\n  // movement(keys = [65, 68, 84, 89, 85, 87]) {\n  //\n  //     document.addEventListener(\"keydown\", e => {\n  //       const key = e.keyCode;\n  //       switch (key) {\n  //   //         case keys[0]:\n  //   //           this.input.LEFT = true;\n  //   //           break;\n  //   //         case keys[1]:\n  //   //           this.input.RIGHT = true;\n  //   //           break;\n  //   //         case keys[2]:\n  //   //           this.attack = true;\n  //   //           this.counter++;\n  //   //           this.counter > 2 ? this.input.ATTACK = false : this.input.ATTACK = true;\n  //   //           break;\n  //   //         case keys[3]:\n  //   //           this.attack = true;\n  //   //           this.counter++;\n  //   //           this.counter > 3 ? this.input.KICK = false : this.input.KICK = true;\n  //   //           break;\n  //   //         case keys[4]: this.input.SPECIAL = true; break;\n  //   //         case keys[5]: this.input.UP = true; break;\n  //   //         default:\n  //       }\n  //     });\n  //     document.addEventListener(\"keyup\", e => {\n  //       const key = e.keyCode;\n  //       switch (key) {\n  //         case keys[0]:\n  //           this.input.LEFT = false;\n  //           break;\n  //         case 40:\n  //         case 83:\n  //           this.input.DOWN = false;\n  //           break;\n  //         case keys[1]:\n  //           this.input.RIGHT = false;\n  //           break;\n  //         case keys[2]:\n  //           this.attack = false;\n  //           this.input.ATTACK = false;\n  //           this.counter = 0;\n  //           break;\n  //         case keys[3]:\n  //           this.attack = false;\n  //           // this.input.KICK = false;\n  //           this.counter = 0;\n  //           break;\n  //         case keys[4]: this.input.SPECIAL = false; break;\n  //         case keys[5]: this.input.UP = false; break;\n  //       }\n  //     })\n  //   }\n}\n","class Sound {\n  constructor() {\n    this.sound = document.createElement(\"audio\");\n    this.sound.setAttribute(\"preload\", \"auto\");\n    this.sound.setAttribute(\"controls\", \"none\");\n    this.sound.style.display = \"none\";\n  }\n\n\n  play(src) {\n    this.sound.src = src;\n    this.sound.play().then(() => console.log());\n  }\n\n  stop() {\n    this.sound.pause();\n  }\n}\n\nexport default Sound;\n","\nimport Sound from './sound.js'\n\nclass Bullet {\n  constructor(ctx, x, y, dir) {\n    this.ctx = ctx;\n    this.w = 40;\n    this.h = 40;\n    this.x =  x + dir * 50;\n    this.y = y + 35;\n    this.speed = dir * 10;\n    this.image = new Image();\n    this.image.src = dir > 0 ? `./asset/bullet.png` : `./asset/bullet_left.png`;\n    this.hit = false;\n    this.collide = false;\n    this.sound = new Sound();\n    this.m = true;\n  }\n\n  shoot() {\n    this.ctx.drawImage(this.image, this.x, this.y, this.w, this.h);\n    this.x += this.speed;\n  }\n\n  playSound() {\n    this.sound.play('./asset/sound/hadouken.mp3');\n  }\n\n  draw() {\n    if (!this.collide) {\n      this.shoot()\n\n    }\n\n  }\n\n\n\n\n}\n\nexport default Bullet;\n","export var customs = {\n    ken: {\n        jump: [\n            { name: 's1', x: 0, y: 15, width: 42, height: 75 },\n            { name: 's2', x: 50, y: 0, width: 33, height: 90 },\n            { name: 's3', x: 92, y: 8, width: 29, height: 78 },\n            { name: 's4', x: 129, y: 10, width: 31, height: 68 },\n            { name: 's5', x: 166, y: 8, width: 29, height: 78 },\n            { name: 's6', x: 203, y: 0, width: 33, height: 90 },\n            { name: 's7', x: 243, y: 15, width: 43, height: 75 }\n        ],\n        forward_jump: [\n            { name: 'sprite4', x: 3, y: 23, width: 43, height: 75 },\n            { name: 'sprite1', x: 51, y: 8, width: 33, height: 90 },\n            { name: 'sprite7', x: 91, y: 39, width: 60, height: 37 },\n            { name: 'sprite3', x: 158, y: 22, width: 31, height: 68 },\n            { name: 'sprite6', x: 197, y: 35, width: 73, height: 39 },\n            { name: 'sprite5', x: 277, y: 24, width: 43, height: 74 },\n            { name: 'sprite2', x: 327, y: 8, width: 33, height: 90 }\n        ],\n        special_kick:[\n            { name: 'sprite11', x: 0, y: 38, width: 39, height: 91 },\n            { name: 'sprite3', x: 53, y: 9, width: 32, height: 82 },\n            { name: 'sprite4', x: 102, y: 9, width: 55, height: 87 },\n            { name: 'sprite5', x: 167, y: 10, width: 35, height: 84 },\n            { name: 'sprite6', x: 210, y: 11, width: 56, height: 80 },\n            { name: 'sprite7', x: 288, y: 12, width: 33, height: 80 },\n            { name: 'sprite10', x: 340, y: 16, width: 34, height: 83 },\n            { name: 'sprite12', x: 385, y: 51, width: 29, height: 78 },\n            { name: 'sprite13', x: 421, y: 54, width: 43, height: 75 }\n        ],\n        fly_kick: [\n            {\"name\":\"sprite1\",\"x\":0,\"y\":16,width:36,height:63},\n            {\"name\":\"sprite3\",\"x\":41,\"y\":22,width:63,height:51},\n            {\"name\":\"sprite2\",\"x\":108,\"y\":16,width:37,height:63}\n            ],\n        stun: [\n            { name: 'sprite3', x: 1, y: 9, width: 52, height: 77 },\n            { name: 'sprite4', x: 54, y: 10, width: 56, height: 76 },\n            { name: 'sprite1', x: 110, y: 4, width: 62, height: 82 },\n            { name: 'sprite2', x: 173, y: 6, width: 48, height: 80 }\n        ]\n\n    },\n    ryu: {\n        kick: [{\"name\":\"sprite2\",\"x\":5,\"y\":4,\"width\":39,\"height\":81},{\"name\":\"sprite1\",\"x\":61,\"y\":1,\"width\":67,\"height\":84},{\"name\":\"sprite3\",\"x\":134,\"y\":4,\"width\":39,\"height\":81}]\n    }\n};\n\n\n\n\n","\nimport { customs } from './CustomSprite.js'\n\nexport default class Sprite {\n  constructor(char) {\n    this.char = char;\n    this.image = new Image();\n    this.maxFrame = 3;\n    this.image.src = `./asset/${this.char}/idle.png`;\n\n    this.frame = 0;\n    this.image.onload = () => {\n      this.w = this.image.width / (this.maxFrame + 1);\n      this.h = this.image.height;\n      this.x = this.frame * this.w;\n      this.y = 0;\n    }\n  }\n\n  posUpdate(obj) {\n      this.w = obj[this.frame].width;\n      this.h = obj[this.frame].height;\n      this.x = obj[this.frame].x;\n      this.y = obj[this.frame].y;\n  }\n\n  posUpdateRegular() {\n    this.w = this.image.width / (this.maxFrame + 1);\n    this.h = this.image.height;\n    this.x = this.frame * this.w;\n    this.y = 0;\n  }\n  update(action) {\n\n    this.posUpdateRegular();\n    if (this.char === \"ken\") {\n      switch (action) {\n        case \"jump\":\n          this.posUpdate(customs.ken.jump);\n          this.maxFrame = 6;\n          this.image.src = `./asset/${this.char}/${action}.png`;\n          break;\n        case \"forward_jump\":\n          this.posUpdate(customs.ken.forward_jump);\n          this.maxFrame = 6;\n          this.image.src = `./asset/${this.char}/${action}.png`;\n          break;\n        case \"special_kick\":\n          this.posUpdate(customs.ken.special_kick);\n          this.maxFrame = 8;\n          this.image.src = `./asset/${this.char}/${action}.png`;\n          break;\n        case \"kick\":\n        case \"moving\":\n\n          this.maxFrame = 4;\n          this.image.src = `./asset/${this.char}/${action}.png`;\n\n          break;\n        case \"stun\":\n        case \"dead\":\n          this.posUpdate(customs.ken.stun);\n          this.maxFrame = 3;\n          this.image.src = `./asset/${this.char}/${action}.png`;\n          break;\n        case \"fly_kick\":\n          this.maxFrame = 2;\n          this.posUpdate(customs.ken.fly_kick);\n          this.image.src = `./asset/${this.char}/${action}.png`;\n          break;\n        case \"punch\":\n        case \"win\":\n\n          this.maxFrame = 2;\n          this.image.src = `./asset/${this.char}/${action}.png`;\n          break;\n        case \"shot\":\n\n          this.maxFrame = 1;\n          this.image.src = `./asset/${this.char}/${action}.png`;\n          break;\n        case \"block\":\n        case \"fly_punch\":\n\n          this.maxFrame = 0;\n          this.image.src = `./asset/${this.char}/${action}.png`;\n          break;\n        default:\n\n          this.maxFrame = 3;\n          this.image.src = `./asset/${this.char}/idle.png`;\n\n          break;\n      }\n    }\n    if (this.char === \"ryu\") {\n\n      switch (action) {\n        case \"special_kick\":\n          this.maxFrame = 5;\n          this.image.src = `./asset/${this.char}/${action}.png`;\n          break;\n        case \"moving\":\n          this.maxFrame = 4;\n          this.image.src = `./asset/${this.char}/${action}.png`;\n          break;\n        case \"kick\":\n          this.posUpdate(customs.ryu.kick)\n          this.maxFrame = 2;\n          this.image.src = `./asset/${this.char}/${action}.png`;\n          break;\n        case \"punch\":\n        case \"shot\":\n        case \"stun\":\n        case \"win\":\n          this.maxFrame = 2;\n          this.image.src = `./asset/${this.char}/${action}.png`;\n          break;\n        case \"block\":\n          this.maxFrame = 0;\n          this.image.src = `./asset/${this.char}/${action}.png`;\n          break;\n        case \"dead\":\n          this.maxFrame = 3;\n          this.image.src = `./asset/${this.char}/${action}.png`;\n          break;\n        default:\n          this.maxFrame = 3;\n          this.image.src = `./asset/${this.char}/idle.png`;\n\n          break;\n      }\n    }\n  }\n\n}\n","import Input from './input.js';\nimport Bullet from './bullet.js';\nimport Sprite from './sprite.js';\nimport Sound from './sound.js'\n\nclass Player {\n  constructor(ctx,x = 300, char, dir) {\n    this.ctx = ctx;\n    this.keyboard = new Input();\n    this.frame = 0;\n\n    this.x = x;\n    this.y = 300;\n    this.speed = 0;\n    this.stop = 0;\n    this.move = 5;\n    this.bullet = null;\n    this.fps = 0;\n    this.stun = false;\n    this.block = false;\n    this.sprite = new Sprite(char);\n    this.dir = dir;\n    this.state = \"idle\";\n    this.desc = \"\";\n    this.sControl = true;\n    this.bControl = true;\n    this.sound = new Sound();\n    this.delay = 0;\n    this.dead = false;\n    this.gravity = 0.05;\n    this.gravitySpeed = 0;\n\n    this.imagePosX = this.sprite.x;\n    this.imagePosY = this.sprite.y;\n    this.w = this.sprite.w;\n    this.h = this.sprite.h;\n    this.onGround = false;\n    this.jumpPower = -8;\n    this.dy = 0;\n    this.world = {\n      gravity: 0.2, // strength per frame of gravity\n      drag: 0.999, // play with this value to change drag\n      groundDrag: 0.9, // play with this value to change ground movement\n      ground: 400,\n    }\n  }\n\n\n\n  draw() {\n    if (this.bullet) {\n      this.bullet.draw()\n    }\n    this.ctx.save();\n    this.ctx.scale(this.dir,1);\n    this.ctx.drawImage(this.sprite.image, this.imagePosX, this.imagePosY, this.w, this.h, this.dir * this.x,this.y, this.dir * this.w * 2, this.h * 2);\n    this.ctx.restore();\n  }\n\n  updateDir(x) {\n    if (this.x < x) {\n      this.dir = 1;\n      if (this.keyboard.input.LEFT && this.dullMove((x))) this.speed = -this.move\n    } else {\n      this.dir = -1;\n      if (this.keyboard.input.RIGHT && this.dullMove((x))) this.speed = this.move;\n    }\n  }\n\n  hitDir() {\n    return -this.dir * 1;\n  }\n\n\n  spriteUpdate() {\n      this.sprite.frame = this.frame;\n      if (this.keyboard.input.UP && (this.keyboard.input.RIGHT || this.keyboard.input.LEFT) && this.state !== \"jump\") {\n        this.keyboard.input.LEFT === true ? this.speed = -this.move : this.speed = this.move;\n        this.state = \"forward_jump\";\n        if (this.keyboard.input.ATTACK) {\n          this.state = \"fly_punch\";\n        }\n        else if (this.keyboard.input.KICK) {\n          this.frame = 1;\n          this.state = \"fly_kick\";\n        }\n      }\n      else if (this.keyboard.input.UP && this.state !== \"forward_jump\") {\n        this.state = \"jump\";\n        if (this.keyboard.input.ATTACK) {\n          this.state = \"fly_punch\";\n        } else if (this.keyboard.input.KICK) {\n          this.frame = 1;\n          this.state = \"fly_kick\";\n        }\n      }\n      else if (this.stun) {\n        this.state = \"stun\";\n        this.delay++;\n        if (this.delay > 20) {\n          this.stun = false;\n          this.delay = 0;\n        }\n      }\n      else if (this.block) {\n        this.state = \"block\";\n        this.delay++;\n        if (this.delay > 10) {\n          this.block = false;\n          this.delay = 0;\n        }\n    }\n    else if (this.keyboard.input.SPECIAL) {\n        this.specialAttack();\n    }\n      else if ((this.keyboard.input.LEFT || this.keyboard.input.RIGHT) && this.state !== \"jump\" && this.state !== \"forward_jump\") {\n        this.keyboard.input.LEFT === true ? this.speed = -this.move : this.speed = this.move;\n        this.state = \"moving\";\n      }\n      else if (this.keyboard.input.ATTACK && !this.stun && this.state !== \"special_kick\") {\n        this.state = \"punch\";\n      } else if (this.keyboard.input.KICK && !this.stun && this.state !== \"special_kick\") {\n        this.state = \"kick\";\n      }\n     else {\n       if (this.onGround) {\n         this.state = \"\";\n         this.keyboard.input.PAUSE = false;\n       }\n      }\n  }\n\n  specialAttack() {\n    if (this.keyboard.input.ATTACK && !this.keyboard.input.KICK) {\n      this.state = \"shot\";\n      if (!this.bullet) {\n        if (this.frame === 0)  this.playSound('./asset/sound/hadouken.mp3');\n        this.bullet = new Bullet(this.ctx, this.x, this.y, this.dir);\n      }\n      if (this.keyboard.input.SHOOT) {\n        this.bullet.playSound();\n        this.keyboard.input.SHOOT = false;\n      }\n    }\n    else if (!this.keyboard.input.ATTACK && this.keyboard.input.KICK) {\n      this.state = \"special_kick\";\n\n    }\n  }\n  stateUpdate(fps) {\n    this.fps++;\n    if (this.fps > fps) {\n      this.fps = 0;\n      this.frame++;\n      if (this.frame >= this.sprite.maxFrame) this.frame = 0;\n    }\n    if (this.state === \"special_kick\") {\n      this.x += this.dir * 2;\n    }\n\n  }\n\n  hitBottom() {\n    if (this.y + 120 >= this.world.ground) {\n      this.y = this.world.ground - 120;\n      this.dy = 0;\n      this.onGround = true;\n      this.keyboard.input.UP = false;\n    } else {\n      this.keyboard.input.UP = true;\n      this.onGround = false;\n    }\n  }\n\n  action(enemyX) {\n    if (this.desc !== this.state) {\n      this.frame = 0;\n      this.desc = this.state;\n    }\n    this.speed = this.stop;\n    this.spriteUpdate();\n    this.stateUpdate(15);\n    this.sprite.update(this.state);\n  }\n\n  dullMove(enemyX) {\n    return Math.abs(this.x - enemyX) < 90\n  }\n\n  borderLimit() {\n    if (this.x > 875) {\n      if (this.keyboard.input.LEFT) {\n        this.speed = -this.move\n      } else {\n        this.speed = 0;\n      }\n    }\n    if (this.x < 0) {\n      if (this.keyboard.input.RIGHT) {\n        this.speed = this.move\n      } else {\n        this.speed = 0;\n      }\n    }\n  }\n\n  playSound(src) {\n    if (this.sControl) {\n      this.sound.play(src);\n      this.sControl = false;\n    }\n  }\n\n  meleeSound(enemy) {\n    if ((this.keyboard.input.ATTACK || this.keyboard.input.KICK)) {\n      if (Math.abs(this.x - enemy.x) < 100) {\n          this.playSound('./asset/sound/punch_hit.wav');\n      } else {\n        if (this.keyboard.input.KICK && this.keyboard.input.SPECIAL) {\n          this.playSound('./asset/sound/s_kick.mp3');\n        } else {\n          this.playSound('./asset/sound/punch_miss.wav');\n        }\n      }\n    }\n    else {\n      this.sControl = true;\n    }\n  }\n\n\n  soundControl(enemy) {\n    if (this.state !== \"jump\" && this.state !== \"forward_jump\") {\n      this.meleeSound(enemy);\n    }\n  }\n\n  update(enemyX = 0) {\n    this.updateDir(enemyX);\n    this.action(enemyX);\n    this.borderLimit();\n    this.x += this.speed;\n    if (this.keyboard.input.UP && this.onGround) this.dy = this.jumpPower;\n    this.dy += this.world.gravity;\n    this.dy *= this.world.drag;\n    this.y += this.dy;\n    this.imagePosX = this.sprite.x;\n    this.imagePosY = this.sprite.y;\n    this.w = this.sprite.w;\n    this.h = this.sprite.h;\n    this.hitBottom();\n  }\n\n\n\n  removePlayer() {\n    this.sprite.update(\"dead\");\n    this.dead = true;\n  }\n\n\n  win() {\n    this.sprite.update(\"win\");\n    this.dead = true;\n  }\n}\n\n\nexport default Player;\n","export default class HPBar {\n  constructor(ctx, x,y, len) {\n    this.ctx = ctx;\n    this.x = x;\n    this.y = y;\n    this.len = len;\n    this.fixlen = len;\n    this.center = (this.x + this.fixlen)/2\n  }\n\n  draw(color=\"yellow\") {\n    this.ctx.fillStyle = \"red\";\n    this.ctx.fillRect(this.center,this.y, this.fixlen, 30);\n    this.ctx.fillStyle = color;\n    this.ctx.fillRect(this.center,this.y, this.len, 30);\n    this.ctx.strokeStyle = \"white\";\n    this.ctx.lineWidth = 2;\n    this.ctx.strokeRect(this.center, this.y, this.fixlen, 30);\n  }\n\n\n\n  block(d=0.05) {\n    this.len -= d\n  }\n  hit(dmg=1) {\n    this.len -= dmg;\n  }\n}\n","import Player from './player.js';\nimport HPBar from \"./hpbar\";\n\n\nclass VsMode {\n    constructor(ctx) {\n        this.ctx = ctx;\n        this.p1 = new Player(this.ctx, 300, \"ken\", 1);\n        this.p2 = new Player(this.ctx, 700, \"ryu\", -1);\n        this.p1.keyboard.movement();\n        this.p2.keyboard.movement([37, 39, 74, 75, 76]);\n        this.p1hp = new HPBar(this.ctx, 0, 50, 250);\n        this.p2hp = new HPBar(this.ctx, 1000, 50, 250);\n        this.over = false;\n        this.time = 99;\n    }\n\n\n\n    stunned() {\n        if (this.p1.keyboard.attack) {\n            this.p2.stun = true;\n            this.p2.x++;\n        }\n        if (this.p2.keyboard.attack) {\n            this.p1.stun = true;\n            this.p1.x--;\n        }\n    }\n\n    bulControl(bul, enemy) {\n        if (bul) {\n            if (Math.abs(bul.x - enemy.x) < 100) {\n                if (this.p2.keyboard.input.RIGHT) this.p2.block = true;\n                else if (this.p1.keyboard.input.LEFT) this.p1.block = true;\n                else enemy.stun = true;\n            }\n            else {\n                enemy.stun = false;\n            }\n        }\n    }\n    fightControl() {\n        this.p2.block = false;\n        this.p1.block = false;\n        if ((Math.abs(this.p1.x - this.p2.x) < 100 && (this.p1.keyboard.attack || this.p2.keyboard.attack))) {\n\n            if (this.p1.keyboard.attack && this.p2.keyboard.input.RIGHT) {\n                this.p2.block = true;\n                this.p2.x++;\n            }\n            if (this.p2.keyboard.attack && this.p1.keyboard.input.LEFT) {\n                this.p1.block = true;\n                this.p1.x--;\n            }\n                this.stunned();\n        }\n        this.bulControl(this.p1.bullet, this.p2);\n        this.bulControl(this.p2.bullet, this.p1);\n    }\n\n    hpControl() {\n        if (this.p1.stun) {\n            this.p1hp.hit()\n        }\n        if (this.p1.block) {\n            this.p1hp.block()\n        }\n        if (this.p2.stun) {\n            this.p2hp.hit()\n        }\n        if (this.p2.block) {\n            this.p2hp.block()\n        }\n    }\n    playersCollision() {\n        this.fightControl();\n        this.p1.soundControl(this.p2);\n        this.p2.soundControl(this.p1);\n        this.hpControl();\n    }\n\n    draw() {\n        this.p1.draw();\n        this.p2.draw();\n        this.p1hp.draw();\n        this.p2hp.draw();\n    }\n\n    update() {\n        this.p1.update(this.p2.x);\n        this.p2.update(this.p1.x);\n        this.playersCollision();\n    }\n    gameover() {\n        this.ctx.font=\"40px Acme\";\n        this.ctx.fillStyle = \"red\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(`You Win`,500,150);\n    }\n\n    gamefun() {\n        if (this.p1hp.len >= 0 && this.p2hp.len >= 0 && this.time > 0) {\n            this.update();\n        } else {\n            this.gameover();\n        }\n        this.draw()\n        this.gameConstraint();\n    }\n\n    gameConstraint() {\n        if (this.p1hp.len <= 0) {\n            this.p2.win();\n            this.p1.removePlayer();\n            this.over = true;\n        }\n        else if (this.p2hp.len <= 0) {\n            this.p1.win();\n            this.p2.removePlayer();\n            this.over = true;\n        }\n    }\n\n}\n\nexport default VsMode\n","\nexport default class Background {\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.maxWidth = 1000;\n    this.maxHeight = 500;\n    this.image = new Image();\n    this.image.src = 'https://i.pinimg.com/originals/91/64/01/9164016aa77fa969f71800b9ba8c32b4.gif';\n  }\n\n  draw() {\n    this.ctx.drawImage(this.image,0,0,this.maxWidth,this.maxHeight);\n  }\n\n}\n","import Sprite from './sprite.js';\nimport Player from './player.js';\nimport Bullet from './bullet.js';\n\nexport default class Enemy extends Player {\n\n    constructor(x, ctx) {\n        super();\n        this.x = x;\n        this.ctx = ctx;\n        this.rw = 140;\n        this.rh = 160;\n        this.y = 280;\n        this.alive = true;\n        this.frame = 0;\n        this.transparent = 1;\n        this.fps = 0;\n        this.dir = 1;\n        this.attack = false;\n        this.counter = 0;\n        this.sprite = new Sprite('ryu');\n        this.aType = ['punch', 'kick'];\n        this.currentAttack = \"kick\";\n        this.dull = false;\n        this.blocked = false;\n        this.stop = 0;\n        this.chance = 0;\n\n        this.imagePosX = this.sprite.x;\n        this.imagePosY = this.sprite.y;\n        this.w = this.sprite.w;\n        this.h = this.sprite.h;\n\n        this.move = 2;\n        this.bullet = null;\n        this.sControl = true;\n        this.random = Math.random()\n        this.onGround = false;\n        this.jumpPower = -8;\n        this.dy = 0;\n        this.world = {\n            gravity: 0.2, // strength per frame of gravity\n            drag: 0.999, // play with this value to change drag\n            groundDrag: 0.9, // play with this value to change ground movement\n            ground: 400,\n        }\n    }\n\n    fpsControl(fps) {\n        this.fps++;\n        if (this.fps > fps) {\n            this.fps = 0;\n            if (this.frame === 0) {\n                this.random = Math.random();\n            }\n            if (!this.alive) {\n                this.frame >= this.sprite.maxFrame ? this.frame = this.sprite.maxFrame : this.frame++;\n            } else {\n                this.frame++;\n                if (this.frame >= this.sprite.maxFrame) this.frame = 0;\n            }\n        }\n    }\n\n    setup(x) {\n        this.sprite.frame = this.frame;\n        this.imagePosX = this.sprite.x;\n        this.imagePosY = this.sprite.y;\n        this.w = this.sprite.w;\n        this.h = this.sprite.h;\n        this.fpsControl(10);\n        this.ctx.save();\n        this.ctx.scale(this.dir,1);\n        this.ctx.globalAlpha = this.transparent;\n        this.ctx.drawImage(this.sprite.image, this.imagePosX, this.imagePosY, this.w, this.h, this.dir * this.x,this.y, this.dir * this.w * 2, this.h * 2);\n        this.ctx.restore();\n    }\n\n    toggleStatus(maxTime, type) {\n        if (this.counter > maxTime) {\n            switch (type) {\n                case \"attack\":\n                    this.attack = !this.attack;\n                    break;\n                case \"move\":\n                    this.dull = false;\n                    break;\n                case \"block\":\n                    this.blocked = false;\n                    break;\n            }\n            this.counter = 0;\n        }\n    }\n\n    updateAttackSprite() {\n        const idx = Math.floor(Math.random() * 3);\n        this.currentAttack = this.aType[idx];\n    }\n\n    attacksound() {\n            this.playSound('./asset/sound/punch_hit.mp3');\n    }\n\n    updateX(x, speed, dir = 1) {\n        if (this.x < x) this.x += speed * dir;\n        else this.x -= speed * dir\n    }\n\n    update(x) {\n        this.sControl = true;\n        if (!this.dull && !this.blocked) {\n            if (Math.abs(this.x - x) > 240) {\n                if (this.random < 0.1) {\n                    this.sprite.update(\"shot\");\n                    if (this.bullet === null) {\n                    if  (this.frame === 0) {\n                        this.playSound('./asset/sound/hadouken.mp3');\n                        this.bullet = new Bullet(this.ctx, this.x, this.y, this.dir);\n                    } else if (this.frame >= this.sprite.maxFrame) {\n                        this.sprite.update();\n                    }\n                }\n                } else {\n                    this.updateX(x, this.move);\n                    this.sprite.update(\"moving\");\n                }\n            }\n            else if (Math.abs(this.x - x) > 90) {\n                if (this.random < 0.4) {\n                    this.updateX(x, this.move);\n                    this.sprite.update(\"moving\");\n                }\n                else {\n                    this.updateX(x, this.stop);\n                    this.sprite.update();\n                }\n            } else {\n                if (this.random < 0.3) {\n                    this.attack = true;\n                    this.sprite.update(\"punch\");\n                } else {\n                    this.attack = false;\n                    this.sprite.update();\n                }\n            }\n        } else {\n            if (this.blocked) {\n                this.toggleStatus(20, \"block\")\n                this.sprite.update(\"block\");\n            } else if (this.dull) {\n                this.sprite.update(\"stun\");\n                this.toggleStatus(20, \"move\");\n        }\n            this.counter++;\n            console.log(this.blocked, this.dull)\n        if (this.bullet) {\n            this.bullet.draw()\n        }\n        }\n    }\n    playSound(src) {\n        if (this.sControl) {\n            this.sound.play(src);\n            this.sControl = false;\n        }\n    }\n    updateDir(x) {\n        if (x > this.x) this.dir = 1;\n        else this.dir = -1;\n    }\n\n    end() {\n        this.transparent -= 0.05;\n        this.sprite.update(\"dead\");\n    }\n\n    draw(x) {\n        this.updateDir(x);\n        this.setup(x);\n        if (!this.alive) {\n            this.end()\n        }\n    }\n\n\n};\n","import Enemy from \"./enemy\";\nimport Sound from \"./sound\";\nimport Player from './player.js';\nimport HPBar from \"./hpbar\";\n\nclass TrainMode {\n    constructor(ctx) {\n        this.ctx = ctx;\n        this.test = 100;\n        this.kill = 0;\n        this.player = new Player(this.ctx,300,\"ken\",1);\n        this.enemy = new Enemy(800, this.ctx);\n        // this.player.keyboard.movement();\n        this.image = new Image();\n        this.sound = new Sound();\n        this.p1Hp = new HPBar(this.ctx, 0, 50, 250);\n        this.enemyHp = new HPBar(this.ctx,1000, 50, 250);\n        this.playSound = true;\n        this.enemyStr = 1;\n        this.respTime = 30;\n        this.prop = Math.random();\n        this.hitChance = 0.6;\n        this.sound = new Sound();\n        this.splay = true;\n        this.start = false;\n        this.round = 1;\n        this.fps = 0;\n    }\n\n    gameover() {\n        this.image.src = 'https://static.comicvine.com/uploads/original/11111/111112704/3860536-ron_vs_ken_by_eastmonkey.jpg';\n        this.ctx.drawImage(this.image,0, 0, 1000, 500);\n        this.ctx.font=\"40px StreetFighter\";\n        this.ctx.fillStyle = \"black\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\"Game Over\",500,150);\n        this.totalScore();\n\n    }\n\n    totalScore() {\n        this.test--;\n        if (this.test === 0) {\n            this.sound.play('./asset/sound/game_finished.wav')\n        }\n        if (this.test <= 20) {\n            this.ctx.fillText(`Total Kill : ${this.kill}`,500,290);\n        }\n    }\n\n    enemydead(x,range=90) {\n        if (Math.abs(x - this.enemy.x) < range) {\n            if (this.prop > this.hitChance) {\n                this.enemy.dull = true;\n                this.hitChance += 0.01;\n                this.enemyHp.hit();\n            } else {\n                this.enemy.blocked = true;\n                this.hitChance -= 0.001;\n                this.enemyHp.block();\n            }\n\n            if (this.enemyHp.len <= 0) {\n                this.enemy.alive = false;\n            }\n            if (this.player.keyboard.input.KICK && this.player.keyboard.input.SPECIAL) {\n                this.enemy.updateX(this.player.x, 1,-2);\n            }\n        } else {\n            this.hitChance = 0.6;\n            this.prop = Math.random();\n        }\n    }\n\n    playerToEnemy() {\n        if (this.player.keyboard.input.ATTACK || this.player.keyboard.input.KICK) {\n            this.enemydead(this.player.x, 90);\n        }\n        else if (this.player.bullet) {\n            this.enemydead(this.player.bullet.x,80);\n        }\n    }\n\n    bulltobull() {\n        if (Math.abs(this.player.bullet.x - this.enemy.bullet.x) < 20) {\n            this.player.bullet.collide = true;\n            this.enemy.bullet.collide = true;\n            this.player.bullet = null;\n            this.enemy.bullet = null;\n        }\n    }\n    enemyToPlayer(atype) {\n        if (atype && Math.abs(atype.x - this.player.x) < 90) {\n            if (atype.collide !== undefined) {\n                atype.collide = true;\n                if (this.fps > 20) {\n                    this.enemy.bullet = null;\n                    this.fps = 0;\n                }\n                this.fps++;\n            }\n            if (this.enemy.dull || this.enemy.blocked) {\n                this.enemy.attack = false;\n            }\n            if (this.enemy.attack || this.enemy.bullet) {\n                if (this.player.keyboard.input.LEFT) {\n                    if (this.player.x < atype.x) {\n                        this.player.block = true;\n                        this.p1Hp.block()\n                    }\n                } else if (this.player.keyboard.input.RIGHT) {\n                    if (this.player.x > atype.x) {\n                        this.player.block = true;\n                        this.p1Hp.block()\n                    }\n                } else {\n                    this.p1Hp.hit(this.enemyStr);\n                    this.player.stun = true;\n                }\n            }\n        } else {\n            this.enemy.attack = false;\n        }\n    }\n\n    moveControl() {\n        if (Math.abs(this.player.x - this.enemy.x) <= 80) {\n            if (this.player.x > this.enemy.x) {\n                this.player.keyboard.input.LEFT = false;\n            } else {\n                this.player.keyboard.input.RIGHT = false;\n            }\n        }\n    }\n    collision() {\n        this.moveControl();\n        this.playerToEnemy();\n        if (this.player.bullet && this.enemy.bullet) {\n            this.bulltobull();\n        }\n        if (this.enemy.bullet) {\n            this.enemyToPlayer(this.enemy.bullet);\n        }\n        this.enemyToPlayer(this.enemy);\n\n    }\n\n\n\n\n\n\n\n    respawn() {\n        if (this.enemy.transparent <= 0) {\n            this.sound.play('./asset/sound/die.wav');\n            this.enemyHp.len = 200;\n            this.enemy = new Enemy(800, this.ctx);\n            this.enemyStr += 0.1;\n            this.respTime--;\n            this.hitChance += 0.02;\n            this.round++;\n        }\n    }\n\n    pHp() {\n        this.ctx.fillStyle = \"red\";\n        this.p1Hp.draw('yellow');\n        this.enemyHp.draw('yellow');\n    }\n\n    setup() {\n        this.pHp();\n        this.player.draw();\n        this.enemy.draw(this.player.x);\n    }\n\n    update() {\n        this.roundText();\n        this.player.soundControl(this.enemy);\n        this.player.update(this.enemy.x);\n        this.collision();\n\n    }\n    roundFinished() {\n        this.player.win();\n        this.start= false;\n        if (this.splay) {\n            this.sound.play('./asset/sound/youwin.wav');\n            this.splay = false;\n        }\n    }\n\n    roundText() {\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillStyle = 'red';\n        this.ctx.fillText(`Round ${this.round}`, 500,60,60);\n    }\n\n    draw() {\n        if (this.p1Hp.len <= 0) {\n            this.gameover();\n        } else {\n            this.setup();\n            if (this.enemy.alive) {\n                this.update();\n            } else {\n                this.roundFinished();\n            }\n            this.enemy.update(this.player.x);\n\n            if (this.start) {\n            }\n        }\n    }\n}\n\nexport default TrainMode\n","import vsMode from './vsMode.js';\nimport Background from './background.js';\nimport trainMode from './trainMode.js';\nimport Input from './input.js';\nimport VsMode from \"./vsMode\";\nimport Sound from \"./sound\";\n\nclass Game {\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.background = new Background(this.ctx);\n    this.play = this.play.bind(this);\n    this.input = new Input();\n    this.input.gameControl();\n    this.fps = 0;\n    this.image = new Image();\n    this.image.src = 'https://i.pinimg.com/originals/f6/c4/51/f6c4516c11809f1b3550e0c68abfef89.gif';\n    this.test = 70;\n    this.time = 60;\n    this.training = false;\n    this.vs = false;\n    this.vsMode = null;\n    this.trainMode = null;\n    this.round = 1;\n    this.box = [];\n    this.canvas = document.getElementById(\"MyCanvas\");\n    this.transparent = 1;\n    this.textX = 1000;\n    this.sound = new Sound();\n    this.sControl = false;\n  }\n\n  intro() {\n    this.image.onload = () => {\n      this.ctx.drawImage(this.image, 0, 0, 1000, 500);\n      this.ctx.font = \"40px StreetFigther\";\n      this.ctx.fillStyle = \"black\";\n      this.ctx.textAlign = \"center\";\n      this.ctx.fillText(`Best Street Fighter`, 500, 200);\n      this.ctx.font = \"20px Acme\";\n      this.setup();\n    }\n  }\n\n  mouseEvent() {\n    this.canvas.addEventListener(\"mousemove\", e => {\n      this.canvas.style.cursor = \"default\";\n      this.box.forEach(obj => {\n        if (e.layerX >= obj.x - obj.w && e.layerX <= obj.x + obj.w &&\n          e.layerY >= obj.y - obj.h && e.layerY <= obj.y + obj.h) {\n          if (!this.input.restart) {\n            this.canvas.style.cursor = \"pointer\"\n          }\n        }\n      })\n    }, false);\n  }\n  clickEvent() {\n    this.canvas.addEventListener(\"click\", e => {\n      this.box.forEach(obj => {\n        if (e.layerX >= obj.x - obj.w && e.layerX <= obj.x + obj.w &&\n            e.layerY >= obj.y - obj.h && e.layerY <= obj.y + obj.h) {\n          if (!this.input.restart) {\n            if (obj.mode === \"vs\") {\n              this.vs = true;\n              this.input.restart = true;\n              this.vsMode = new VsMode(this.ctx);\n            } else if (obj.mode === \"train\") {\n              this.trainMode = new trainMode(this.ctx);\n              this.input.restart = true;\n              this.training = true;\n            }\n          }\n        }\n      })\n    }, false)\n  }\n  createBox(text,x,y,h, mode) {\n    this.ctx.font = \"20px StreetFighter\";\n    this.ctx.fillText(text, x,y);\n    let w = this.ctx.measureText(text).width / 2;\n    const boxObj = {\n      x,y,h,w,mode\n    };\n    this.box.push(boxObj)\n  }\n\n  setup() {\n    this.createBox(\"1 Player Mode\", 500, 300, 20, \"train\");\n    this.createBox(\"2 Player Mode\", 500, 350, 20, \"vs\");\n  }\n\n  clock() {\n    this.ctx.textAlign = \"center\";\n    this.ctx.fillStyle = \"red\";\n    this.ctx.font=\"40px Acme\";\n    this.fps++;\n    if (this.fps > 70) {\n      this.time--;\n      this.fps = 0;\n    }\n    this.ctx.fillText(`${this.time}`,500,60);\n  }\n\n\n  roundStart() {\n    this.ctx.save();\n    this.ctx.font = \"70px StreetFighter\";\n    this.ctx.fillStyle = \"black\";\n    this.ctx.fillText(` Round ${this.round} Start`, this.textX,150);\n    this.textX-= 10;\n    this.ctx.restore();\n    if (this.textX <= 0) {\n      if (this.training) {\n      this.trainMode.start = true;\n      }\n    } else {\n      this.sControl = true;\n    }\n    // this.transparent-= 0.01;\n  }\n\n\n  play() {\n    if (this.input.restart) {\n      this.clock();\n      this.background.draw();\n      this.roundStart();\n      if (this.training) {\n        this.trainMode.draw();\n      }\n      else if (this.vs) {\n        this.vsMode.gamefun();\n      }\n    }\n\n    requestAnimationFrame(this.play);\n  }\n\n}\n\nexport default Game;\n","class Music {\n  constructor() {\n    this.bgm = document.getElementById(\"myAudio\");\n    this.bgsound = document.getElementById(\"music-button\");\n    this.icon = document.getElementById(\"icon\");\n\n\n  }\n\n\n\n  musicAction() {\n    this.bgsound.addEventListener(\"click\",() => {\n      if (this.bgm.paused) {\n        this.bgm.play();\n        this.icon.className = \"fas fa-volume-up\"\n      }\n      else {\n        this.bgm.pause();\n        this.icon.className = \"fas fa-volume-off\"\n      }\n    })\n  }\n\n\n}\n\nexport default Music\n","import Game from './game.js';\nimport Music from './music.js'\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvas = document.getElementById(\"MyCanvas\");\n  canvas.width = 1000;\n  canvas.height = 500;\n  const ctx = canvas.getContext(\"2d\");\n\n\n  const game = new Game(ctx);\n  const music = new Music();\n  game.intro();\n  game.mouseEvent();\n  game.clickEvent();\n  music.musicAction();\n\n  game.play();\n\n});\n"],"sourceRoot":""}