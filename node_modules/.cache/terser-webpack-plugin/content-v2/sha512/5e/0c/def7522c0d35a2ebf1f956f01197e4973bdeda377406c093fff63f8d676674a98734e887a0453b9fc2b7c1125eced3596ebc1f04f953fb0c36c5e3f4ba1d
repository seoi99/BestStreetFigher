{"map":"{\"version\":3,\"sources\":[\"webpack/bootstrap\",\"/Users/dajinkim/Desktop/bjProject/BestStreetFighter/lib/input.js\",\"/Users/dajinkim/Desktop/bjProject/BestStreetFighter/lib/sound.js\",\"/Users/dajinkim/Desktop/bjProject/BestStreetFighter/lib/bullet.js\",\"/Users/dajinkim/Desktop/bjProject/BestStreetFighter/lib/sprite.js\",\"/Users/dajinkim/Desktop/bjProject/BestStreetFighter/lib/hpbar.js\",\"/Users/dajinkim/Desktop/bjProject/BestStreetFighter/lib/player.js\",\"/Users/dajinkim/Desktop/bjProject/BestStreetFighter/lib/vsMode.js\",\"/Users/dajinkim/Desktop/bjProject/BestStreetFighter/lib/background.js\",\"/Users/dajinkim/Desktop/bjProject/BestStreetFighter/lib/enemy.js\",\"/Users/dajinkim/Desktop/bjProject/BestStreetFighter/lib/trainMode.js\",\"/Users/dajinkim/Desktop/bjProject/BestStreetFighter/lib/game.js\",\"/Users/dajinkim/Desktop/bjProject/BestStreetFighter/lib/music.js\",\"/Users/dajinkim/Desktop/bjProject/BestStreetFighter/lib/main.js\"],\"names\":[\"installedModules\",\"__webpack_require__\",\"moduleId\",\"exports\",\"module\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"enumerable\",\"get\",\"r\",\"Symbol\",\"toStringTag\",\"value\",\"t\",\"mode\",\"__esModule\",\"ns\",\"create\",\"key\",\"bind\",\"n\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"Input\",\"[object Object]\",\"this\",\"restart\",\"input\",\"LEFT\",\"RIGHT\",\"DOWN\",\"ATTACK\",\"REVIVE\",\"KICK\",\"SHOOT\",\"SPECIAL\",\"attack\",\"counter\",\"keys\",\"document\",\"addEventListener\",\"e\",\"keyCode\",\"sound\",\"createElement\",\"setAttribute\",\"style\",\"display\",\"src\",\"play\",\"then\",\"console\",\"log\",\"pause\",\"bullet\",\"ctx\",\"x\",\"y\",\"dir\",\"w\",\"h\",\"speed\",\"image\",\"Image\",\"hit\",\"collide\",\"drawImage\",\"shoot\",\"Sprite\",\"char\",\"frame\",\"maxFrame\",\"onload\",\"width\",\"height\",\"action\",\"HPBar\",\"len\",\"fixlen\",\"center\",\"fillStyle\",\"fillRect\",\"strokeStyle\",\"lineWidth\",\"strokeRect\",\"player\",\"draw\",\"keyboard\",\"rw\",\"rh\",\"stop\",\"move\",\"fps\",\"stun\",\"block\",\"sprite\",\"temp\",\"desc\",\"sControl\",\"bControl\",\"delay\",\"dead\",\"gravity\",\"gravitySpeed\",\"fpsControl\",\"save\",\"scale\",\"restore\",\"update\",\"dullMove\",\"playSound\",\"specialAction\",\"enemyX\",\"moveAction\",\"attackAction\",\"Math\",\"abs\",\"enemy\",\"meleeSound\",\"rangeSound\",\"borderLimit\",\"hitBottom\",\"vsMode\",\"p1\",\"p2\",\"movement\",\"p1hp\",\"p2hp\",\"over\",\"bul\",\"stunned\",\"bulControl\",\"fightControl\",\"soundControl\",\"hpControl\",\"playersCollision\",\"font\",\"textAlign\",\"fillText\",\"gameover\",\"gameConstraint\",\"win\",\"removePlayer\",\"Background\",\"maxWidth\",\"maxHeight\",\"enemy_Enemy\",\"alive\",\"transparent\",\"aType\",\"currentAttack\",\"dull\",\"globalAlpha\",\"maxTime\",\"type\",\"idx\",\"floor\",\"random\",\"updateX\",\"toggleStatus\",\"updateAttackSprite\",\"updateDir\",\"setup\",\"trainMode\",\"test\",\"kill\",\"enemyHp\",\"p1Hp\",\"prob\",\"totalScore\",\"firsthit\",\"prop\",\"enemydead\",\"playerToEnemy\",\"enemyToPlayer\",\"range\",\"getRand\",\"comboTime\",\"time\",\"clock\",\"comboContainer\",\"enemyhp\",\"collision\",\"respawn\",\"trainingMode\",\"lib_game\",\"background\",\"gameControl\",\"training\",\"vs\",\"start\",\"text\",\"measureText\",\"layerX\",\"layerY\",\"createClickBox\",\"gamefun\",\"intro\",\"requestAnimationFrame\",\"lib_music\",\"bgm\",\"getElementById\",\"bgsound\",\"icon\",\"paused\",\"className\",\"canvas\",\"getContext\",\"game\",\"musicAction\"],\"mappings\":\"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\",\"sourcesContent\":[\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n \\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n \\t\\t}\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// create a fake namespace object\\n \\t// mode & 1: value is a module id, require it\\n \\t// mode & 2: merge all properties of value into the ns\\n \\t// mode & 4: return value when already ns object\\n \\t// mode & 8|1: behave like require\\n \\t__webpack_require__.t = function(value, mode) {\\n \\t\\tif(mode & 1) value = __webpack_require__(value);\\n \\t\\tif(mode & 8) return value;\\n \\t\\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\\n \\t\\tvar ns = Object.create(null);\\n \\t\\t__webpack_require__.r(ns);\\n \\t\\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\\n \\t\\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\\n \\t\\treturn ns;\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"\\\";\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 0);\\n\",\"\\nexport default class Input {\\n  constructor() {\\n      this.restart = false;\\n      this.input = {\\n        LEFT: false,\\n        RIGHT: false,\\n        DOWN: false,\\n        ATTACK: false,\\n        REVIVE: false,\\n        KICK: false,\\n        SHOOT: false,\\n        SPECIAL: false\\n      };\\n      this.attack = false;\\n      this.counter = 0;\\n  }\\n  gameControl() {\\n    this.input.REVIVE = false;\\n  }\\n\\n  movement(keys=[65,68,84,89,85]) {\\n    document.addEventListener(\\\"keydown\\\", e => {\\n      const key = e.keyCode;\\n        switch (key) {\\n        case keys[0]: this.input.LEFT = true; break;\\n        case 83:\\n        case 40:\\n          this.input.DOWN = true; break;\\n        case keys[1]: this.input.RIGHT = true; break;\\n        case keys[2]:\\n          this.attack = true;\\n          this.counter++;\\n          this.counter > 2 ? this.input.ATTACK = false : this.input.ATTACK = true;\\n        break;\\n        case keys[3]:\\n          this.attack = true;\\n          this.counter++;\\n          this.counter > 3 ? this.input.KICK = false : this.input.KICK = true;\\n          break;\\n          case keys[4]:\\n          this.input.SPECIAL = true;\\n          break;\\n        default:\\n    }\\n  });\\n    document.addEventListener(\\\"keyup\\\", e => {\\n        const key = e.keyCode;\\n        switch (key) {\\n          case keys[0]: this.input.LEFT = false; break;\\n          case 40:\\n          case 83:\\n            this.input.DOWN = false; break;\\n          case keys[1]: this.input.RIGHT = false; break;\\n          case keys[2]:\\n            this.attack = false;\\n            this.input.ATTACK = false;\\n            this.counter = 0;\\n           break;\\n          case keys[3]:\\n            this.attack = false;\\n            this.input.KICK = false;\\n            this.counter = 0;\\n          break;\\n          case keys[4]:\\n            this.input.SPECIAL = false;\\n        }\\n    })\\n\\n  }\\n}\\n\",\"class Sound {\\n  constructor() {\\n    this.sound = document.createElement(\\\"audio\\\");\\n    this.sound.setAttribute(\\\"preload\\\", \\\"auto\\\");\\n    this.sound.setAttribute(\\\"controls\\\", \\\"none\\\");\\n    this.sound.style.display = \\\"none\\\";\\n  }\\n\\n  play(src) {\\n    this.sound.src = src;\\n    this.sound.play().then(() => console.log());\\n  }\\n\\n  stop() {\\n    this.sound.pause();\\n  }\\n}\\n\\nexport default Sound;\\n\",\"\\nimport Sound from './sound.js'\\n\\nclass Bullet {\\n  constructor(ctx, x, y, dir) {\\n    this.ctx = ctx;\\n    this.w = 40;\\n    this.h = 40;\\n    this.x =  x + dir * 50\\n    this.y = y + 35;\\n    this.speed = dir * 10;\\n    this.image = new Image();\\n    this.image.src = dir > 0 ? `./asset/bullet.png` : `./asset/bullet_left.png`;\\n    this.hit = false;\\n    this.collide = false;\\n    this.sound = new Sound();\\n    this.m = true;\\n  }\\n\\n  shoot() {\\n    this.ctx.drawImage(this.image, this.x, this.y, this.w, this.h);\\n    this.x += this.speed;\\n  }\\n\\n  playSound() {\\n    this.sound.play('./asset/sound/hadouken.mp3');\\n  }\\n\\n  draw() {\\n    if (!this.collide) {\\n      this.shoot()\\n\\n    }\\n\\n  }\\n\\n\\n\\n\\n}\\n\\nexport default Bullet;\\n\",\"\\n\\nexport default class Sprite {\\n  constructor(char) {\\n    this.char = char;\\n    this.image = new Image();\\n    this.image.src = `./asset/${this.char}/idle.png`;\\n    this.frame = 0;\\n    this.maxFrame = 3;\\n    this.image.onload = () => {\\n      this.w = this.image.width / (this.maxFrame + 1);\\n      this.h = this.image.height;\\n    }\\n\\n  }\\n\\n  update(action) {\\n    if (this.char === \\\"ken\\\") {\\n      switch (action) {\\n        case \\\"special_kick\\\":\\n          this.maxFrame = 5;\\n          this.image.src = `./asset/${this.char}/${action}.png`;\\n          break;\\n        case \\\"kick\\\":\\n        case \\\"moving\\\":\\n          this.maxFrame = 4;\\n          this.image.src = `./asset/${this.char}/${action}.png`;\\n          break;\\n        case \\\"stun\\\":\\n        case \\\"dead\\\":\\n          this.maxFrame = 3;\\n          this.image.src = `./asset/${this.char}/${action}.png`;\\n          break;\\n        case \\\"punch\\\":\\n        case \\\"win\\\":\\n          this.maxFrame = 2;\\n          this.image.src = `./asset/${this.char}/${action}.png`;\\n          break;\\n        case \\\"shot\\\":\\n          this.maxFrame = 1;\\n          this.image.src = `./asset/${this.char}/${action}.png`;\\n          break;\\n        case \\\"block\\\":\\n          this.maxFrame = 0;\\n          this.image.src = `./asset/${this.char}/${action}.png`;\\n          break;\\n        default:\\n          this.maxFrame = 3;\\n          this.image.src = `./asset/${this.char}/idle.png`;\\n          break;\\n      }\\n    }\\n    if (this.char === \\\"ryu\\\") {\\n      switch (action) {\\n        case \\\"special_kick\\\":\\n          this.maxFrame = 5;\\n          this.image.src = `./asset/${this.char}/${action}.png`;\\n          break;\\n        case \\\"moving\\\":\\n          this.maxFrame = 4;\\n          this.image.src = `./asset/${this.char}/${action}.png`;\\n          break;\\n        case \\\"kick\\\":\\n        case \\\"punch\\\":\\n        case \\\"shot\\\":\\n        case \\\"stun\\\":\\n        case \\\"win\\\":\\n          this.maxFrame = 2;\\n          this.image.src = `./asset/${this.char}/${action}.png`;\\n          break;\\n        case \\\"block\\\":\\n          this.maxFrame = 0;\\n          this.image.src = `./asset/${this.char}/${action}.png`;\\n          break;\\n        case \\\"dead\\\":\\n          this.maxFrame = 3;\\n          this.image.src = `./asset/${this.char}/${action}.png`;\\n          break;\\n        default:\\n          this.maxFrame = 3;\\n          this.image.src = `./asset/${this.char}/idle.png`;\\n          break;\\n      }\\n    }\\n  }\\n\\n}\\n\",\"export default class HPBar {\\n  constructor(ctx, x,y, len) {\\n    this.ctx = ctx;\\n    this.x = x;\\n    this.y = y;\\n    this.len = len;\\n    this.fixlen = len;\\n    this.center = len/2;\\n  }\\n\\n  draw() {\\n    this.ctx.fillStyle = \\\"red\\\";\\n    this.ctx.fillRect(this.x,50, this.fixlen, 30);\\n    this.ctx.fillStyle = \\\"yellow\\\";\\n    this.ctx.fillRect(this.x,50, this.len, 30);\\n    this.ctx.strokeStyle = \\\"white\\\";\\n    this.ctx.lineWidth = 2;\\n    this.ctx.strokeRect(this.x, 50, this.fixlen, 30);\\n  }\\n\\n  enemyhp(x,y,h) {\\n    if (this.len >= 0) {\\n    this.ctx.fillStyle = \\\"red\\\";\\n    this.ctx.fillRect(x + this.center, y - 20, this.fixlen, h);\\n    this.ctx.fillStyle = \\\"yellow\\\";\\n    this.ctx.fillRect(x + this.center, y - 20, this.len, h);\\n    this.ctx.strokeStyle = \\\"white\\\";\\n    this.ctx.lineWidth = 2;\\n    this.ctx.strokeRect(x + this.center, y - 20, this.len, h);\\n    }\\n  }\\n\\n  block() {\\n    this.len -= 0.05;\\n  }\\n  hit() {\\n    this.len -= 1;\\n  }\\n}\\n\",\"import Input from './input.js';\\nimport Bullet from './bullet.js';\\nimport Sprite from './sprite.js';\\nimport Sound from './sound.js'\\nimport Hp from './hpbar.js'\\n\\nclass Player {\\n  constructor(ctx,x = 300, char, dir) {\\n    this.ctx = ctx;\\n    this.draw = this.draw.bind(this);\\n    this.keyboard = new Input();\\n    this.frame = 0;\\n    this.rw = 140;\\n    this.rh = 160;\\n    this.x = x;\\n    this.y = 300;\\n    this.speed = 0;\\n    this.stop = 0;\\n    this.move = 5;\\n    this.bullet = null;\\n    this.fps = 0;\\n    this.stun = false;\\n    this.block = false;\\n    this.sprite = new Sprite(char);\\n    this.dir = dir;\\n    this.temp = \\\"\\\";\\n    this.desc = \\\"\\\";\\n    this.sControl = true;\\n    this.bControl = true;\\n    this.sound = new Sound();\\n    this.delay = 0;\\n    this.dead = false;\\n    this.gravity = 0.05;\\n    this.gravitySpeed = 0;\\n  }\\n\\n  fpsControl(fps) {\\n    this.fps++;\\n    if (this.desc !== this.temp) {\\n      this.desc = this.temp;\\n      this.frame = 0;\\n    }\\n    if (this.fps > fps) {\\n      this.fps = 0;\\n      if (this.dead) {\\n        this.frame >= this.sprite.maxFrame? this.frame = this.sprite.maxFrame : this.frame++;\\n      } else {\\n        this.frame++;\\n        if (this.frame > this.sprite.maxFrame) this.frame = 0\\n      }\\n    }\\n  }\\n\\n\\n\\n  draw() {\\n\\n    this.fpsControl(10);\\n    if (this.bullet) {\\n      this.bullet.draw()\\n    }\\n    this.ctx.save();\\n    this.ctx.scale(this.dir,1);\\n    this.ctx.drawImage(this.sprite.image, this.sprite.w * this.frame, 0, this.sprite.w, this.sprite.h, this.dir * this.x,this.y, this.dir * this.rw, this.rh);\\n    this.ctx.restore();\\n  }\\n\\n\\n  moveAction(x) {\\n    if (this.keyboard.input.LEFT || this.keyboard.input.RIGHT) {\\n      if (this.block) {\\n        this.sprite.update(\\\"block\\\");\\n        this.temp = \\\"block\\\";\\n        if (this.sControl) {\\n          this.sound.play('./asset/sound/block.wav');\\n          this.sControl = false;\\n        }\\n        this.move = 0.5;\\n      }\\n      else {\\n        this.sprite.update(\\\"moving\\\");\\n        this.temp = \\\"moving\\\";\\n        this.move = 5;\\n        this.sControl = true;\\n      }\\n\\n      if (this.keyboard.input.LEFT || this.keyboard.input.RIGHT) {\\n        if (this.x < x) {\\n          this.dir = 1;\\n          if (this.dullMove(x)) {\\n            if (this.keyboard.input.LEFT) {\\n              this.speed = -this.move\\n            }\\n          }\\n        } else {\\n          this.dir = -1;\\n          if (this.dullMove(x)) {\\n            if (this.keyboard.input.RIGHT) {\\n              this.speed = this.move\\n            }\\n          }\\n        }\\n      }\\n      if (this.keyboard.input.LEFT && !(this.dullMove((x)))) this.speed = -this.move;\\n      else if (this.keyboard.input.RIGHT && !(this.dullMove((x)))) this.speed = this.move\\n    } else if (this.stun) {\\n      this.sprite.update(\\\"stun\\\");\\n      this.temp = \\\"stun\\\";\\n      this.move = 0;\\n      this.stun = false;\\n    }\\n  }\\n\\n\\n  specialAction() {\\n    if (this.keyboard.input.SPECIAL) {\\n      if (this.keyboard.input.ATTACK && !this.keyboard.input.KICK) {\\n        this.sprite.update(\\\"shot\\\");\\n        this.temp = \\\"shot\\\"\\n        if (!this.bullet) {\\n          this.bullet = new Bullet(this.ctx, this.x, this.y, this.dir);\\n        }\\n        if (this.keyboard.input.SHOOT) {\\n          this.bullet.playSound();\\n          this.keyboard.input.SHOOT = false;\\n        }\\n        this.delay++;\\n        if (this.delay > 20) {\\n          this.keyboard.input.SPECIAL = false;\\n          this.keyboard.input.ATTACK = false;\\n        }\\n\\n      } else if (!this.keyboard.input.ATTACK && this.keyboard.input.KICK) {\\n        this.sprite.update(\\\"special_kick\\\");\\n        this.temp = \\\"special_kick\\\"\\n        this.delay++;\\n        this.x += this.dir * 2;\\n        if (this.delay > 40) {\\n          this.keyboard.input.SPECIAL = false;\\n          this.keyboard.input.KICK = false;\\n        }\\n      } else {\\n        this.delay = 0;\\n        this.keyboard.input.SHOOT = true;\\n      }\\n    }\\n  }\\n\\n\\n  attackAction() {\\n    if (this.keyboard.input.ATTACK && !this.stun) {\\n          this.sprite.update(\\\"punch\\\");\\n          this.temp = \\\"punch\\\";\\n        } else if (this.keyboard.input.KICK && !this.stun) {\\n          this.sprite.update(\\\"kick\\\");\\n          this.temp = \\\"kick\\\";\\n        }\\n        this.specialAction();\\n    }\\n\\n\\n  action(enemyX) {\\n    this.sprite.update();\\n    this.speed = this.stop;\\n    this.moveAction(enemyX);\\n    this.attackAction();\\n  }\\n\\n  dullMove(enemyX) {\\n    return Math.abs(this.x - enemyX) < 90\\n  }\\n\\n  borderLimit() {\\n    if (this.x > 875) {\\n      if (this.keyboard.input.LEFT) {\\n        this.speed = -this.move\\n      } else {\\n        this.speed = 0;\\n      }\\n    }\\n    if (this.x < 0) {\\n      if (this.keyboard.input.RIGHT) {\\n        this.speed = this.move\\n      } else {\\n        this.speed = 0;\\n      }\\n    }\\n  }\\n\\n  meleeSound(enemy) {\\n    if ((this.keyboard.input.ATTACK || this.keyboard.input.KICK) && !this.keyboard.input.SPECIAL) {\\n      if (Math.abs(this.x - enemy.x) < 100) {\\n          if (this.sControl) {\\n            this.sound.play('./asset/sound/punch_hit.wav');\\n            this.sControl = false;\\n          }\\n      } else {\\n        if (this.sControl) {\\n          this.sound.play('./asset/sound/punch_miss.wav');\\n          this.sControl = false;\\n        }\\n      }\\n    } else {\\n      this.sControl = true;\\n    }\\n  }\\n\\n  rangeSound(enemy) {\\n      if (this.bullet) {\\n      if (Math.abs(this.bullet.x - enemy.x) < 50 || this.bullet.x > 1000 || this.bullet.x < 0) {\\n        if (this.bControl) {\\n          this.bControl = false;\\n        }\\n        this.bullet.collide = true;\\n        this.bullet = null;\\n      } else {\\n        this.bControl = true;\\n      }\\n    }\\n  }\\n\\n  soundControl(enemy) {\\n    this.meleeSound(enemy);\\n    this.rangeSound(enemy);\\n  }\\n\\n  update(enemyX = 0) {\\n    this.action(enemyX);\\n    this.borderLimit();\\n    this.x += this.speed;\\n    this.gravitySpeed += this.gravity;\\n    this.y += this.gravitySpeed;\\n    this.hitBottom();\\n  }\\n\\n  hitBottom() {\\n    let rockbottom = 300;\\n    if (this.y > rockbottom) {\\n      this.y = rockbottom;\\n      this.gravitySpeed = 0;\\n    }\\n  }\\n\\n  removePlayer() {\\n    this.sprite.update(\\\"dead\\\");\\n    this.dead = true;\\n  }\\n\\n\\n\\n  win() {\\n    this.sprite.update(\\\"win\\\");\\n    this.dead = true;\\n  }\\n}\\n\\n\\nexport default Player;\\n\",\"import Player from './player.js';\\nimport HPBar from \\\"./hpbar\\\";\\n\\n\\nclass VsMode {\\n    constructor(ctx) {\\n        this.ctx = ctx;\\n        this.p1 = new Player(this.ctx, 300, \\\"ken\\\", 1);\\n        this.p2 = new Player(this.ctx, 700, \\\"ryu\\\", -1);\\n        this.p1.keyboard.movement();\\n        this.p2.keyboard.movement([37, 39, 74, 75, 76]);\\n        this.p1hp = new HPBar(this.ctx, 100, 50, 300);\\n        this.p2hp = new HPBar(this.ctx, 600, 50, 300);\\n        this.over = false;\\n    }\\n\\n\\n\\n    stunned() {\\n        if (this.p1.keyboard.attack) {\\n            this.p2.stun = true;\\n            this.p2.x++;\\n        }\\n        if (this.p2.keyboard.attack) {\\n            this.p1.stun = true;\\n            this.p1.x--;\\n        }\\n    }\\n\\n    bulControl(bul, enemy) {\\n        if (bul) {\\n            if (Math.abs(bul.x - enemy.x) < 100) {\\n                if (this.p2.keyboard.input.RIGHT) this.p2.block = true;\\n                else if (this.p1.keyboard.input.LEFT) this.p1.block = true;\\n                else enemy.stun = true;\\n            }\\n            else {\\n                enemy.stun = false;\\n            }\\n        }\\n    }\\n    fightControl() {\\n        this.p2.block = false;\\n        this.p1.block = false;\\n        if ((Math.abs(this.p1.x - this.p2.x) < 100 && (this.p1.keyboard.attack || this.p2.keyboard.attack))) {\\n\\n            if (this.p1.keyboard.attack && this.p2.keyboard.input.RIGHT) {\\n                this.p2.block = true;\\n                this.p2.x++;\\n            }\\n            if (this.p2.keyboard.attack && this.p1.keyboard.input.LEFT) {\\n                this.p1.block = true;\\n                this.p1.x--;\\n            }\\n                this.stunned();\\n        }\\n        this.bulControl(this.p1.bullet, this.p2);\\n        this.bulControl(this.p2.bullet, this.p1);\\n    }\\n\\n    hpControl() {\\n        if (this.p1.stun) {\\n            this.p1hp.hit()\\n        }\\n        if (this.p1.block) {\\n            this.p1hp.block()\\n        }\\n        if (this.p2.stun) {\\n            this.p2hp.hit()\\n        }\\n        if (this.p2.block) {\\n            this.p2hp.block()\\n        }\\n    }\\n    playersCollision() {\\n        this.fightControl();\\n        this.p1.soundControl(this.p2);\\n        this.p2.soundControl(this.p1);\\n        this.hpControl();\\n    }\\n\\n    draw() {\\n        this.p1.draw();\\n        this.p2.draw();\\n        this.p1hp.draw();\\n        this.p2hp.draw();\\n    }\\n\\n    update() {\\n        this.p1.update(this.p2.x);\\n        this.p2.update(this.p1.x);\\n        this.playersCollision();\\n    }\\n    gameover() {\\n        this.ctx.font=\\\"40px Acme\\\";\\n        this.ctx.fillStyle = \\\"red\\\";\\n        this.ctx.textAlign = \\\"center\\\";\\n        this.ctx.fillText(`You Win`,500,150);\\n    }\\n\\n    gamefun() {\\n        if (this.p1hp.len >= 0 && this.p2hp.len >= 0) {\\n            this.update();\\n            this.draw()\\n        } else {\\n            this.gameover();\\n        }\\n        this.gameConstraint();\\n    }\\n\\n    gameConstraint() {\\n        if (this.p1hp.len <= 0) {\\n            this.p2.win();\\n            this.p1.removePlayer();\\n            this.over = true;\\n        }\\n        else if (this.p2hp.len <= 0) {\\n            this.p1.win();\\n            this.p2.removePlayer();\\n            this.over = true;\\n        }\\n    }\\n\\n}\\n\\nexport default VsMode\\n\",\"\\nexport default class Background {\\n  constructor(ctx) {\\n    this.ctx = ctx;\\n    this.maxWidth = 1000;\\n    this.maxHeight = 500;\\n    this.image = new Image();\\n    this.image.src = 'https://i.pinimg.com/originals/91/64/01/9164016aa77fa969f71800b9ba8c32b4.gif';\\n  }\\n\\n  draw() {\\n    this.ctx.drawImage(this.image,0,0,this.maxWidth,this.maxHeight);\\n  }\\n\\n}\\n\",\"import Sprite from './sprite.js';\\n\\nexport default class Enemy {\\n  constructor(x, ctx) {\\n      this.x = x;\\n      this.ctx = ctx;\\n      this.rw = 140;\\n      this.rh = 160;\\n      this.y = 300;\\n      this.alive = true;\\n      this.frame = 0;\\n      this.transparent = 1;\\n      this.fps = 0;\\n      this.dir = 1;\\n      this.attack = false;\\n      this.counter = 0;\\n      this.sprite = new Sprite('ryu');\\n      this.aType = ['punch', 'kick', 'special_kick'];\\n      this.currentAttack = \\\"kick\\\";\\n      this.dull = false;\\n  }\\n\\n  fpsControl(fps) {\\n    this.fps++;\\n    if (this.fps > fps) {\\n      this.fps = 0;\\n      this.frame++;\\n      if (this.frame >= this.sprite.maxFrame) this.frame = 0;\\n    }\\n  }\\n\\n  setup(x) {\\n      this.fpsControl(10);\\n      this.ctx.save();\\n      this.ctx.globalAlpha = this.transparent;\\n      this.ctx.scale(this.dir,1);\\n      this.ctx.drawImage(this.sprite.image, this.sprite.w * this.frame, 0, this.sprite.w, this.sprite.h, this.dir * this.x,this.y, this.dir * this.rw, this.rh);\\n      this.ctx.restore();\\n  }\\n\\n  dead(x) {\\n      this.transparent -= 0.05;\\n      this.sprite.update(\\\"dead\\\");\\n  }\\n\\n  block() {\\n      this.sprite.update(\\\"block\\\");\\n  }\\n  stun() {\\n      this.sprite.update(\\\"stun\\\");\\n  }\\n  shot() {\\n      this.sprite.update(\\\"shot\\\");\\n  }\\n\\n  toggleStatus(maxTime, type) {\\n      if (this.counter > maxTime) {\\n          if (type === \\\"attack\\\") {\\n              this.attack = !this.attack;\\n          } else if (type === \\\"move\\\"){\\n              this.dull = false;\\n          }\\n          this.counter = 0;\\n      }\\n  }\\n\\n  updateAttackSprite() {\\n      const idx = Math.floor(Math.random() * 3);\\n      this.currentAttack = this.aType[idx];\\n  }\\n\\n  updateX(x,speed, dir=1) {\\n      if (this.x < x) this.x+=speed * dir;\\n      else this.x-= speed* dir\\n  }\\n  update(x) {\\n      if (this.attack && !this.dull) {\\n          this.attack = false;\\n          if (this.currentAttack === \\\"special_kick\\\") {\\n              this.updateX(x,0.5)\\n          }\\n          this.sprite.update(`${this.currentAttack}`);\\n      }\\n      else if (this.x > x && !this.dull) {\\n          this.updateX(x,1)\\n          this.sprite.update(\\\"moving\\\");\\n      } else if (this.x < x && !this.dull) {\\n          this.updateX(x,1)\\n          this.sprite.update(\\\"moving\\\");\\n      }\\n      else if (this.dull) {\\n          this.sprite.update(\\\"stun\\\");\\n          this.counter++;\\n          this.toggleStatus(50,\\\"move\\\")\\n          this.updateAttackSprite();\\n      }\\n  }\\n\\n  updateDir(x) {\\n      if (x > this.x) this.dir = 1;\\n      else this.dir = -1;\\n  }\\n    draw(x) {\\n        this.updateDir(x);\\n        this.setup(x);\\n        if (this.alive) {\\n            this.update(x);\\n        } else {\\n            this.dead(x)\\n        }\\n    }\\n\\n\\n}\\n\",\"import Enemy from \\\"./enemy\\\";\\nimport Sound from \\\"./sound\\\";\\nimport Player from './player.js';\\nimport HPBar from \\\"./hpbar\\\";\\n\\nclass TrainMode {\\n    constructor(ctx) {\\n        this.ctx = ctx;\\n        this.test = 100;\\n        this.enemy = new Enemy(1000, this.ctx);\\n        this.kill = 0;\\n        this.counter = 0;\\n        this.player = new Player(this.ctx,300,\\\"ken\\\",1);\\n        this.player.keyboard.movement();\\n        this.image = new Image();\\n        this.sound = new Sound();\\n        this.enemyHp = new HPBar(this.ctx,this.enemy.x, this.enemy.y, 80)\\n        this.p1Hp = new HPBar(this.ctx,500, 20, 300)\\n        this.playSound = true;\\n        this.prob = Math.random();\\n        this.sound = new Sound();\\n        this.over = false;\\n    }\\n\\n    gameover() {\\n        this.image.src = 'https://static.comicvine.com/uploads/original/11111/111112704/3860536-ron_vs_ken_by_eastmonkey.jpg';\\n        this.ctx.drawImage(this.image,0, 0, 1000, 500);\\n        this.ctx.font=\\\"40px Acme\\\";\\n        this.ctx.fillStyle = \\\"white\\\";\\n        this.ctx.textAlign = \\\"center\\\";\\n        this.ctx.fillText(\\\"Game Over\\\",500,150);\\n        this.totalScore();\\n    }\\n    totalScore() {\\n        this.test--;\\n        if (this.test === 0) {\\n            this.sound.play('./asset/sound/game_finished.wav')\\n        }\\n        if (this.test <= 20) {\\n            this.ctx.fillText(`Total Kill : ${this.kill}`,500,290);\\n        }\\n    }\\n\\n    miss() {\\n        this.ctx.font=\\\"20px Acme\\\";\\n        this.ctx.fillStyle = \\\"red\\\";\\n        this.ctx.textAlign = \\\"center\\\";\\n        this.ctx.fillText(`Miss!`,this.player.x + 60,this.player.y - 20);\\n        this.firsthit = true;\\n    }\\n\\n    random() {\\n        this.prop = Math.random();\\n    }\\n\\n\\n    playerToEnemy() {\\n        if (this.player.keyboard.input.ATTACK || this.player.keyboard.input.KICK) {\\n            this.enemydead(this.player.x, 90);\\n        }\\n        else if (this.player.bullet) {\\n            this.enemydead(this.player.bullet.x,80);\\n        } else {\\n            this.random();\\n        }\\n    }\\n\\n    enemyToPlayer() {\\n        this.enemy.attack = false;\\n        if(Math.abs(this.enemy.x - this.player.x) < 90) {\\n            if (this.enemy.dull === false) {\\n                this.enemy.attack = true;\\n            } else {\\n                this.enemy.attack = false;\\n            }\\n        }\\n        if (this.enemy.attack) {\\n            if (this.player.keyboard.input.LEFT) {\\n                if (this.player.x < this.enemy.x) {\\n                    this.player.block = true;\\n                    this.p1Hp.block()\\n                }\\n            } else if (this.player.keyboard.input.RIGHT) {\\n                if (this.player.x > this.enemy.x) {\\n                    this.player.block = true;\\n                    this.p1Hp.block()\\n                }\\n            } else {\\n                this.p1Hp.hit();\\n                this.player.stun = true;\\n            }\\n        }\\n    }\\n    collision() {\\n        this.playerToEnemy();\\n        this.enemyToPlayer();\\n    }\\n\\n\\n    enemydead(x,range=90) {\\n        if (Math.abs(x - this.enemy.x) < range) {\\n            if (this.prop > 0.4) {\\n                this.enemy.dull = true;\\n                this.enemyHp.hit();\\n            } else {\\n                this.enemy.block(x);\\n                this.enemyHp.block();\\n            }\\n                if (this.enemyHp.len <= 0) {\\n                    this.enemy.alive = false;\\n                    this.kill++;\\n                }\\n            if (this.player.keyboard.input.KICK && this.player.keyboard.input.SPECIAL) {\\n                this.enemy.updateX(this.player.x, 1,-1);\\n            }\\n        }\\n    }\\n\\n    getRand(x) {\\n        this.enemy.x = Math.random() > 0.5 ? 0 : 1000;\\n        return this.enemy.x;\\n    }\\n\\n    respawn() {\\n\\n        if (this.enemy.transparent <= 0) {\\n            this.sound.play('./asset/sound/die.wav');\\n            this.enemy.alive = true;\\n            this.enemy.dull = false;\\n            this.enemyHp.len = 80;\\n            this.enemy.transparent = 1;\\n            this.enemy.x = this.getRand(this.enemy.x);\\n        }\\n    }\\n\\n\\n    comboContainer() {\\n        this.ctx.fillStyle = \\\"green\\\";\\n        this.ctx.font=\\\"12px Acme\\\";\\n        this.ctx.fillText(`Combo GAUGE`,500,60);\\n        if (this.comboTime <= 100) {\\n            this.ctx.fillStyle = \\\"yellow\\\"\\n        }\\n        if (this.comboTime <= 50) {\\n            this.ctx.fillStyle = \\\"red\\\"\\n        }\\n        this.ctx.fillRect(400,70, this.comboTime, 20);\\n    }\\n\\n    clock() {\\n        this.ctx.textAlign = \\\"center\\\";\\n        this.ctx.font=\\\"40px Acme\\\";\\n        if (this.time <= 5) {\\n            this.ctx.fillStyle = \\\"red\\\"\\n        }\\n        this.ctx.fillText(`Timer ${this.time}`,500,30);\\n    }\\n\\n    trainingMode() {\\n        this.clock();\\n        this.comboContainer();\\n        this.player.draw();\\n        this.enemy.draw(this.player.x);\\n        this.player.soundControl(this.enemy);\\n        this.enemyHp.enemyhp(this.enemy.x,this.enemy.y,10);\\n        this.player.update(this.enemy.x);\\n        this.p1Hp.draw();\\n        this.collision();\\n        this.respawn();\\n    }\\n\\n    draw() {\\n        if (this.p1Hp.len <= 0) {\\n            this.gameover()\\n            this.over = true;\\n        } else {\\n            this.trainingMode();\\n        }\\n    }\\n}\\n\\nexport default TrainMode\\n\",\"import vsMode from './vsMode.js';\\nimport Background from './background.js';\\nimport trainMode from './trainMode.js';\\nimport Input from './input.js'\\nimport VsMode from \\\"./vsMode\\\";\\n\\nclass Game {\\n  constructor(ctx) {\\n    this.ctx = ctx;\\n    this.background = new Background(this.ctx);\\n    this.play = this.play.bind(this);\\n    this.input = new Input();\\n    this.input.gameControl();\\n    this.fps = 0;\\n    this.image = new Image();\\n    this.image.src = 'https://i.pinimg.com/originals/f6/c4/51/f6c4516c11809f1b3550e0c68abfef89.gif';\\n    this.test = 70;\\n    this.time = 60;\\n    this.training = false;\\n    this.vs = false;\\n    this.vsMode = null;\\n    this.trainMode = null;\\n\\n  }\\n\\n  intro() {\\n    this.ctx.drawImage(this.image, 0, 0, 1000, 500);\\n    this.ctx.font = \\\"40px Acme\\\";\\n    this.ctx.fillStyle = \\\"white\\\";\\n    this.ctx.textAlign = \\\"center\\\";\\n    this.ctx.fillText(`Best Street Fighter`, 500, 200);\\n    this.ctx.font = \\\"20px Acme\\\";\\n    this.start();\\n  }\\n\\n  createClickBox(text,x,y,h, mode) {\\n    this.ctx.fillText(text, x,y);\\n    let w = this.ctx.measureText(text).width / 2;\\n    document.addEventListener(\\\"click\\\", e => {\\n      if (e.layerX >= x - w && e.layerX <= x + w &&\\n          e.layerY >= y - h && e.layerY <= y + h) {\\n        if (mode === \\\"vs\\\") {\\n          this.vs = true;\\n          this.input.restart = true;\\n          this.vsMode = new VsMode(this.ctx);\\n        } else if (mode === \\\"train\\\") {\\n          this.trainMode = new trainMode(this.ctx);\\n          this.input.restart = true;\\n\\n          this.training = true;\\n        } else {\\n          this.input.restart = false;\\n          this.training = false;\\n          this.vs = false;\\n        }\\n      }\\n    })\\n  }\\n\\n  restart() {\\n    this.createClickBox(\\\"ReStart\\\", 500, 400, 20, \\\"restart\\\");;\\n\\n  }\\n  start() {\\n    this.createClickBox(\\\"Train\\\", 500, 300, 20, \\\"train\\\");\\n    this.createClickBox(\\\"VS Mode\\\", 500, 350, 20, \\\"vs\\\");\\n  }\\n\\n  play() {\\n    if (!this.input.restart) {\\n      this.intro();\\n    } else {\\n      this.background.draw();\\n      if (this.training) {\\n        this.trainMode.draw();\\n        if (this.trainMode.over) {\\n          this.restart()\\n        }\\n      }\\n      if (this.vs) {\\n        this.vsMode.gamefun();\\n        if (this.vsMode.over) {\\n          this.restart()\\n        }\\n      }\\n    }\\n\\n    requestAnimationFrame(this.play);\\n  }\\n\\n}\\n\\nexport default Game;\\n\",\"class Music {\\n  constructor(src) {\\n    this.bgm = document.getElementById(\\\"myAudio\\\");\\n    this.bgsound = document.getElementById(\\\"music-button\\\");\\n    this.icon = document.getElementById(\\\"icon\\\")\\n  }\\n\\n\\n  musicAction() {\\n    this.bgsound.addEventListener(\\\"click\\\",() => {\\n      if (this.bgm.paused) {\\n        this.bgm.play();\\n        this.icon.className = \\\"fas fa-volume-up\\\"\\n      }\\n      else {\\n        this.bgm.pause();\\n        this.icon.className = \\\"fas fa-volume-off\\\"\\n      }\\n    })\\n  }\\n\\n\\n}\\n\\nexport default Music\\n\",\"import Game from './game.js';\\nimport Music from './music.js'\\n\\n\\ndocument.addEventListener(\\\"DOMContentLoaded\\\", () => {\\n  const canvas = document.getElementById(\\\"MyCanvas\\\");\\n  canvas.width = 1000;\\n  canvas.height = 500;\\n  const ctx = canvas.getContext(\\\"2d\\\");\\n  const game = new Game(ctx);\\n  const music = new Music();\\n  music.musicAction();\\n  game.play()\\n});\\n\"]}","code":"!function(t){var i={};function s(e){if(i[e])return i[e].exports;var h=i[e]={i:e,l:!1,exports:{}};return t[e].call(h.exports,h,h.exports,s),h.l=!0,h.exports}s.m=t,s.c=i,s.d=function(t,i,e){s.o(t,i)||Object.defineProperty(t,i,{enumerable:!0,get:e})},s.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},s.t=function(t,i){if(1&i&&(t=s(t)),8&i)return t;if(4&i&&\"object\"==typeof t&&t&&t.__esModule)return t;var e=Object.create(null);if(s.r(e),Object.defineProperty(e,\"default\",{enumerable:!0,value:t}),2&i&&\"string\"!=typeof t)for(var h in t)s.d(e,h,function(i){return t[i]}.bind(null,h));return e},s.n=function(t){var i=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(i,\"a\",i),i},s.o=function(t,i){return Object.prototype.hasOwnProperty.call(t,i)},s.p=\"\",s(s.s=0)}([function(t,i,s){\"use strict\";s.r(i);class e{constructor(){this.restart=!1,this.input={LEFT:!1,RIGHT:!1,DOWN:!1,ATTACK:!1,REVIVE:!1,KICK:!1,SHOOT:!1,SPECIAL:!1},this.attack=!1,this.counter=0}gameControl(){this.input.REVIVE=!1}movement(t=[65,68,84,89,85]){document.addEventListener(\"keydown\",i=>{switch(i.keyCode){case t[0]:this.input.LEFT=!0;break;case 83:case 40:this.input.DOWN=!0;break;case t[1]:this.input.RIGHT=!0;break;case t[2]:this.attack=!0,this.counter++,this.counter>2?this.input.ATTACK=!1:this.input.ATTACK=!0;break;case t[3]:this.attack=!0,this.counter++,this.counter>3?this.input.KICK=!1:this.input.KICK=!0;break;case t[4]:this.input.SPECIAL=!0}}),document.addEventListener(\"keyup\",i=>{switch(i.keyCode){case t[0]:this.input.LEFT=!1;break;case 40:case 83:this.input.DOWN=!1;break;case t[1]:this.input.RIGHT=!1;break;case t[2]:this.attack=!1,this.input.ATTACK=!1,this.counter=0;break;case t[3]:this.attack=!1,this.input.KICK=!1,this.counter=0;break;case t[4]:this.input.SPECIAL=!1}})}}var h=class{constructor(){this.sound=document.createElement(\"audio\"),this.sound.setAttribute(\"preload\",\"auto\"),this.sound.setAttribute(\"controls\",\"none\"),this.sound.style.display=\"none\"}play(t){this.sound.src=t,this.sound.play().then(()=>console.log())}stop(){this.sound.pause()}};var a=class{constructor(t,i,s,e){this.ctx=t,this.w=40,this.h=40,this.x=i+50*e,this.y=s+35,this.speed=10*e,this.image=new Image,this.image.src=e>0?\"./asset/bullet.png\":\"./asset/bullet_left.png\",this.hit=!1,this.collide=!1,this.sound=new h,this.m=!0}shoot(){this.ctx.drawImage(this.image,this.x,this.y,this.w,this.h),this.x+=this.speed}playSound(){this.sound.play(\"./asset/sound/hadouken.mp3\")}draw(){this.collide||this.shoot()}};class r{constructor(t){this.char=t,this.image=new Image,this.image.src=`./asset/${this.char}/idle.png`,this.frame=0,this.maxFrame=3,this.image.onload=()=>{this.w=this.image.width/(this.maxFrame+1),this.h=this.image.height}}update(t){if(\"ken\"===this.char)switch(t){case\"special_kick\":this.maxFrame=5,this.image.src=`./asset/${this.char}/${t}.png`;break;case\"kick\":case\"moving\":this.maxFrame=4,this.image.src=`./asset/${this.char}/${t}.png`;break;case\"stun\":case\"dead\":this.maxFrame=3,this.image.src=`./asset/${this.char}/${t}.png`;break;case\"punch\":case\"win\":this.maxFrame=2,this.image.src=`./asset/${this.char}/${t}.png`;break;case\"shot\":this.maxFrame=1,this.image.src=`./asset/${this.char}/${t}.png`;break;case\"block\":this.maxFrame=0,this.image.src=`./asset/${this.char}/${t}.png`;break;default:this.maxFrame=3,this.image.src=`./asset/${this.char}/idle.png`}if(\"ryu\"===this.char)switch(t){case\"special_kick\":this.maxFrame=5,this.image.src=`./asset/${this.char}/${t}.png`;break;case\"moving\":this.maxFrame=4,this.image.src=`./asset/${this.char}/${t}.png`;break;case\"kick\":case\"punch\":case\"shot\":case\"stun\":case\"win\":this.maxFrame=2,this.image.src=`./asset/${this.char}/${t}.png`;break;case\"block\":this.maxFrame=0,this.image.src=`./asset/${this.char}/${t}.png`;break;case\"dead\":this.maxFrame=3,this.image.src=`./asset/${this.char}/${t}.png`;break;default:this.maxFrame=3,this.image.src=`./asset/${this.char}/idle.png`}}}class n{constructor(t,i,s,e){this.ctx=t,this.x=i,this.y=s,this.len=e,this.fixlen=e,this.center=e/2}draw(){this.ctx.fillStyle=\"red\",this.ctx.fillRect(this.x,50,this.fixlen,30),this.ctx.fillStyle=\"yellow\",this.ctx.fillRect(this.x,50,this.len,30),this.ctx.strokeStyle=\"white\",this.ctx.lineWidth=2,this.ctx.strokeRect(this.x,50,this.fixlen,30)}enemyhp(t,i,s){this.len>=0&&(this.ctx.fillStyle=\"red\",this.ctx.fillRect(t+this.center,i-20,this.fixlen,s),this.ctx.fillStyle=\"yellow\",this.ctx.fillRect(t+this.center,i-20,this.len,s),this.ctx.strokeStyle=\"white\",this.ctx.lineWidth=2,this.ctx.strokeRect(t+this.center,i-20,this.len,s))}block(){this.len-=.05}hit(){this.len-=1}}var o=class{constructor(t,i=300,s,a){this.ctx=t,this.draw=this.draw.bind(this),this.keyboard=new e,this.frame=0,this.rw=140,this.rh=160,this.x=i,this.y=300,this.speed=0,this.stop=0,this.move=5,this.bullet=null,this.fps=0,this.stun=!1,this.block=!1,this.sprite=new r(s),this.dir=a,this.temp=\"\",this.desc=\"\",this.sControl=!0,this.bControl=!0,this.sound=new h,this.delay=0,this.dead=!1,this.gravity=.05,this.gravitySpeed=0}fpsControl(t){this.fps++,this.desc!==this.temp&&(this.desc=this.temp,this.frame=0),this.fps>t&&(this.fps=0,this.dead?this.frame>=this.sprite.maxFrame?this.frame=this.sprite.maxFrame:this.frame++:(this.frame++,this.frame>this.sprite.maxFrame&&(this.frame=0)))}draw(){this.fpsControl(10),this.bullet&&this.bullet.draw(),this.ctx.save(),this.ctx.scale(this.dir,1),this.ctx.drawImage(this.sprite.image,this.sprite.w*this.frame,0,this.sprite.w,this.sprite.h,this.dir*this.x,this.y,this.dir*this.rw,this.rh),this.ctx.restore()}moveAction(t){this.keyboard.input.LEFT||this.keyboard.input.RIGHT?(this.block?(this.sprite.update(\"block\"),this.temp=\"block\",this.sControl&&(this.sound.play(\"./asset/sound/block.wav\"),this.sControl=!1),this.move=.5):(this.sprite.update(\"moving\"),this.temp=\"moving\",this.move=5,this.sControl=!0),(this.keyboard.input.LEFT||this.keyboard.input.RIGHT)&&(this.x<t?(this.dir=1,this.dullMove(t)&&this.keyboard.input.LEFT&&(this.speed=-this.move)):(this.dir=-1,this.dullMove(t)&&this.keyboard.input.RIGHT&&(this.speed=this.move))),this.keyboard.input.LEFT&&!this.dullMove(t)?this.speed=-this.move:this.keyboard.input.RIGHT&&!this.dullMove(t)&&(this.speed=this.move)):this.stun&&(this.sprite.update(\"stun\"),this.temp=\"stun\",this.move=0,this.stun=!1)}specialAction(){this.keyboard.input.SPECIAL&&(this.keyboard.input.ATTACK&&!this.keyboard.input.KICK?(this.sprite.update(\"shot\"),this.temp=\"shot\",this.bullet||(this.bullet=new a(this.ctx,this.x,this.y,this.dir)),this.keyboard.input.SHOOT&&(this.bullet.playSound(),this.keyboard.input.SHOOT=!1),this.delay++,this.delay>20&&(this.keyboard.input.SPECIAL=!1,this.keyboard.input.ATTACK=!1)):!this.keyboard.input.ATTACK&&this.keyboard.input.KICK?(this.sprite.update(\"special_kick\"),this.temp=\"special_kick\",this.delay++,this.x+=2*this.dir,this.delay>40&&(this.keyboard.input.SPECIAL=!1,this.keyboard.input.KICK=!1)):(this.delay=0,this.keyboard.input.SHOOT=!0))}attackAction(){this.keyboard.input.ATTACK&&!this.stun?(this.sprite.update(\"punch\"),this.temp=\"punch\"):this.keyboard.input.KICK&&!this.stun&&(this.sprite.update(\"kick\"),this.temp=\"kick\"),this.specialAction()}action(t){this.sprite.update(),this.speed=this.stop,this.moveAction(t),this.attackAction()}dullMove(t){return Math.abs(this.x-t)<90}borderLimit(){this.x>875&&(this.keyboard.input.LEFT?this.speed=-this.move:this.speed=0),this.x<0&&(this.keyboard.input.RIGHT?this.speed=this.move:this.speed=0)}meleeSound(t){!this.keyboard.input.ATTACK&&!this.keyboard.input.KICK||this.keyboard.input.SPECIAL?this.sControl=!0:Math.abs(this.x-t.x)<100?this.sControl&&(this.sound.play(\"./asset/sound/punch_hit.wav\"),this.sControl=!1):this.sControl&&(this.sound.play(\"./asset/sound/punch_miss.wav\"),this.sControl=!1)}rangeSound(t){this.bullet&&(Math.abs(this.bullet.x-t.x)<50||this.bullet.x>1e3||this.bullet.x<0?(this.bControl&&(this.bControl=!1),this.bullet.collide=!0,this.bullet=null):this.bControl=!0)}soundControl(t){this.meleeSound(t),this.rangeSound(t)}update(t=0){this.action(t),this.borderLimit(),this.x+=this.speed,this.gravitySpeed+=this.gravity,this.y+=this.gravitySpeed,this.hitBottom()}hitBottom(){this.y>300&&(this.y=300,this.gravitySpeed=0)}removePlayer(){this.sprite.update(\"dead\"),this.dead=!0}win(){this.sprite.update(\"win\"),this.dead=!0}};var c=class{constructor(t){this.ctx=t,this.p1=new o(this.ctx,300,\"ken\",1),this.p2=new o(this.ctx,700,\"ryu\",-1),this.p1.keyboard.movement(),this.p2.keyboard.movement([37,39,74,75,76]),this.p1hp=new n(this.ctx,100,50,300),this.p2hp=new n(this.ctx,600,50,300),this.over=!1}stunned(){this.p1.keyboard.attack&&(this.p2.stun=!0,this.p2.x++),this.p2.keyboard.attack&&(this.p1.stun=!0,this.p1.x--)}bulControl(t,i){t&&(Math.abs(t.x-i.x)<100?this.p2.keyboard.input.RIGHT?this.p2.block=!0:this.p1.keyboard.input.LEFT?this.p1.block=!0:i.stun=!0:i.stun=!1)}fightControl(){this.p2.block=!1,this.p1.block=!1,Math.abs(this.p1.x-this.p2.x)<100&&(this.p1.keyboard.attack||this.p2.keyboard.attack)&&(this.p1.keyboard.attack&&this.p2.keyboard.input.RIGHT&&(this.p2.block=!0,this.p2.x++),this.p2.keyboard.attack&&this.p1.keyboard.input.LEFT&&(this.p1.block=!0,this.p1.x--),this.stunned()),this.bulControl(this.p1.bullet,this.p2),this.bulControl(this.p2.bullet,this.p1)}hpControl(){this.p1.stun&&this.p1hp.hit(),this.p1.block&&this.p1hp.block(),this.p2.stun&&this.p2hp.hit(),this.p2.block&&this.p2hp.block()}playersCollision(){this.fightControl(),this.p1.soundControl(this.p2),this.p2.soundControl(this.p1),this.hpControl()}draw(){this.p1.draw(),this.p2.draw(),this.p1hp.draw(),this.p2hp.draw()}update(){this.p1.update(this.p2.x),this.p2.update(this.p1.x),this.playersCollision()}gameover(){this.ctx.font=\"40px Acme\",this.ctx.fillStyle=\"red\",this.ctx.textAlign=\"center\",this.ctx.fillText(\"You Win\",500,150)}gamefun(){this.p1hp.len>=0&&this.p2hp.len>=0?(this.update(),this.draw()):this.gameover(),this.gameConstraint()}gameConstraint(){this.p1hp.len<=0?(this.p2.win(),this.p1.removePlayer(),this.over=!0):this.p2hp.len<=0&&(this.p1.win(),this.p2.removePlayer(),this.over=!0)}};class l{constructor(t){this.ctx=t,this.maxWidth=1e3,this.maxHeight=500,this.image=new Image,this.image.src=\"https://i.pinimg.com/originals/91/64/01/9164016aa77fa969f71800b9ba8c32b4.gif\"}draw(){this.ctx.drawImage(this.image,0,0,this.maxWidth,this.maxHeight)}}class p{constructor(t,i){this.x=t,this.ctx=i,this.rw=140,this.rh=160,this.y=300,this.alive=!0,this.frame=0,this.transparent=1,this.fps=0,this.dir=1,this.attack=!1,this.counter=0,this.sprite=new r(\"ryu\"),this.aType=[\"punch\",\"kick\",\"special_kick\"],this.currentAttack=\"kick\",this.dull=!1}fpsControl(t){this.fps++,this.fps>t&&(this.fps=0,this.frame++,this.frame>=this.sprite.maxFrame&&(this.frame=0))}setup(t){this.fpsControl(10),this.ctx.save(),this.ctx.globalAlpha=this.transparent,this.ctx.scale(this.dir,1),this.ctx.drawImage(this.sprite.image,this.sprite.w*this.frame,0,this.sprite.w,this.sprite.h,this.dir*this.x,this.y,this.dir*this.rw,this.rh),this.ctx.restore()}dead(t){this.transparent-=.05,this.sprite.update(\"dead\")}block(){this.sprite.update(\"block\")}stun(){this.sprite.update(\"stun\")}shot(){this.sprite.update(\"shot\")}toggleStatus(t,i){this.counter>t&&(\"attack\"===i?this.attack=!this.attack:\"move\"===i&&(this.dull=!1),this.counter=0)}updateAttackSprite(){const t=Math.floor(3*Math.random());this.currentAttack=this.aType[t]}updateX(t,i,s=1){this.x<t?this.x+=i*s:this.x-=i*s}update(t){this.attack&&!this.dull?(this.attack=!1,\"special_kick\"===this.currentAttack&&this.updateX(t,.5),this.sprite.update(`${this.currentAttack}`)):this.x>t&&!this.dull?(this.updateX(t,1),this.sprite.update(\"moving\")):this.x<t&&!this.dull?(this.updateX(t,1),this.sprite.update(\"moving\")):this.dull&&(this.sprite.update(\"stun\"),this.counter++,this.toggleStatus(50,\"move\"),this.updateAttackSprite())}updateDir(t){t>this.x?this.dir=1:this.dir=-1}draw(t){this.updateDir(t),this.setup(t),this.alive?this.update(t):this.dead(t)}}var d=class{constructor(t){this.ctx=t,this.test=100,this.enemy=new p(1e3,this.ctx),this.kill=0,this.counter=0,this.player=new o(this.ctx,300,\"ken\",1),this.player.keyboard.movement(),this.image=new Image,this.sound=new h,this.enemyHp=new n(this.ctx,this.enemy.x,this.enemy.y,80),this.p1Hp=new n(this.ctx,500,20,300),this.playSound=!0,this.prob=Math.random(),this.sound=new h,this.over=!1}gameover(){this.image.src=\"https://static.comicvine.com/uploads/original/11111/111112704/3860536-ron_vs_ken_by_eastmonkey.jpg\",this.ctx.drawImage(this.image,0,0,1e3,500),this.ctx.font=\"40px Acme\",this.ctx.fillStyle=\"white\",this.ctx.textAlign=\"center\",this.ctx.fillText(\"Game Over\",500,150),this.totalScore()}totalScore(){this.test--,0===this.test&&this.sound.play(\"./asset/sound/game_finished.wav\"),this.test<=20&&this.ctx.fillText(`Total Kill : ${this.kill}`,500,290)}miss(){this.ctx.font=\"20px Acme\",this.ctx.fillStyle=\"red\",this.ctx.textAlign=\"center\",this.ctx.fillText(\"Miss!\",this.player.x+60,this.player.y-20),this.firsthit=!0}random(){this.prop=Math.random()}playerToEnemy(){this.player.keyboard.input.ATTACK||this.player.keyboard.input.KICK?this.enemydead(this.player.x,90):this.player.bullet?this.enemydead(this.player.bullet.x,80):this.random()}enemyToPlayer(){this.enemy.attack=!1,Math.abs(this.enemy.x-this.player.x)<90&&(!1===this.enemy.dull?this.enemy.attack=!0:this.enemy.attack=!1),this.enemy.attack&&(this.player.keyboard.input.LEFT?this.player.x<this.enemy.x&&(this.player.block=!0,this.p1Hp.block()):this.player.keyboard.input.RIGHT?this.player.x>this.enemy.x&&(this.player.block=!0,this.p1Hp.block()):(this.p1Hp.hit(),this.player.stun=!0))}collision(){this.playerToEnemy(),this.enemyToPlayer()}enemydead(t,i=90){Math.abs(t-this.enemy.x)<i&&(this.prop>.4?(this.enemy.dull=!0,this.enemyHp.hit()):(this.enemy.block(t),this.enemyHp.block()),this.enemyHp.len<=0&&(this.enemy.alive=!1,this.kill++),this.player.keyboard.input.KICK&&this.player.keyboard.input.SPECIAL&&this.enemy.updateX(this.player.x,1,-1))}getRand(t){return this.enemy.x=Math.random()>.5?0:1e3,this.enemy.x}respawn(){this.enemy.transparent<=0&&(this.sound.play(\"./asset/sound/die.wav\"),this.enemy.alive=!0,this.enemy.dull=!1,this.enemyHp.len=80,this.enemy.transparent=1,this.enemy.x=this.getRand(this.enemy.x))}comboContainer(){this.ctx.fillStyle=\"green\",this.ctx.font=\"12px Acme\",this.ctx.fillText(\"Combo GAUGE\",500,60),this.comboTime<=100&&(this.ctx.fillStyle=\"yellow\"),this.comboTime<=50&&(this.ctx.fillStyle=\"red\"),this.ctx.fillRect(400,70,this.comboTime,20)}clock(){this.ctx.textAlign=\"center\",this.ctx.font=\"40px Acme\",this.time<=5&&(this.ctx.fillStyle=\"red\"),this.ctx.fillText(`Timer ${this.time}`,500,30)}trainingMode(){this.clock(),this.comboContainer(),this.player.draw(),this.enemy.draw(this.player.x),this.player.soundControl(this.enemy),this.enemyHp.enemyhp(this.enemy.x,this.enemy.y,10),this.player.update(this.enemy.x),this.p1Hp.draw(),this.collision(),this.respawn()}draw(){this.p1Hp.len<=0?(this.gameover(),this.over=!0):this.trainingMode()}};var u=class{constructor(t){this.ctx=t,this.background=new l(this.ctx),this.play=this.play.bind(this),this.input=new e,this.input.gameControl(),this.fps=0,this.image=new Image,this.image.src=\"https://i.pinimg.com/originals/f6/c4/51/f6c4516c11809f1b3550e0c68abfef89.gif\",this.test=70,this.time=60,this.training=!1,this.vs=!1,this.vsMode=null,this.trainMode=null}intro(){this.ctx.drawImage(this.image,0,0,1e3,500),this.ctx.font=\"40px Acme\",this.ctx.fillStyle=\"white\",this.ctx.textAlign=\"center\",this.ctx.fillText(\"Best Street Fighter\",500,200),this.ctx.font=\"20px Acme\",this.start()}createClickBox(t,i,s,e,h){this.ctx.fillText(t,i,s);let a=this.ctx.measureText(t).width/2;document.addEventListener(\"click\",t=>{t.layerX>=i-a&&t.layerX<=i+a&&t.layerY>=s-e&&t.layerY<=s+e&&(\"vs\"===h?(this.vs=!0,this.input.restart=!0,this.vsMode=new c(this.ctx)):\"train\"===h?(this.trainMode=new d(this.ctx),this.input.restart=!0,this.training=!0):(this.input.restart=!1,this.training=!1,this.vs=!1))})}restart(){this.createClickBox(\"ReStart\",500,400,20,\"restart\")}start(){this.createClickBox(\"Train\",500,300,20,\"train\"),this.createClickBox(\"VS Mode\",500,350,20,\"vs\")}play(){this.input.restart?(this.background.draw(),this.training&&(this.trainMode.draw(),this.trainMode.over&&this.restart()),this.vs&&(this.vsMode.gamefun(),this.vsMode.over&&this.restart())):this.intro(),requestAnimationFrame(this.play)}};var m=class{constructor(t){this.bgm=document.getElementById(\"myAudio\"),this.bgsound=document.getElementById(\"music-button\"),this.icon=document.getElementById(\"icon\")}musicAction(){this.bgsound.addEventListener(\"click\",()=>{this.bgm.paused?(this.bgm.play(),this.icon.className=\"fas fa-volume-up\"):(this.bgm.pause(),this.icon.className=\"fas fa-volume-off\")})}};document.addEventListener(\"DOMContentLoaded\",()=>{const t=document.getElementById(\"MyCanvas\");t.width=1e3,t.height=500;const i=t.getContext(\"2d\"),s=new u(i);(new m).musicAction(),s.play()})}]);","extractedComments":[]}