{"map":"{\"version\":3,\"sources\":[\"webpack/bootstrap\",\"/Users/dajinkim/Desktop/bjProject/BestStreetFighter/lib/input.js\",\"/Users/dajinkim/Desktop/bjProject/BestStreetFighter/lib/sound.js\",\"/Users/dajinkim/Desktop/bjProject/BestStreetFighter/lib/bullet.js\",\"/Users/dajinkim/Desktop/bjProject/BestStreetFighter/lib/sprite.js\",\"/Users/dajinkim/Desktop/bjProject/BestStreetFighter/lib/player.js\",\"/Users/dajinkim/Desktop/bjProject/BestStreetFighter/lib/hpbar.js\",\"/Users/dajinkim/Desktop/bjProject/BestStreetFighter/lib/vsMode.js\",\"/Users/dajinkim/Desktop/bjProject/BestStreetFighter/lib/background.js\",\"/Users/dajinkim/Desktop/bjProject/BestStreetFighter/lib/enemy.js\",\"/Users/dajinkim/Desktop/bjProject/BestStreetFighter/lib/trainMode.js\",\"/Users/dajinkim/Desktop/bjProject/BestStreetFighter/lib/game.js\",\"/Users/dajinkim/Desktop/bjProject/BestStreetFighter/lib/music.js\",\"/Users/dajinkim/Desktop/bjProject/BestStreetFighter/lib/main.js\"],\"names\":[\"installedModules\",\"__webpack_require__\",\"moduleId\",\"exports\",\"module\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"enumerable\",\"get\",\"r\",\"Symbol\",\"toStringTag\",\"value\",\"t\",\"mode\",\"__esModule\",\"ns\",\"create\",\"key\",\"bind\",\"n\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"Input\",\"[object Object]\",\"this\",\"restart\",\"input\",\"LEFT\",\"RIGHT\",\"DOWN\",\"UP\",\"UP_MOVE\",\"ATTACK\",\"REVIVE\",\"KICK\",\"SHOOT\",\"SPECIAL\",\"ANY\",\"attack\",\"disable\",\"counter\",\"keyHandler\",\"document\",\"addEventListener\",\"e\",\"keys\",\"state\",\"type\",\"keyCode\",\"sound\",\"createElement\",\"setAttribute\",\"style\",\"display\",\"src\",\"play\",\"then\",\"console\",\"log\",\"pause\",\"bullet\",\"ctx\",\"x\",\"y\",\"dir\",\"w\",\"h\",\"speed\",\"image\",\"Image\",\"hit\",\"collide\",\"drawImage\",\"shoot\",\"Sprite\",\"char\",\"maxFrame\",\"frame\",\"onload\",\"width\",\"height\",\"action\",\"player\",\"keyboard\",\"stop\",\"move\",\"fps\",\"stun\",\"block\",\"sprite\",\"temp\",\"desc\",\"sControl\",\"bControl\",\"delay\",\"dead\",\"gravity\",\"gravitySpeed\",\"imagePosX\",\"imagePosY\",\"onGround\",\"jumpPower\",\"dy\",\"world\",\"drag\",\"groundDrag\",\"ground\",\"fpsControl\",\"draw\",\"save\",\"scale\",\"restore\",\"dullMove\",\"update\",\"updateDir\",\"playSound\",\"specialAction\",\"enemyX\",\"moveAction\",\"attackAction\",\"Math\",\"abs\",\"enemy\",\"meleeSound\",\"rangeSound\",\"borderLimit\",\"hitBottom\",\"HPBar\",\"len\",\"fixlen\",\"center\",\"color\",\"fillStyle\",\"fillRect\",\"strokeStyle\",\"lineWidth\",\"strokeRect\",\"dmg\",\"vsMode\",\"p1\",\"p2\",\"movement\",\"p1hp\",\"p2hp\",\"over\",\"time\",\"bul\",\"stunned\",\"bulControl\",\"fightControl\",\"soundControl\",\"hpControl\",\"playersCollision\",\"font\",\"textAlign\",\"fillText\",\"gameover\",\"gameConstraint\",\"win\",\"removePlayer\",\"Background\",\"maxWidth\",\"maxHeight\",\"enemy_Enemy\",\"super\",\"rw\",\"rh\",\"alive\",\"transparent\",\"aType\",\"currentAttack\",\"dull\",\"blocked\",\"random\",\"globalAlpha\",\"maxTime\",\"idx\",\"floor\",\"toggleStatus\",\"updateAttackSprite\",\"updateX\",\"setup\",\"end\",\"trainMode\",\"test\",\"kill\",\"p1Hp\",\"enemyHp\",\"enemyStr\",\"respTime\",\"prop\",\"hitChance\",\"splay\",\"start\",\"round\",\"totalScore\",\"range\",\"enemydead\",\"atype\",\"undefined\",\"playerToEnemy\",\"enemyToPlayer\",\"pHp\",\"roundText\",\"roundFinished\",\"lib_game\",\"background\",\"gameControl\",\"training\",\"vs\",\"box\",\"canvas\",\"getElementById\",\"textX\",\"cursor\",\"forEach\",\"obj\",\"layerX\",\"layerY\",\"text\",\"boxObj\",\"measureText\",\"push\",\"createBox\",\"clock\",\"roundStart\",\"gamefun\",\"requestAnimationFrame\",\"lib_music\",\"bgm\",\"bgsound\",\"icon\",\"paused\",\"className\",\"getContext\",\"game\",\"music\",\"intro\",\"mouseEvent\",\"clickEvent\",\"musicAction\"],\"mappings\":\"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\",\"sourcesContent\":[\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n \\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n \\t\\t}\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// create a fake namespace object\\n \\t// mode & 1: value is a module id, require it\\n \\t// mode & 2: merge all properties of value into the ns\\n \\t// mode & 4: return value when already ns object\\n \\t// mode & 8|1: behave like require\\n \\t__webpack_require__.t = function(value, mode) {\\n \\t\\tif(mode & 1) value = __webpack_require__(value);\\n \\t\\tif(mode & 8) return value;\\n \\t\\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\\n \\t\\tvar ns = Object.create(null);\\n \\t\\t__webpack_require__.r(ns);\\n \\t\\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\\n \\t\\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\\n \\t\\treturn ns;\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"\\\";\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 0);\\n\",\"\\nexport default class Input {\\n  constructor() {\\n    this.restart = false;\\n    this.input = {\\n      LEFT: false,\\n      RIGHT: false,\\n      DOWN: false,\\n      UP: false,\\n      UP_MOVE: false,\\n      ATTACK: false,\\n      REVIVE: false,\\n      KICK: false,\\n      SHOOT: false,\\n      SPECIAL: false,\\n      ANY: false,\\n    };\\n    this.attack = false;\\n    this.disable = false;\\n    this.counter = 0;\\n    this.keyHandler = this.keyHandler.bind(this);\\n    document.addEventListener(\\\"keydown\\\", this.keyHandler);\\n    document.addEventListener(\\\"keyup\\\", this.keyHandler);\\n  }\\n\\n  keyHandler(e, keys = [65, 68, 84, 89, 85, 87]) {\\n    const state = e.type === \\\"keydown\\\";\\n    switch (e.keyCode) {\\n      case keys[0]:\\n        this.input.LEFT = state;\\n        break;\\n      case keys[1]:\\n        this.input.RIGHT = state;\\n        break;\\n      case keys[2]:\\n        this.input.ATTACK = state;\\n        break;\\n      case keys[3]:\\n        this.input.KICK = state;\\n        break;\\n      case keys[4]:\\n        this.input.SPECIAL = state;\\n        break;\\n      case keys[5]:\\n        this.input.UP = state;\\n        break;\\n      default:\\n    }\\n  }\\n\\n  gameControl() {\\n    this.input.REVIVE = false;\\n  }\\n\\n  // movement(keys = [65, 68, 84, 89, 85, 87]) {\\n  //\\n  //     document.addEventListener(\\\"keydown\\\", e => {\\n  //       const key = e.keyCode;\\n  //       switch (key) {\\n  //   //         case keys[0]:\\n  //   //           this.input.LEFT = true;\\n  //   //           break;\\n  //   //         case keys[1]:\\n  //   //           this.input.RIGHT = true;\\n  //   //           break;\\n  //   //         case keys[2]:\\n  //   //           this.attack = true;\\n  //   //           this.counter++;\\n  //   //           this.counter > 2 ? this.input.ATTACK = false : this.input.ATTACK = true;\\n  //   //           break;\\n  //   //         case keys[3]:\\n  //   //           this.attack = true;\\n  //   //           this.counter++;\\n  //   //           this.counter > 3 ? this.input.KICK = false : this.input.KICK = true;\\n  //   //           break;\\n  //   //         case keys[4]: this.input.SPECIAL = true; break;\\n  //   //         case keys[5]: this.input.UP = true; break;\\n  //   //         default:\\n  //       }\\n  //     });\\n  //     document.addEventListener(\\\"keyup\\\", e => {\\n  //       const key = e.keyCode;\\n  //       switch (key) {\\n  //         case keys[0]:\\n  //           this.input.LEFT = false;\\n  //           break;\\n  //         case 40:\\n  //         case 83:\\n  //           this.input.DOWN = false;\\n  //           break;\\n  //         case keys[1]:\\n  //           this.input.RIGHT = false;\\n  //           break;\\n  //         case keys[2]:\\n  //           this.attack = false;\\n  //           this.input.ATTACK = false;\\n  //           this.counter = 0;\\n  //           break;\\n  //         case keys[3]:\\n  //           this.attack = false;\\n  //           // this.input.KICK = false;\\n  //           this.counter = 0;\\n  //           break;\\n  //         case keys[4]: this.input.SPECIAL = false; break;\\n  //         case keys[5]: this.input.UP = false; break;\\n  //       }\\n  //     })\\n  //   }\\n}\\n\",\"class Sound {\\n  constructor() {\\n    this.sound = document.createElement(\\\"audio\\\");\\n    this.sound.setAttribute(\\\"preload\\\", \\\"auto\\\");\\n    this.sound.setAttribute(\\\"controls\\\", \\\"none\\\");\\n    this.sound.style.display = \\\"none\\\";\\n  }\\n\\n\\n  play(src) {\\n    this.sound.src = src;\\n    this.sound.play().then(() => console.log());\\n  }\\n\\n  stop() {\\n    this.sound.pause();\\n  }\\n}\\n\\nexport default Sound;\\n\",\"\\nimport Sound from './sound.js'\\n\\nclass Bullet {\\n  constructor(ctx, x, y, dir) {\\n    this.ctx = ctx;\\n    this.w = 40;\\n    this.h = 40;\\n    this.x =  x + dir * 50\\n    this.y = y + 35;\\n    this.speed = dir * 10;\\n    this.image = new Image();\\n    this.image.src = dir > 0 ? `./asset/bullet.png` : `./asset/bullet_left.png`;\\n    this.hit = false;\\n    this.collide = false;\\n    this.sound = new Sound();\\n    this.m = true;\\n  }\\n\\n  shoot() {\\n    this.ctx.drawImage(this.image, this.x, this.y, this.w, this.h);\\n    this.x += this.speed;\\n  }\\n\\n  playSound() {\\n    this.sound.play('./asset/sound/hadouken.mp3');\\n  }\\n\\n  draw() {\\n    if (!this.collide) {\\n      this.shoot()\\n\\n    }\\n\\n  }\\n\\n\\n\\n\\n}\\n\\nexport default Bullet;\\n\",\"\\nimport { customs } from './CustomSprite.js'\\n\\nexport default class Sprite {\\n  constructor(char) {\\n    this.char = char;\\n    this.image = new Image();\\n    this.image.src = `./asset/${this.char}/idle.png`;\\n    this.maxFrame = 3;\\n    this.frame = 0;\\n    this.image.onload = () => {\\n      this.w = this.image.width / (this.maxFrame + 1);\\n      this.h = this.image.height;\\n      this.x = 0;\\n      this.y = 0;\\n    }\\n  }\\n\\n  update(action) {\\n    this.x = this.w * this.frame;\\n    if (this.char === \\\"ken\\\") {\\n      switch (action) {\\n        case \\\"jump\\\":\\n        case \\\"forward_jump\\\":\\n          this.maxFrame = 6;\\n          this.image.src = `./asset/${this.char}/${action}.png`;\\n          this.w\\n          break;\\n        case \\\"special_kick\\\":\\n          this.maxFrame = 5;\\n          this.image.src = `./asset/${this.char}/${action}.png`;\\n          break;\\n        case \\\"kick\\\":\\n        case \\\"moving\\\":\\n          this.maxFrame = 4;\\n          this.image.src = `./asset/${this.char}/${action}.png`;\\n          break;\\n        case \\\"stun\\\":\\n        case \\\"dead\\\":\\n          this.maxFrame = 3;\\n          this.image.src = `./asset/${this.char}/${action}.png`;\\n          break;\\n        case \\\"punch\\\":\\n        case \\\"win\\\":\\n          this.maxFrame = 2;\\n          this.image.src = `./asset/${this.char}/${action}.png`;\\n          break;\\n        case \\\"shot\\\":\\n          this.maxFrame = 1;\\n          this.image.src = `./asset/${this.char}/${action}.png`;\\n          break;\\n        case \\\"block\\\":\\n          this.maxFrame = 0;\\n          this.image.src = `./asset/${this.char}/${action}.png`;\\n          break;\\n        default:\\n          this.maxFrame = 3;\\n          this.image.src = `./asset/${this.char}/idle.png`;\\n          break;\\n      }\\n    }\\n    if (this.char === \\\"ryu\\\") {\\n      switch (action) {\\n        case \\\"special_kick\\\":\\n          this.maxFrame = 5;\\n          this.image.src = `./asset/${this.char}/${action}.png`;\\n          break;\\n        case \\\"moving\\\":\\n          this.maxFrame = 4;\\n          this.image.src = `./asset/${this.char}/${action}.png`;\\n          break;\\n        case \\\"kick\\\":\\n        case \\\"punch\\\":\\n        case \\\"shot\\\":\\n        case \\\"stun\\\":\\n        case \\\"win\\\":\\n          this.maxFrame = 2;\\n          this.image.src = `./asset/${this.char}/${action}.png`;\\n          break;\\n        case \\\"block\\\":\\n          this.maxFrame = 0;\\n          this.image.src = `./asset/${this.char}/${action}.png`;\\n          break;\\n        case \\\"dead\\\":\\n          this.maxFrame = 3;\\n          this.image.src = `./asset/${this.char}/${action}.png`;\\n          break;\\n        default:\\n          this.maxFrame = 3;\\n          this.image.src = `./asset/${this.char}/idle.png`;\\n          break;\\n      }\\n    }\\n  }\\n\\n}\\n\",\"import Input from './input.js';\\nimport Bullet from './bullet.js';\\nimport Sprite from './sprite.js';\\nimport Sound from './sound.js'\\n\\nclass Player {\\n  constructor(ctx,x = 300, char, dir) {\\n    this.ctx = ctx;\\n    this.keyboard = new Input();\\n    this.frame = 0;\\n\\n    this.x = x;\\n    this.y = 300;\\n    this.speed = 0;\\n    this.stop = 0;\\n    this.move = 5;\\n    this.bullet = null;\\n    this.fps = 0;\\n    this.stun = false;\\n    this.block = false;\\n    this.sprite = new Sprite(char);\\n    this.dir = dir;\\n    this.temp = \\\"\\\";\\n    this.desc = \\\"\\\";\\n    this.sControl = true;\\n    this.bControl = true;\\n    this.sound = new Sound();\\n    this.delay = 0;\\n    this.dead = false;\\n    this.gravity = 0.05;\\n    this.gravitySpeed = 0;\\n    this.w = this.sprite.w;\\n    this.h = this.sprite.h;\\n    this.imagePosX = this.sprite.x;\\n    this.imagePosY = this.sprite.y;\\n    // this.jump = customs.ken.jump;\\n    // this.forward = customs.ken.forward_jump;\\n    this.onGround = false;\\n    this.jumpPower = -8;\\n    this.dy = 0;\\n    this.world = {\\n      gravity: 0.2, // strength per frame of gravity\\n      drag: 0.999, // play with this value to change drag\\n      groundDrag: 0.9, // play with this value to change ground movement\\n      ground: 400,\\n    }\\n\\n  }\\n\\n  fpsControl(fps) {\\n    this.fps++;\\n    if (this.desc !== this.temp) {\\n      this.desc = this.temp;\\n      this.frame = 0;\\n    }\\n    this.sprite.frame = this.frame;\\n    if (this.fps > fps) {\\n      this.fps = 0;\\n      if (this.dead || this.keyboard.attack) {\\n        this.frame > this.sprite.maxFrame? this.frame = this.sprite.maxFrame : this.frame++;\\n      } else {\\n        this.frame++;\\n        if (this.frame > this.sprite.maxFrame) this.frame = 0\\n      }\\n    }\\n  }\\n\\n  draw() {\\n\\n\\n\\n    this.fpsControl(20);\\n    if (this.bullet) {\\n      this.bullet.draw()\\n    }\\n    console.log(this.imagePosX);\\n    this.ctx.save();\\n    this.ctx.scale(this.dir,1);\\n    this.ctx.drawImage(this.sprite.image, this.imagePosX, this.imagePosY, this.w, this.h, this.dir * this.x,this.y, this.dir * this.w * 2, this.h * 2);\\n    this.ctx.restore();\\n  }\\n\\n\\n  updateDir(x) {\\n    if (this.x < x) {\\n      this.dir = 1;\\n      if (this.keyboard.input.LEFT && this.dullMove((x))) this.speed = -this.move\\n    } else {\\n      this.dir = -1;\\n      if (this.keyboard.input.RIGHT && this.dullMove((x))) this.speed = this.move;\\n    }\\n  }\\n\\n  moveAction(x) {\\n\\n    if (this.keyboard.input.LEFT || this.keyboard.input.RIGHT) {\\n      if (this.keyboard.input.UP) {\\n        this.sprite.update('forward_jump');\\n        this.temp = 'forward_jump';\\n      }\\n      if (this.block) {\\n        this.sprite.update(\\\"block\\\");\\n        this.move = 0.5;\\n      }\\n      else {\\n        this.sprite.update(\\\"moving\\\");\\n        this.move = 5;\\n      }\\n      this.updateDir(x);\\n      if (this.keyboard.input.LEFT && !(this.dullMove((x)))) this.speed = -this.move;\\n      else if (this.keyboard.input.RIGHT && !(this.dullMove((x)))) this.speed = this.move;\\n    } else if (this.keyboard.input.UP) {\\n      this.sprite.update(\\\"jump\\\");\\n      this.temp = 'jump';\\n    }\\n    else if (this.stun) {\\n      this.sprite.update(\\\"stun\\\");\\n      this.move = 0;\\n      if (this.frame === this.sprite.maxFrame) this.stun = false;\\n    }\\n  }\\n\\n\\n  specialAction() {\\n    if (this.keyboard.input.SPECIAL) {\\n      if (this.keyboard.input.ATTACK && !this.keyboard.input.KICK) {\\n        this.sprite.update(\\\"shot\\\");\\n        this.temp = \\\"shot\\\";\\n        if (!this.bullet) {\\n          this.bullet = new Bullet(this.ctx, this.x, this.y, this.dir);\\n        }\\n        if (this.keyboard.input.SHOOT) {\\n          this.bullet.playSound();\\n          this.keyboard.input.SHOOT = false;\\n        }\\n        this.delay++;\\n        if (this.delay > 20) {\\n          this.keyboard.input.SPECIAL = false;\\n          this.keyboard.input.ATTACK = false;\\n        }\\n\\n      } else if (!this.keyboard.input.ATTACK && this.keyboard.input.KICK) {\\n        this.sprite.update(\\\"special_kick\\\");\\n        this.temp = \\\"special_kick\\\";\\n        this.delay++;\\n        this.x += this.dir * 2;\\n        if (this.delay > 40) {\\n          this.keyboard.input.SPECIAL = false;\\n          this.keyboard.input.KICK = false;\\n        }\\n      } else {\\n        this.delay = 0;\\n        this.keyboard.input.SHOOT = true;\\n      }\\n    }\\n  }\\n\\n  attackAction() {\\n\\n    if (this.keyboard.input.ATTACK && !this.stun) {\\n      this.sprite.update(\\\"punch\\\");\\n      this.temp = \\\"punch\\\";\\n    } else if (this.keyboard.input.KICK && !this.stun) {\\n      this.sprite.update(\\\"kick\\\");\\n      this.temp = \\\"kick\\\";\\n      if (this.frame >= this.sprite.maxFrame) {\\n        this.keyboard.input.KICK = false;\\n      }\\n    }\\n    this.specialAction();\\n  }\\n\\n  action(enemyX) {\\n    this.temp = \\\"idle\\\";\\n    this.sprite.update();\\n    this.speed = this.stop;\\n    this.moveAction(enemyX);\\n    this.attackAction();\\n  }\\n\\n  dullMove(enemyX) {\\n    return Math.abs(this.x - enemyX) < 90\\n  }\\n\\n  borderLimit() {\\n\\n    if (this.x > 875) {\\n      if (this.keyboard.input.LEFT) {\\n        this.speed = -this.move\\n      } else {\\n        this.speed = 0;\\n      }\\n    }\\n    if (this.x < 0) {\\n      if (this.keyboard.input.RIGHT) {\\n        this.speed = this.move\\n      } else {\\n        this.speed = 0;\\n      }\\n    }\\n  }\\n\\n  playSound(src) {\\n    if (this.sControl) {\\n      this.sound.play(src);\\n      this.sControl = false;\\n    }\\n  }\\n\\n  meleeSound(enemy) {\\n    if ((this.keyboard.input.ATTACK || this.keyboard.input.KICK) && !this.keyboard.input.SPECIAL) {\\n      if (Math.abs(this.x - enemy.x) < 100) {\\n          this.playSound('./asset/sound/punch_hit.wav');\\n      } else {\\n          this.playSound('./asset/sound/punch_miss.wav');\\n      }\\n    } else if (this.keyboard.input.KICK && this.keyboard.input.SPECIAL) {\\n        this.playSound('./asset/sound/s_kick.mp3');\\n    }\\n    else {\\n      this.sControl = true;\\n    }\\n  }\\n\\n  rangeSound(enemy) {\\n      if (this.bullet) {\\n      if (Math.abs(this.bullet.x - enemy.x) < 50 || this.bullet.x > 1000 || this.bullet.x < 0) {\\n        if (this.bControl) {\\n          this.bControl = false;\\n        }\\n        this.bullet.collide = true;\\n        this.bullet = null;\\n      } else {\\n        this.bControl = true;\\n      }\\n    }\\n  }\\n\\n  soundControl(enemy) {\\n    this.meleeSound(enemy);\\n    this.rangeSound(enemy);\\n  }\\n\\n  update(enemyX = 0) {\\n    this.action(enemyX);\\n    this.borderLimit();\\n    this.x += this.speed;\\n    if (this.keyboard.input.UP && this.onGround) {\\n      this.dy = this.jumpPower }\\n    this.dy += this.world.gravity;\\n    this.dy *= this.world.drag;\\n    this.y += this.dy;\\n    this.imagePosX = this.sprite.w * this.frame;\\n    this.imagePosY = 0;\\n    this.w = this.sprite.w;\\n    this.h = this.sprite.h;\\n    this.hitBottom();\\n  }\\n\\n  hitBottom() {\\n    if (this.y + 90 >= this.world.ground) {\\n      this.y = this.world.ground - 90;\\n      this.dy = 0;\\n      this.onGround = true;\\n    } else {\\n      if (this.keyboard.input.RIGHT || this.keyboard.input.LEFT) {\\n        this.sprite.update(\\\"forward_jump\\\");\\n        // this.imagePosX = this.forward[this.frame].x;\\n        // this.imagePosY = this.forward[this.frame].y;\\n        // this.w = this.forward[this.frame].width;\\n        // this.h = this.forward[this.frame].height;\\n        this.temp = 'forward_jump';\\n      } else {\\n        this.sprite.update(\\\"jump\\\");\\n        this.temp = 'jump';\\n        // this.imagePosY = this.jump[this.frame].y;\\n        // this.imagePosX = this.jump[this.frame].x;\\n        // this.h = this.jump[this.frame].height;\\n        // this.w = this.jump[this.frame].width;\\n      }\\n\\n      this.onGround = false;\\n    }\\n  }\\n\\n  removePlayer() {\\n    this.sprite.update(\\\"dead\\\");\\n    this.dead = true;\\n  }\\n\\n\\n  win() {\\n    this.sprite.update(\\\"win\\\");\\n    this.dead = true;\\n  }\\n}\\n\\n\\nexport default Player;\\n\",\"export default class HPBar {\\n  constructor(ctx, x,y, len) {\\n    this.ctx = ctx;\\n    this.x = x;\\n    this.y = y;\\n    this.len = len;\\n    this.fixlen = len;\\n    this.center = (this.x + this.fixlen)/2\\n  }\\n\\n  draw(color=\\\"yellow\\\") {\\n    this.ctx.fillStyle = \\\"red\\\";\\n    this.ctx.fillRect(this.center,this.y, this.fixlen, 30);\\n    this.ctx.fillStyle = color;\\n    this.ctx.fillRect(this.center,this.y, this.len, 30);\\n    this.ctx.strokeStyle = \\\"white\\\";\\n    this.ctx.lineWidth = 2;\\n    this.ctx.strokeRect(this.center, this.y, this.fixlen, 30);\\n  }\\n\\n\\n\\n  block(d=0.05) {\\n    this.len -= d\\n  }\\n  hit(dmg=1) {\\n    this.len -= dmg;\\n  }\\n}\\n\",\"import Player from './player.js';\\nimport HPBar from \\\"./hpbar\\\";\\n\\n\\nclass VsMode {\\n    constructor(ctx) {\\n        this.ctx = ctx;\\n        this.p1 = new Player(this.ctx, 300, \\\"ken\\\", 1);\\n        this.p2 = new Player(this.ctx, 700, \\\"ryu\\\", -1);\\n        this.p1.keyboard.movement();\\n        this.p2.keyboard.movement([37, 39, 74, 75, 76]);\\n        this.p1hp = new HPBar(this.ctx, 0, 50, 250);\\n        this.p2hp = new HPBar(this.ctx, 1000, 50, 250);\\n        this.over = false;\\n        this.time = 99;\\n    }\\n\\n\\n\\n    stunned() {\\n        if (this.p1.keyboard.attack) {\\n            this.p2.stun = true;\\n            this.p2.x++;\\n        }\\n        if (this.p2.keyboard.attack) {\\n            this.p1.stun = true;\\n            this.p1.x--;\\n        }\\n    }\\n\\n    bulControl(bul, enemy) {\\n        if (bul) {\\n            if (Math.abs(bul.x - enemy.x) < 100) {\\n                if (this.p2.keyboard.input.RIGHT) this.p2.block = true;\\n                else if (this.p1.keyboard.input.LEFT) this.p1.block = true;\\n                else enemy.stun = true;\\n            }\\n            else {\\n                enemy.stun = false;\\n            }\\n        }\\n    }\\n    fightControl() {\\n        this.p2.block = false;\\n        this.p1.block = false;\\n        if ((Math.abs(this.p1.x - this.p2.x) < 100 && (this.p1.keyboard.attack || this.p2.keyboard.attack))) {\\n\\n            if (this.p1.keyboard.attack && this.p2.keyboard.input.RIGHT) {\\n                this.p2.block = true;\\n                this.p2.x++;\\n            }\\n            if (this.p2.keyboard.attack && this.p1.keyboard.input.LEFT) {\\n                this.p1.block = true;\\n                this.p1.x--;\\n            }\\n                this.stunned();\\n        }\\n        this.bulControl(this.p1.bullet, this.p2);\\n        this.bulControl(this.p2.bullet, this.p1);\\n    }\\n\\n    hpControl() {\\n        if (this.p1.stun) {\\n            this.p1hp.hit()\\n        }\\n        if (this.p1.block) {\\n            this.p1hp.block()\\n        }\\n        if (this.p2.stun) {\\n            this.p2hp.hit()\\n        }\\n        if (this.p2.block) {\\n            this.p2hp.block()\\n        }\\n    }\\n    playersCollision() {\\n        this.fightControl();\\n        this.p1.soundControl(this.p2);\\n        this.p2.soundControl(this.p1);\\n        this.hpControl();\\n    }\\n\\n    draw() {\\n        this.p1.draw();\\n        this.p2.draw();\\n        this.p1hp.draw();\\n        this.p2hp.draw();\\n    }\\n\\n    update() {\\n        this.p1.update(this.p2.x);\\n        this.p2.update(this.p1.x);\\n        this.playersCollision();\\n    }\\n    gameover() {\\n        this.ctx.font=\\\"40px Acme\\\";\\n        this.ctx.fillStyle = \\\"red\\\";\\n        this.ctx.textAlign = \\\"center\\\";\\n        this.ctx.fillText(`You Win`,500,150);\\n    }\\n\\n    gamefun() {\\n        if (this.p1hp.len >= 0 && this.p2hp.len >= 0 && this.time > 0) {\\n            this.update();\\n        } else {\\n            this.gameover();\\n        }\\n        this.draw()\\n        this.gameConstraint();\\n    }\\n\\n    gameConstraint() {\\n        if (this.p1hp.len <= 0) {\\n            this.p2.win();\\n            this.p1.removePlayer();\\n            this.over = true;\\n        }\\n        else if (this.p2hp.len <= 0) {\\n            this.p1.win();\\n            this.p2.removePlayer();\\n            this.over = true;\\n        }\\n    }\\n\\n}\\n\\nexport default VsMode\\n\",\"\\nexport default class Background {\\n  constructor(ctx) {\\n    this.ctx = ctx;\\n    this.maxWidth = 1000;\\n    this.maxHeight = 500;\\n    this.image = new Image();\\n    this.image.src = 'https://i.pinimg.com/originals/91/64/01/9164016aa77fa969f71800b9ba8c32b4.gif';\\n  }\\n\\n  draw() {\\n    this.ctx.drawImage(this.image,0,0,this.maxWidth,this.maxHeight);\\n  }\\n\\n}\\n\",\"import Sprite from './sprite.js';\\nimport Player from './player.js';\\nimport Bullet from './bullet.js';\\n\\nexport default class Enemy extends Player {\\n\\n    constructor(x, ctx) {\\n        super();\\n        this.x = x;\\n        this.ctx = ctx;\\n        this.rw = 140;\\n        this.rh = 160;\\n        this.y = 300;\\n        this.alive = true;\\n        this.frame = 0;\\n        this.transparent = 1;\\n        this.fps = 0;\\n        this.dir = 1;\\n        this.attack = false;\\n        this.counter = 0;\\n        this.sprite = new Sprite('ryu');\\n        this.aType = ['punch', 'kick', 'special_kick'];\\n        this.currentAttack = \\\"kick\\\";\\n        this.dull = false;\\n        this.blocked = false;\\n        this.stop = 0;\\n        this.move = 2;\\n        this.bullet = null;\\n        this.sControl = true;\\n        this.random = Math.random()\\n    }\\n\\n    fpsControl(fps) {\\n        this.fps++;\\n        if (this.fps > fps) {\\n            this.fps = 0;\\n            if (this.frame === 0) {\\n                this.random = Math.random();\\n            }\\n            if (!this.alive) {\\n                this.frame >= this.sprite.maxFrame ? this.frame = this.sprite.maxFrame : this.frame++;\\n            } else {\\n                this.frame++;\\n                if (this.frame > this.sprite.maxFrame) this.frame = 0\\n            }\\n        }\\n    }\\n\\n    setup(x) {\\n        this.fpsControl(15);\\n        this.ctx.save();\\n        this.ctx.globalAlpha = this.transparent;\\n        this.ctx.scale(this.dir, 1);\\n        this.ctx.drawImage(this.sprite.image, this.sprite.w * this.frame, 0, this.sprite.w, this.sprite.h, this.dir * this.x, this.y, this.dir * this.rw, this.rh);\\n        this.ctx.restore();\\n    }\\n\\n\\n    stun() {\\n        this.sprite.update(\\\"stun\\\");\\n    }\\n\\n    shot() {\\n        this.sprite.update(\\\"shot\\\");\\n    }\\n\\n\\n    toggleStatus(maxTime, type) {\\n        if (this.counter > maxTime) {\\n            switch (type) {\\n                case \\\"attack\\\":\\n                    this.attack = !this.attack;\\n                    break;\\n                case \\\"move\\\":\\n                    this.dull = false;\\n                    break;\\n                case \\\"block\\\":\\n                    this.blocked = false;\\n                    break;\\n            }\\n            this.counter = 0;\\n        }\\n    }\\n\\n    updateAttackSprite() {\\n        const idx = Math.floor(Math.random() * 3);\\n        this.currentAttack = this.aType[idx];\\n    }\\n\\n    attacksound() {\\n            this.playSound('./asset/sound/punch_hit.mp3');\\n    }\\n\\n    updateX(x, speed, dir = 1) {\\n        if (this.x < x) this.x += speed * dir;\\n        else this.x -= speed * dir\\n    }\\n\\n    update(x) {\\n        this.sControl = true;\\n        if (!this.dull && !this.blocked) {\\n            if (this.sControl) {\\n                this.sControl = false;\\n            }\\n            if (this.attack) {\\n                if (this.currentAttack === \\\"special_kick\\\") {\\n                    this.updateX(x, 1)\\n                }\\n                this.sprite.update(`${this.currentAttack}`);\\n            }\\n            else if (Math.abs(this.x - x) > 240) {\\n                if (this.random < 0.4) {\\n                    this.sprite.update(\\\"shot\\\");\\n                    if  (this.frame === 0) {\\n                        this.bullet = new Bullet(this.ctx, this.x, this.y, -1);\\n                    }\\n                } else {\\n                    this.updateX(x, this.move);\\n                    this.sprite.update(\\\"moving\\\");\\n                }\\n            }\\n            else if (Math.abs(this.x - x) > 90) {\\n                if (this.random < 0.4) {\\n                    this.updateX(x, this.move);\\n                    this.sprite.update(\\\"moving\\\");\\n                } else {\\n                    this.updateX(x, this.stop);\\n                    this.sprite.update();\\n                }\\n            } else {\\n                this.sprite.update();\\n            }\\n        } else {\\n            if (this.blocked) {\\n                this.sprite.update(\\\"block\\\");\\n                this.toggleStatus(15, \\\"block\\\");\\n            } else if (this.dull) {\\n                this.sprite.update(\\\"stun\\\");\\n                this.toggleStatus(3, \\\"move\\\");\\n            }\\n            this.counter++;\\n            this.updateAttackSprite();\\n        }\\n        if (this.bullet) {\\n            this.bullet.draw()\\n        }\\n    }\\n\\n    updateDir(x) {\\n        if (x > this.x) this.dir = 1;\\n        else this.dir = -1;\\n    }\\n\\n    end() {\\n        this.transparent -= 0.05;\\n        this.sprite.update(\\\"dead\\\");\\n    }\\n\\n    draw(x) {\\n        this.updateDir(x);\\n        this.setup(x);\\n        if (!this.alive) {\\n            this.end()\\n        }\\n    }\\n\\n\\n};\\n\",\"import Enemy from \\\"./enemy\\\";\\nimport Sound from \\\"./sound\\\";\\nimport Player from './player.js';\\nimport HPBar from \\\"./hpbar\\\";\\n\\nclass TrainMode {\\n    constructor(ctx) {\\n        this.ctx = ctx;\\n        this.test = 100;\\n        this.kill = 0;\\n        this.player = new Player(this.ctx,300,\\\"ken\\\",1);\\n        this.enemy = new Enemy(800, this.ctx);\\n        // this.player.keyboard.movement();\\n        this.image = new Image();\\n        this.sound = new Sound();\\n        this.p1Hp = new HPBar(this.ctx, 0, 50, 250);\\n        this.enemyHp = new HPBar(this.ctx,1000, 50, 250);\\n        this.playSound = true;\\n        this.enemyStr = 1;\\n        this.respTime = 30;\\n        this.prop = Math.random();\\n        this.hitChance = 0.3;\\n        this.sound = new Sound();\\n        this.splay = true;\\n        this.start = false;\\n        this.round = 1;\\n        this.counter = 0;\\n    }\\n\\n    gameover() {\\n        this.image.src = 'https://static.comicvine.com/uploads/original/11111/111112704/3860536-ron_vs_ken_by_eastmonkey.jpg';\\n        this.ctx.drawImage(this.image,0, 0, 1000, 500);\\n        this.ctx.font=\\\"40px StreetFighter\\\";\\n        this.ctx.fillStyle = \\\"black\\\";\\n        this.ctx.textAlign = \\\"center\\\";\\n        this.ctx.fillText(\\\"Game Over\\\",500,150);\\n        this.totalScore();\\n\\n    }\\n\\n    totalScore() {\\n        this.test--;\\n        if (this.test === 0) {\\n            this.sound.play('./asset/sound/game_finished.wav')\\n        }\\n        if (this.test <= 20) {\\n            this.ctx.fillText(`Total Kill : ${this.kill}`,500,290);\\n        }\\n    }\\n\\n    enemydead(x,range=90) {\\n        if (Math.abs(x - this.enemy.x) < range) {\\n            if (this.prop > this.hitChance) {\\n                this.enemy.dull = true;\\n                this.enemyHp.hit();\\n            } else {\\n                this.enemy.blocked = true;\\n                this.enemyHp.block();\\n            }\\n            if (this.enemyHp.len <= 0) {\\n                this.enemy.alive = false;\\n            }\\n            if (this.player.keyboard.input.KICK && this.player.keyboard.input.SPECIAL) {\\n                this.enemy.updateX(this.player.x, 1,-2);\\n            }\\n        } else {\\n            this.prop = Math.random();\\n        }\\n    }\\n\\n    playerToEnemy() {\\n        if (this.player.keyboard.input.ATTACK || this.player.keyboard.input.KICK) {\\n            this.enemydead(this.player.x, 90);\\n        }\\n        else if (this.player.bullet) {\\n            this.enemydead(this.player.bullet.x,80);\\n        }\\n    }\\n\\n\\n\\n    enemyToPlayer(atype) {\\n        if(atype && Math.abs(atype.x - this.player.x) < 100) {\\n            if (atype.collide !== undefined) {\\n                atype.collide = true;\\n            }\\n            console.log(atype.x, this.player.x);\\n            if (this.enemy.dull || this.enemy.blocked) {\\n                this.enemy.attack = false;\\n            }\\n            this.enemy.toggleStatus(this.respTime,\\\"attack\\\");\\n            this.enemy.counter++;\\n            if (this.enemy.attack || this.enemy.bullet) {\\n                if (this.player.keyboard.input.LEFT) {\\n                    if (this.player.x < atype.x) {\\n                        this.player.block = true;\\n                        this.p1Hp.block()\\n                    }\\n                } else if (this.player.keyboard.input.RIGHT) {\\n                    if (this.player.x > atype.x) {\\n                        this.player.block = true;\\n                        this.p1Hp.block()\\n                    }\\n                } else {\\n                    this.p1Hp.hit(this.enemyStr);\\n                    this.player.stun = true;\\n                }\\n            }\\n        }\\n        else {\\n            this.enemy.attack = false;\\n            this.player.stun = false;\\n            this.player.block = false;\\n        }\\n\\n    }\\n    collision() {\\n        this.playerToEnemy();\\n        this.enemyToPlayer(this.enemy);\\n    }\\n\\n\\n\\n\\n\\n\\n\\n    respawn() {\\n        if (this.enemy.transparent <= 0) {\\n            this.sound.play('./asset/sound/die.wav');\\n            this.enemyHp.len = 200;\\n            this.enemy = new Enemy(800, this.ctx);\\n            this.enemyStr += 0.1;\\n            this.respTime--;\\n            this.hitChance += 0.02;\\n            this.round++;\\n        }\\n    }\\n\\n    pHp() {\\n        this.ctx.fillStyle = \\\"red\\\";\\n        this.p1Hp.draw('yellow');\\n        this.enemyHp.draw('yellow');\\n    }\\n\\n    setup() {\\n        this.pHp();\\n        this.player.draw();\\n        // this.enemy.draw(this.player.x);\\n    }\\n\\n    update() {\\n        this.roundText();\\n        this.player.soundControl(this.enemy);\\n        this.player.update(this.enemy.x);\\n        // this.collision();\\n        this.player.keyboard.disable = this.player.stun;\\n\\n    }\\n    roundFinished() {\\n        this.player.win();\\n        this.start= false;\\n        if (this.splay) {\\n            this.sound.play('./asset/sound/youwin.wav');\\n            this.splay = false;\\n        }\\n    }\\n\\n    roundText() {\\n        this.ctx.textAlign = \\\"center\\\";\\n        this.ctx.fillStyle = 'red';\\n        this.ctx.fillText(`Round ${this.round}`, 500,60,60);\\n    }\\n\\n    draw() {\\n        if (this.p1Hp.len <= 0) {\\n            this.gameover();\\n        } else {\\n            this.setup();\\n            if (this.enemy.alive) {\\n                this.update();\\n            } else {\\n                this.roundFinished();\\n            }\\n            // if (this.start) {\\n            //     this.enemy.update(this.player.x);\\n            // }\\n        }\\n    }\\n}\\n\\nexport default TrainMode\\n\",\"import vsMode from './vsMode.js';\\nimport Background from './background.js';\\nimport trainMode from './trainMode.js';\\nimport Input from './input.js';\\nimport VsMode from \\\"./vsMode\\\";\\nimport Sound from \\\"./sound\\\";\\n\\nclass Game {\\n  constructor(ctx) {\\n    this.ctx = ctx;\\n    this.background = new Background(this.ctx);\\n    this.play = this.play.bind(this);\\n    this.input = new Input();\\n    this.input.gameControl();\\n    this.fps = 0;\\n    this.image = new Image();\\n    this.image.src = 'https://i.pinimg.com/originals/f6/c4/51/f6c4516c11809f1b3550e0c68abfef89.gif';\\n    this.test = 70;\\n    this.time = 60;\\n    this.training = false;\\n    this.vs = false;\\n    this.vsMode = null;\\n    this.trainMode = null;\\n    this.round = 1;\\n    this.box = [];\\n    this.canvas = document.getElementById(\\\"MyCanvas\\\");\\n    this.transparent = 1;\\n    this.textX = 1000;\\n    this.sound = new Sound();\\n    this.sControl = false;\\n  }\\n\\n  intro() {\\n    this.image.onload = () => {\\n      this.ctx.drawImage(this.image, 0, 0, 1000, 500);\\n      this.ctx.font = \\\"40px StreetFigther\\\";\\n      this.ctx.fillStyle = \\\"black\\\";\\n      this.ctx.textAlign = \\\"center\\\";\\n      this.ctx.fillText(`Best Street Fighter`, 500, 200);\\n      this.ctx.font = \\\"20px Acme\\\";\\n      this.setup();\\n    }\\n  }\\n\\n  mouseEvent() {\\n    this.canvas.addEventListener(\\\"mousemove\\\", e => {\\n      this.canvas.style.cursor = \\\"default\\\";\\n      this.box.forEach(obj => {\\n        if (e.layerX >= obj.x - obj.w && e.layerX <= obj.x + obj.w &&\\n          e.layerY >= obj.y - obj.h && e.layerY <= obj.y + obj.h) {\\n          if (!this.input.restart) {\\n            this.canvas.style.cursor = \\\"pointer\\\"\\n          }\\n        }\\n      })\\n    }, false);\\n  }\\n  clickEvent() {\\n    this.canvas.addEventListener(\\\"click\\\", e => {\\n      this.box.forEach(obj => {\\n        if (e.layerX >= obj.x - obj.w && e.layerX <= obj.x + obj.w &&\\n            e.layerY >= obj.y - obj.h && e.layerY <= obj.y + obj.h) {\\n          if (!this.input.restart) {\\n            if (obj.mode === \\\"vs\\\") {\\n              this.vs = true;\\n              this.input.restart = true;\\n              this.vsMode = new VsMode(this.ctx);\\n            } else if (obj.mode === \\\"train\\\") {\\n              this.trainMode = new trainMode(this.ctx);\\n              this.input.restart = true;\\n              this.training = true;\\n            }\\n          }\\n        }\\n      })\\n    }, false)\\n  }\\n  createBox(text,x,y,h, mode) {\\n    this.ctx.font = \\\"20px StreetFighter\\\";\\n    this.ctx.fillText(text, x,y);\\n    let w = this.ctx.measureText(text).width / 2;\\n    const boxObj = {\\n      x,y,h,w,mode\\n    };\\n    this.box.push(boxObj)\\n  }\\n\\n  setup() {\\n    this.createBox(\\\"1 Player Mode\\\", 500, 300, 20, \\\"train\\\");\\n    this.createBox(\\\"2 Player Mode\\\", 500, 350, 20, \\\"vs\\\");\\n  }\\n\\n  clock() {\\n    this.ctx.textAlign = \\\"center\\\";\\n    this.ctx.fillStyle = \\\"red\\\";\\n    this.ctx.font=\\\"40px Acme\\\";\\n    this.fps++;\\n    if (this.fps > 70) {\\n      this.time--;\\n      this.fps = 0;\\n    }\\n    this.ctx.fillText(`${this.time}`,500,60);\\n  }\\n\\n\\n  roundStart() {\\n    this.ctx.save();\\n    this.ctx.font = \\\"70px StreetFighter\\\";\\n    this.ctx.fillStyle = \\\"black\\\";\\n    this.ctx.fillText(` Round ${this.round} Start`, this.textX,150);\\n    this.textX-= 10;\\n    this.ctx.restore();\\n    if (this.textX <= 0) {\\n      if (this.training) {\\n      this.trainMode.start = true;\\n      }\\n    } else {\\n      this.sControl = true;\\n    }\\n    // this.transparent-= 0.01;\\n  }\\n\\n\\n  play() {\\n    if (this.input.restart) {\\n      this.clock();\\n      this.background.draw();\\n      this.roundStart();\\n      if (this.training) {\\n        this.trainMode.draw();\\n      }\\n      else if (this.vs) {\\n        this.vsMode.gamefun();\\n      }\\n    }\\n\\n    requestAnimationFrame(this.play);\\n  }\\n\\n}\\n\\nexport default Game;\\n\",\"class Music {\\n  constructor() {\\n    this.bgm = document.getElementById(\\\"myAudio\\\");\\n    this.bgsound = document.getElementById(\\\"music-button\\\");\\n    this.icon = document.getElementById(\\\"icon\\\");\\n\\n\\n  }\\n\\n\\n\\n  musicAction() {\\n    this.bgsound.addEventListener(\\\"click\\\",() => {\\n      if (this.bgm.paused) {\\n        this.bgm.play();\\n        this.icon.className = \\\"fas fa-volume-up\\\"\\n      }\\n      else {\\n        this.bgm.pause();\\n        this.icon.className = \\\"fas fa-volume-off\\\"\\n      }\\n    })\\n  }\\n\\n\\n}\\n\\nexport default Music\\n\",\"import Game from './game.js';\\nimport Music from './music.js'\\n\\n\\ndocument.addEventListener(\\\"DOMContentLoaded\\\", () => {\\n  const canvas = document.getElementById(\\\"MyCanvas\\\");\\n  canvas.width = 1000;\\n  canvas.height = 500;\\n  const ctx = canvas.getContext(\\\"2d\\\");\\n\\n\\n  const game = new Game(ctx);\\n  const music = new Music();\\n  game.intro();\\n  game.mouseEvent();\\n  game.clickEvent();\\n  music.musicAction();\\n\\n  game.play();\\n\\n});\\n\"]}","code":"!function(t){var s={};function i(e){if(s[e])return s[e].exports;var h=s[e]={i:e,l:!1,exports:{}};return t[e].call(h.exports,h,h.exports,i),h.l=!0,h.exports}i.m=t,i.c=s,i.d=function(t,s,e){i.o(t,s)||Object.defineProperty(t,s,{enumerable:!0,get:e})},i.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},i.t=function(t,s){if(1&s&&(t=i(t)),8&s)return t;if(4&s&&\"object\"==typeof t&&t&&t.__esModule)return t;var e=Object.create(null);if(i.r(e),Object.defineProperty(e,\"default\",{enumerable:!0,value:t}),2&s&&\"string\"!=typeof t)for(var h in t)i.d(e,h,function(s){return t[s]}.bind(null,h));return e},i.n=function(t){var s=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(s,\"a\",s),s},i.o=function(t,s){return Object.prototype.hasOwnProperty.call(t,s)},i.p=\"\",i(i.s=0)}([function(t,s,i){\"use strict\";i.r(s);class e{constructor(){this.restart=!1,this.input={LEFT:!1,RIGHT:!1,DOWN:!1,UP:!1,UP_MOVE:!1,ATTACK:!1,REVIVE:!1,KICK:!1,SHOOT:!1,SPECIAL:!1,ANY:!1},this.attack=!1,this.disable=!1,this.counter=0,this.keyHandler=this.keyHandler.bind(this),document.addEventListener(\"keydown\",this.keyHandler),document.addEventListener(\"keyup\",this.keyHandler)}keyHandler(t,s=[65,68,84,89,85,87]){const i=\"keydown\"===t.type;switch(t.keyCode){case s[0]:this.input.LEFT=i;break;case s[1]:this.input.RIGHT=i;break;case s[2]:this.input.ATTACK=i;break;case s[3]:this.input.KICK=i;break;case s[4]:this.input.SPECIAL=i;break;case s[5]:this.input.UP=i}}gameControl(){this.input.REVIVE=!1}}var h=class{constructor(){this.sound=document.createElement(\"audio\"),this.sound.setAttribute(\"preload\",\"auto\"),this.sound.setAttribute(\"controls\",\"none\"),this.sound.style.display=\"none\"}play(t){this.sound.src=t,this.sound.play().then(()=>console.log())}stop(){this.sound.pause()}};var a=class{constructor(t,s,i,e){this.ctx=t,this.w=40,this.h=40,this.x=s+50*e,this.y=i+35,this.speed=10*e,this.image=new Image,this.image.src=e>0?\"./asset/bullet.png\":\"./asset/bullet_left.png\",this.hit=!1,this.collide=!1,this.sound=new h,this.m=!0}shoot(){this.ctx.drawImage(this.image,this.x,this.y,this.w,this.h),this.x+=this.speed}playSound(){this.sound.play(\"./asset/sound/hadouken.mp3\")}draw(){this.collide||this.shoot()}};class r{constructor(t){this.char=t,this.image=new Image,this.image.src=`./asset/${this.char}/idle.png`,this.maxFrame=3,this.frame=0,this.image.onload=()=>{this.w=this.image.width/(this.maxFrame+1),this.h=this.image.height,this.x=0,this.y=0}}update(t){if(this.x=this.w*this.frame,\"ken\"===this.char)switch(t){case\"jump\":case\"forward_jump\":this.maxFrame=6,this.image.src=`./asset/${this.char}/${t}.png`,this.w;break;case\"special_kick\":this.maxFrame=5,this.image.src=`./asset/${this.char}/${t}.png`;break;case\"kick\":case\"moving\":this.maxFrame=4,this.image.src=`./asset/${this.char}/${t}.png`;break;case\"stun\":case\"dead\":this.maxFrame=3,this.image.src=`./asset/${this.char}/${t}.png`;break;case\"punch\":case\"win\":this.maxFrame=2,this.image.src=`./asset/${this.char}/${t}.png`;break;case\"shot\":this.maxFrame=1,this.image.src=`./asset/${this.char}/${t}.png`;break;case\"block\":this.maxFrame=0,this.image.src=`./asset/${this.char}/${t}.png`;break;default:this.maxFrame=3,this.image.src=`./asset/${this.char}/idle.png`}if(\"ryu\"===this.char)switch(t){case\"special_kick\":this.maxFrame=5,this.image.src=`./asset/${this.char}/${t}.png`;break;case\"moving\":this.maxFrame=4,this.image.src=`./asset/${this.char}/${t}.png`;break;case\"kick\":case\"punch\":case\"shot\":case\"stun\":case\"win\":this.maxFrame=2,this.image.src=`./asset/${this.char}/${t}.png`;break;case\"block\":this.maxFrame=0,this.image.src=`./asset/${this.char}/${t}.png`;break;case\"dead\":this.maxFrame=3,this.image.src=`./asset/${this.char}/${t}.png`;break;default:this.maxFrame=3,this.image.src=`./asset/${this.char}/idle.png`}}}var n=class{constructor(t,s=300,i,a){this.ctx=t,this.keyboard=new e,this.frame=0,this.x=s,this.y=300,this.speed=0,this.stop=0,this.move=5,this.bullet=null,this.fps=0,this.stun=!1,this.block=!1,this.sprite=new r(i),this.dir=a,this.temp=\"\",this.desc=\"\",this.sControl=!0,this.bControl=!0,this.sound=new h,this.delay=0,this.dead=!1,this.gravity=.05,this.gravitySpeed=0,this.w=this.sprite.w,this.h=this.sprite.h,this.imagePosX=this.sprite.x,this.imagePosY=this.sprite.y,this.onGround=!1,this.jumpPower=-8,this.dy=0,this.world={gravity:.2,drag:.999,groundDrag:.9,ground:400}}fpsControl(t){this.fps++,this.desc!==this.temp&&(this.desc=this.temp,this.frame=0),this.sprite.frame=this.frame,this.fps>t&&(this.fps=0,this.dead||this.keyboard.attack?this.frame>this.sprite.maxFrame?this.frame=this.sprite.maxFrame:this.frame++:(this.frame++,this.frame>this.sprite.maxFrame&&(this.frame=0)))}draw(){this.fpsControl(20),this.bullet&&this.bullet.draw(),console.log(this.imagePosX),this.ctx.save(),this.ctx.scale(this.dir,1),this.ctx.drawImage(this.sprite.image,this.imagePosX,this.imagePosY,this.w,this.h,this.dir*this.x,this.y,this.dir*this.w*2,2*this.h),this.ctx.restore()}updateDir(t){this.x<t?(this.dir=1,this.keyboard.input.LEFT&&this.dullMove(t)&&(this.speed=-this.move)):(this.dir=-1,this.keyboard.input.RIGHT&&this.dullMove(t)&&(this.speed=this.move))}moveAction(t){this.keyboard.input.LEFT||this.keyboard.input.RIGHT?(this.keyboard.input.UP&&(this.sprite.update(\"forward_jump\"),this.temp=\"forward_jump\"),this.block?(this.sprite.update(\"block\"),this.move=.5):(this.sprite.update(\"moving\"),this.move=5),this.updateDir(t),this.keyboard.input.LEFT&&!this.dullMove(t)?this.speed=-this.move:this.keyboard.input.RIGHT&&!this.dullMove(t)&&(this.speed=this.move)):this.keyboard.input.UP?(this.sprite.update(\"jump\"),this.temp=\"jump\"):this.stun&&(this.sprite.update(\"stun\"),this.move=0,this.frame===this.sprite.maxFrame&&(this.stun=!1))}specialAction(){this.keyboard.input.SPECIAL&&(this.keyboard.input.ATTACK&&!this.keyboard.input.KICK?(this.sprite.update(\"shot\"),this.temp=\"shot\",this.bullet||(this.bullet=new a(this.ctx,this.x,this.y,this.dir)),this.keyboard.input.SHOOT&&(this.bullet.playSound(),this.keyboard.input.SHOOT=!1),this.delay++,this.delay>20&&(this.keyboard.input.SPECIAL=!1,this.keyboard.input.ATTACK=!1)):!this.keyboard.input.ATTACK&&this.keyboard.input.KICK?(this.sprite.update(\"special_kick\"),this.temp=\"special_kick\",this.delay++,this.x+=2*this.dir,this.delay>40&&(this.keyboard.input.SPECIAL=!1,this.keyboard.input.KICK=!1)):(this.delay=0,this.keyboard.input.SHOOT=!0))}attackAction(){this.keyboard.input.ATTACK&&!this.stun?(this.sprite.update(\"punch\"),this.temp=\"punch\"):this.keyboard.input.KICK&&!this.stun&&(this.sprite.update(\"kick\"),this.temp=\"kick\",this.frame>=this.sprite.maxFrame&&(this.keyboard.input.KICK=!1)),this.specialAction()}action(t){this.temp=\"idle\",this.sprite.update(),this.speed=this.stop,this.moveAction(t),this.attackAction()}dullMove(t){return Math.abs(this.x-t)<90}borderLimit(){this.x>875&&(this.keyboard.input.LEFT?this.speed=-this.move:this.speed=0),this.x<0&&(this.keyboard.input.RIGHT?this.speed=this.move:this.speed=0)}playSound(t){this.sControl&&(this.sound.play(t),this.sControl=!1)}meleeSound(t){!this.keyboard.input.ATTACK&&!this.keyboard.input.KICK||this.keyboard.input.SPECIAL?this.keyboard.input.KICK&&this.keyboard.input.SPECIAL?this.playSound(\"./asset/sound/s_kick.mp3\"):this.sControl=!0:Math.abs(this.x-t.x)<100?this.playSound(\"./asset/sound/punch_hit.wav\"):this.playSound(\"./asset/sound/punch_miss.wav\")}rangeSound(t){this.bullet&&(Math.abs(this.bullet.x-t.x)<50||this.bullet.x>1e3||this.bullet.x<0?(this.bControl&&(this.bControl=!1),this.bullet.collide=!0,this.bullet=null):this.bControl=!0)}soundControl(t){this.meleeSound(t),this.rangeSound(t)}update(t=0){this.action(t),this.borderLimit(),this.x+=this.speed,this.keyboard.input.UP&&this.onGround&&(this.dy=this.jumpPower),this.dy+=this.world.gravity,this.dy*=this.world.drag,this.y+=this.dy,this.imagePosX=this.sprite.w*this.frame,this.imagePosY=0,this.w=this.sprite.w,this.h=this.sprite.h,this.hitBottom()}hitBottom(){this.y+90>=this.world.ground?(this.y=this.world.ground-90,this.dy=0,this.onGround=!0):(this.keyboard.input.RIGHT||this.keyboard.input.LEFT?(this.sprite.update(\"forward_jump\"),this.temp=\"forward_jump\"):(this.sprite.update(\"jump\"),this.temp=\"jump\"),this.onGround=!1)}removePlayer(){this.sprite.update(\"dead\"),this.dead=!0}win(){this.sprite.update(\"win\"),this.dead=!0}};class o{constructor(t,s,i,e){this.ctx=t,this.x=s,this.y=i,this.len=e,this.fixlen=e,this.center=(this.x+this.fixlen)/2}draw(t=\"yellow\"){this.ctx.fillStyle=\"red\",this.ctx.fillRect(this.center,this.y,this.fixlen,30),this.ctx.fillStyle=t,this.ctx.fillRect(this.center,this.y,this.len,30),this.ctx.strokeStyle=\"white\",this.ctx.lineWidth=2,this.ctx.strokeRect(this.center,this.y,this.fixlen,30)}block(t=.05){this.len-=t}hit(t=1){this.len-=t}}var p=class{constructor(t){this.ctx=t,this.p1=new n(this.ctx,300,\"ken\",1),this.p2=new n(this.ctx,700,\"ryu\",-1),this.p1.keyboard.movement(),this.p2.keyboard.movement([37,39,74,75,76]),this.p1hp=new o(this.ctx,0,50,250),this.p2hp=new o(this.ctx,1e3,50,250),this.over=!1,this.time=99}stunned(){this.p1.keyboard.attack&&(this.p2.stun=!0,this.p2.x++),this.p2.keyboard.attack&&(this.p1.stun=!0,this.p1.x--)}bulControl(t,s){t&&(Math.abs(t.x-s.x)<100?this.p2.keyboard.input.RIGHT?this.p2.block=!0:this.p1.keyboard.input.LEFT?this.p1.block=!0:s.stun=!0:s.stun=!1)}fightControl(){this.p2.block=!1,this.p1.block=!1,Math.abs(this.p1.x-this.p2.x)<100&&(this.p1.keyboard.attack||this.p2.keyboard.attack)&&(this.p1.keyboard.attack&&this.p2.keyboard.input.RIGHT&&(this.p2.block=!0,this.p2.x++),this.p2.keyboard.attack&&this.p1.keyboard.input.LEFT&&(this.p1.block=!0,this.p1.x--),this.stunned()),this.bulControl(this.p1.bullet,this.p2),this.bulControl(this.p2.bullet,this.p1)}hpControl(){this.p1.stun&&this.p1hp.hit(),this.p1.block&&this.p1hp.block(),this.p2.stun&&this.p2hp.hit(),this.p2.block&&this.p2hp.block()}playersCollision(){this.fightControl(),this.p1.soundControl(this.p2),this.p2.soundControl(this.p1),this.hpControl()}draw(){this.p1.draw(),this.p2.draw(),this.p1hp.draw(),this.p2hp.draw()}update(){this.p1.update(this.p2.x),this.p2.update(this.p1.x),this.playersCollision()}gameover(){this.ctx.font=\"40px Acme\",this.ctx.fillStyle=\"red\",this.ctx.textAlign=\"center\",this.ctx.fillText(\"You Win\",500,150)}gamefun(){this.p1hp.len>=0&&this.p2hp.len>=0&&this.time>0?this.update():this.gameover(),this.draw(),this.gameConstraint()}gameConstraint(){this.p1hp.len<=0?(this.p2.win(),this.p1.removePlayer(),this.over=!0):this.p2hp.len<=0&&(this.p1.win(),this.p2.removePlayer(),this.over=!0)}};class l{constructor(t){this.ctx=t,this.maxWidth=1e3,this.maxHeight=500,this.image=new Image,this.image.src=\"https://i.pinimg.com/originals/91/64/01/9164016aa77fa969f71800b9ba8c32b4.gif\"}draw(){this.ctx.drawImage(this.image,0,0,this.maxWidth,this.maxHeight)}}class d extends n{constructor(t,s){super(),this.x=t,this.ctx=s,this.rw=140,this.rh=160,this.y=300,this.alive=!0,this.frame=0,this.transparent=1,this.fps=0,this.dir=1,this.attack=!1,this.counter=0,this.sprite=new r(\"ryu\"),this.aType=[\"punch\",\"kick\",\"special_kick\"],this.currentAttack=\"kick\",this.dull=!1,this.blocked=!1,this.stop=0,this.move=2,this.bullet=null,this.sControl=!0,this.random=Math.random()}fpsControl(t){this.fps++,this.fps>t&&(this.fps=0,0===this.frame&&(this.random=Math.random()),this.alive?(this.frame++,this.frame>this.sprite.maxFrame&&(this.frame=0)):this.frame>=this.sprite.maxFrame?this.frame=this.sprite.maxFrame:this.frame++)}setup(t){this.fpsControl(15),this.ctx.save(),this.ctx.globalAlpha=this.transparent,this.ctx.scale(this.dir,1),this.ctx.drawImage(this.sprite.image,this.sprite.w*this.frame,0,this.sprite.w,this.sprite.h,this.dir*this.x,this.y,this.dir*this.rw,this.rh),this.ctx.restore()}stun(){this.sprite.update(\"stun\")}shot(){this.sprite.update(\"shot\")}toggleStatus(t,s){if(this.counter>t){switch(s){case\"attack\":this.attack=!this.attack;break;case\"move\":this.dull=!1;break;case\"block\":this.blocked=!1}this.counter=0}}updateAttackSprite(){const t=Math.floor(3*Math.random());this.currentAttack=this.aType[t]}attacksound(){this.playSound(\"./asset/sound/punch_hit.mp3\")}updateX(t,s,i=1){this.x<t?this.x+=s*i:this.x-=s*i}update(t){this.sControl=!0,this.dull||this.blocked?(this.blocked?(this.sprite.update(\"block\"),this.toggleStatus(15,\"block\")):this.dull&&(this.sprite.update(\"stun\"),this.toggleStatus(3,\"move\")),this.counter++,this.updateAttackSprite()):(this.sControl&&(this.sControl=!1),this.attack?(\"special_kick\"===this.currentAttack&&this.updateX(t,1),this.sprite.update(`${this.currentAttack}`)):Math.abs(this.x-t)>240?this.random<.4?(this.sprite.update(\"shot\"),0===this.frame&&(this.bullet=new a(this.ctx,this.x,this.y,-1))):(this.updateX(t,this.move),this.sprite.update(\"moving\")):Math.abs(this.x-t)>90?this.random<.4?(this.updateX(t,this.move),this.sprite.update(\"moving\")):(this.updateX(t,this.stop),this.sprite.update()):this.sprite.update()),this.bullet&&this.bullet.draw()}updateDir(t){t>this.x?this.dir=1:this.dir=-1}end(){this.transparent-=.05,this.sprite.update(\"dead\")}draw(t){this.updateDir(t),this.setup(t),this.alive||this.end()}}var c=class{constructor(t){this.ctx=t,this.test=100,this.kill=0,this.player=new n(this.ctx,300,\"ken\",1),this.enemy=new d(800,this.ctx),this.image=new Image,this.sound=new h,this.p1Hp=new o(this.ctx,0,50,250),this.enemyHp=new o(this.ctx,1e3,50,250),this.playSound=!0,this.enemyStr=1,this.respTime=30,this.prop=Math.random(),this.hitChance=.3,this.sound=new h,this.splay=!0,this.start=!1,this.round=1,this.counter=0}gameover(){this.image.src=\"https://static.comicvine.com/uploads/original/11111/111112704/3860536-ron_vs_ken_by_eastmonkey.jpg\",this.ctx.drawImage(this.image,0,0,1e3,500),this.ctx.font=\"40px StreetFighter\",this.ctx.fillStyle=\"black\",this.ctx.textAlign=\"center\",this.ctx.fillText(\"Game Over\",500,150),this.totalScore()}totalScore(){this.test--,0===this.test&&this.sound.play(\"./asset/sound/game_finished.wav\"),this.test<=20&&this.ctx.fillText(`Total Kill : ${this.kill}`,500,290)}enemydead(t,s=90){Math.abs(t-this.enemy.x)<s?(this.prop>this.hitChance?(this.enemy.dull=!0,this.enemyHp.hit()):(this.enemy.blocked=!0,this.enemyHp.block()),this.enemyHp.len<=0&&(this.enemy.alive=!1),this.player.keyboard.input.KICK&&this.player.keyboard.input.SPECIAL&&this.enemy.updateX(this.player.x,1,-2)):this.prop=Math.random()}playerToEnemy(){this.player.keyboard.input.ATTACK||this.player.keyboard.input.KICK?this.enemydead(this.player.x,90):this.player.bullet&&this.enemydead(this.player.bullet.x,80)}enemyToPlayer(t){t&&Math.abs(t.x-this.player.x)<100?(void 0!==t.collide&&(t.collide=!0),console.log(t.x,this.player.x),(this.enemy.dull||this.enemy.blocked)&&(this.enemy.attack=!1),this.enemy.toggleStatus(this.respTime,\"attack\"),this.enemy.counter++,(this.enemy.attack||this.enemy.bullet)&&(this.player.keyboard.input.LEFT?this.player.x<t.x&&(this.player.block=!0,this.p1Hp.block()):this.player.keyboard.input.RIGHT?this.player.x>t.x&&(this.player.block=!0,this.p1Hp.block()):(this.p1Hp.hit(this.enemyStr),this.player.stun=!0))):(this.enemy.attack=!1,this.player.stun=!1,this.player.block=!1)}collision(){this.playerToEnemy(),this.enemyToPlayer(this.enemy)}respawn(){this.enemy.transparent<=0&&(this.sound.play(\"./asset/sound/die.wav\"),this.enemyHp.len=200,this.enemy=new d(800,this.ctx),this.enemyStr+=.1,this.respTime--,this.hitChance+=.02,this.round++)}pHp(){this.ctx.fillStyle=\"red\",this.p1Hp.draw(\"yellow\"),this.enemyHp.draw(\"yellow\")}setup(){this.pHp(),this.player.draw()}update(){this.roundText(),this.player.soundControl(this.enemy),this.player.update(this.enemy.x),this.player.keyboard.disable=this.player.stun}roundFinished(){this.player.win(),this.start=!1,this.splay&&(this.sound.play(\"./asset/sound/youwin.wav\"),this.splay=!1)}roundText(){this.ctx.textAlign=\"center\",this.ctx.fillStyle=\"red\",this.ctx.fillText(`Round ${this.round}`,500,60,60)}draw(){this.p1Hp.len<=0?this.gameover():(this.setup(),this.enemy.alive?this.update():this.roundFinished())}};var u=class{constructor(t){this.ctx=t,this.background=new l(this.ctx),this.play=this.play.bind(this),this.input=new e,this.input.gameControl(),this.fps=0,this.image=new Image,this.image.src=\"https://i.pinimg.com/originals/f6/c4/51/f6c4516c11809f1b3550e0c68abfef89.gif\",this.test=70,this.time=60,this.training=!1,this.vs=!1,this.vsMode=null,this.trainMode=null,this.round=1,this.box=[],this.canvas=document.getElementById(\"MyCanvas\"),this.transparent=1,this.textX=1e3,this.sound=new h,this.sControl=!1}intro(){this.image.onload=()=>{this.ctx.drawImage(this.image,0,0,1e3,500),this.ctx.font=\"40px StreetFigther\",this.ctx.fillStyle=\"black\",this.ctx.textAlign=\"center\",this.ctx.fillText(\"Best Street Fighter\",500,200),this.ctx.font=\"20px Acme\",this.setup()}}mouseEvent(){this.canvas.addEventListener(\"mousemove\",t=>{this.canvas.style.cursor=\"default\",this.box.forEach(s=>{t.layerX>=s.x-s.w&&t.layerX<=s.x+s.w&&t.layerY>=s.y-s.h&&t.layerY<=s.y+s.h&&(this.input.restart||(this.canvas.style.cursor=\"pointer\"))})},!1)}clickEvent(){this.canvas.addEventListener(\"click\",t=>{this.box.forEach(s=>{t.layerX>=s.x-s.w&&t.layerX<=s.x+s.w&&t.layerY>=s.y-s.h&&t.layerY<=s.y+s.h&&(this.input.restart||(\"vs\"===s.mode?(this.vs=!0,this.input.restart=!0,this.vsMode=new p(this.ctx)):\"train\"===s.mode&&(this.trainMode=new c(this.ctx),this.input.restart=!0,this.training=!0)))})},!1)}createBox(t,s,i,e,h){this.ctx.font=\"20px StreetFighter\",this.ctx.fillText(t,s,i);const a={x:s,y:i,h:e,w:this.ctx.measureText(t).width/2,mode:h};this.box.push(a)}setup(){this.createBox(\"1 Player Mode\",500,300,20,\"train\"),this.createBox(\"2 Player Mode\",500,350,20,\"vs\")}clock(){this.ctx.textAlign=\"center\",this.ctx.fillStyle=\"red\",this.ctx.font=\"40px Acme\",this.fps++,this.fps>70&&(this.time--,this.fps=0),this.ctx.fillText(`${this.time}`,500,60)}roundStart(){this.ctx.save(),this.ctx.font=\"70px StreetFighter\",this.ctx.fillStyle=\"black\",this.ctx.fillText(` Round ${this.round} Start`,this.textX,150),this.textX-=10,this.ctx.restore(),this.textX<=0?this.training&&(this.trainMode.start=!0):this.sControl=!0}play(){this.input.restart&&(this.clock(),this.background.draw(),this.roundStart(),this.training?this.trainMode.draw():this.vs&&this.vsMode.gamefun()),requestAnimationFrame(this.play)}};var m=class{constructor(){this.bgm=document.getElementById(\"myAudio\"),this.bgsound=document.getElementById(\"music-button\"),this.icon=document.getElementById(\"icon\")}musicAction(){this.bgsound.addEventListener(\"click\",()=>{this.bgm.paused?(this.bgm.play(),this.icon.className=\"fas fa-volume-up\"):(this.bgm.pause(),this.icon.className=\"fas fa-volume-off\")})}};document.addEventListener(\"DOMContentLoaded\",()=>{const t=document.getElementById(\"MyCanvas\");t.width=1e3,t.height=500;const s=t.getContext(\"2d\"),i=new u(s),e=new m;i.intro(),i.mouseEvent(),i.clickEvent(),e.musicAction(),i.play()})}]);","extractedComments":[]}